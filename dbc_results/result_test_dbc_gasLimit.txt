[0m[[0minfo[0m] [0mLoading project definition from /Users/miniguez/Documents/MIS/Reporte_Tecnico/mantis/project[0m
[0m[[0minfo[0m] [0mSet current project to mantis (in build file:/Users/miniguez/Documents/MIS/Reporte_Tecnico/mantis/)[0m
[0m[[0minfo[0m] [0m[32mBlockImportSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mImporting blocks[0m[0m
[0m[[0minfo[0m] [0m[32m- should ignore existing block (1 second, 357 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should import a block to top of the main chain (31 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should handle exec error when importing to top (18 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should reorganise chain when a newly enqueued block forms a better branch (162 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should handle error when trying to reorganise chain (50 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should report an orphaned block (18 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should validate blocks prior to import (13 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mBranch resolution[0m[0m
[0m[[0minfo[0m] [0m[32m- should report an invalid branch when headers do not form a chain (19 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should report an invalid branch when headers do not reach the current best block number (18 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should report an unknown branch in the parent of the first header is unknown (12 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should report new better branch found when headers form a branch of higher difficulty than corresponding know headers (35 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should report no need for a chain switch the headers do not have difficulty greater than currently known branch (23 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should correctly handle a branch that goes up to the genesis block (31 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should report an unknown branch if the included genesis header is different than ours (12 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should not include common prefix as result when finding a new better branch (22 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should correctly import block with ommers and ancestor in block queue (89 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mAuthInitiateMessageSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mAuthInitiateMessage[0m[0m
[0m[[0minfo[0m] [0m[32m- should encode and decode itself (129 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should decode predefined message (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32mFrameCodecSpec:[0m[0m
[0m[[0minfo[0m] [0m[32m- should send message and receive a response (241 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mRLPSuite:[0m[0m
[0m[[0minfo[0m] [0m[32m- nextElementIndex of empty data (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Decoding of empty data (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Decoding failure: Passing RLPValue when RLPList is expected (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Decoding failure: Passing RLPList when RLPValue is expected (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Decoding failure: Passing an RLPValue larger than expected (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Byte Encoding (66 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Short Encoding (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- String encoding (248 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Int Encoding (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Long Encoding (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- BigInt Encoding (13 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Byte Array Encoding (11 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Encode ByteString (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Encode Seq (11 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Encode Empty List (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Encode Short  List (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Encode Long  List (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- Encode multilist (10 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Encode Empty List Of List (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Encode Rep Of Two List Of List (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- https://github.com/ethereum/tests/blob/master/rlptest.txt (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SimpleBlock encoding (10 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Partial Data Parse Test (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Multiple partial decode (2 milliseconds)[0m[0m
15:21:26.728 [io-iohk-ethereum-jsonrpc-server-JsonRpcServerSpec-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
[0m[[0minfo[0m] [0m[32mJsonRpcServerSpec:[0m[0m
[0m[[0minfo[0m] [0m[32m- should pass valid json request to controller (771 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should pass valid batch json request to controller (40 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return BadRequest when malformed request is received (36 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return a CORS Error (28 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should accept CORS Requests (16 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mBlockHeaderSpec:[0m[0m
[0m[[0minfo[0m] [0m[32m- Encoding of block header without nonce (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32mAesCtrSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mAES_CTR[0m[0m
[0m[[0minfo[0m] [0m[32m- should correctly evaluate for the test vectors (40 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should decrypt encrypted random values (20 milliseconds)[0m[0m
15:21:27.995 [personal-service-test-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:21:28.167 [personal-service-test-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:21:28.284 [personal-service-test-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:21:28.398 [personal-service-test-akka.actor.default-dispatcher-7] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:21:28.616 [personal-service-test-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:21:28.741 [personal-service-test-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:21:28.849 [personal-service-test-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:21:28.967 [personal-service-test-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:21:29.091 [personal-service-test-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:21:32.200 [personal-service-test-akka.actor.default-dispatcher-6] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:21:32.355 [personal-service-test-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:21:35.417 [personal-service-test-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:21:35.519 [personal-service-test-akka.actor.default-dispatcher-5] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:21:35.612 [personal-service-test-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:21:35.764 [personal-service-test-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:21:35.857 [personal-service-test-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:21:35.948 [personal-service-test-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:21:35.980 [personal-service-test-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:21:36.077 [personal-service-test-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:21:36.227 [personal-service-test-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:21:36.323 [personal-service-test-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:21:36.447 [personal-service-test-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:21:36.541 [personal-service-test-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:21:38.696 [personal-service-test-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:21:38.803 [personal-service-test-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:21:38.899 [personal-service-test-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
[0m[[0minfo[0m] [0m[32mPersonalServiceSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mPersonalService[0m[0m
[0m[[0minfo[0m] [0m[32m- should import private keys (206 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should create new accounts (115 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should list accounts (119 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should translate KeyStore errors to JsonRpc errors (223 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return an error when trying to import an invalid key (105 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should unlock an account given a correct passphrase (123 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should send a transaction (given sender address and a passphrase) (123 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should send a transaction when having pending txs from the same sender (120 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should fail to send a transaction given a wrong passphrase (3 seconds, 107 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should send a transaction (given sender address and using an unlocked account) (162 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should fail to send a transaction when account is locked (3 seconds, 44 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should lock an unlocked account (113 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should sign a message when correct passphrase is sent (94 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should sign a message using an unlocked account (153 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return an error if signing a message using a locked account (96 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return an error when signing a message if passphrase is wrong (91 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return an error when signing if unexistent address is sent (26 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should recover address form signed message (101 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should allow to sign and recover the same message (148 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should produce not chain specific transaction before eip155 (97 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should produce chain specific transaction after eip155 (117 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return an error when importing a duplicated key (98 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should unlock an account given a correct passphrase for specified duration (2 seconds, 152 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should delete existing wallet (110 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return error when deleting not existing wallet (91 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should handle changing passwords (215 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mReceiptStorageSuite:[0m[0m
[0m[[0minfo[0m] [0m[32m- ReceiptStorage insert (2 seconds, 340 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- ReceiptStorage delete (2 seconds, 709 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mPrecompiledContractsSpec:[0m[0m
[0m[[0minfo[0m] [0m[32m- ECDSARECOVER (354 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- ECDSARECOVER_Malformed_Recovery_ID_V (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SHA256 (8 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- RIPEMD160 (15 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- IDENTITY (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mCallOpcodesSpecPostEip161:[0m[0m
[0m[[0minfo[0m] [0m[32mCALL[0m[0m
[0m[[0minfo[0m] [0m[32m  when call depth limit is reached[0m[0m
[0m[[0minfo[0m] [0m[32m  - should not modify world state (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when call value is greater than balance[0m[0m
[0m[[0minfo[0m] [0m[32m  - should not modify world state (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when external contract terminates abnormally[0m[0m
[0m[[0minfo[0m] [0m[32m  - should modify only touched accounts in world state (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m  when calling an empty[0m[0m
[0m[[0minfo[0m] [0m[32m  - should consume correct gas (refund call gas, add new account modifier) when transferring value to Empty Account (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should consume correct gas when transferring no value to Empty Account (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mCodeStorageSuite:[0m[0m
[0m[[0minfo[0m] [0m[32m- CodeStorage insert (26 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- CodeStorage delete (38 milliseconds)[0m[0m
15:21:44.732 [BlockBroadcastSpec_System-akka.actor.default-dispatcher-5] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:21:47.792 [BlockBroadcastSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:21:50.807 [BlockBroadcastSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:21:53.842 [BlockBroadcastSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:21:56.881 [BlockBroadcastSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
[0m[[0minfo[0m] [0m[32mBlockBroadcastSpec:[0m[0m
[0m[[0minfo[0m] [0m[32m- should send a new block when it is not known by the peer (known by comparing total difficulties) (3 seconds, 56 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should not send a new block when it is known by the peer (known by comparing total difficulties) (3 seconds, 16 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should send a new block when it is not known by the peer (known by comparing max block number) (3 seconds, 37 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should not send a new block only when it is known by the peer (known by comparing max block number) (3 seconds, 36 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should send block hashes to all peers while the blocks only to sqrt of them (3 seconds, 89 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mSyncStateSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mSyncState[0m[0m
[0m[[0minfo[0m] [0m[32m- should prepend mpt nodes when enqueueing them (11 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mReadOnlyNodeStorageSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mReadOnlyNodeStorage[0m[0m
[0m[[0minfo[0m] [0m[32m- should not update dataSource (9 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should be able to read from underlying storage but not change it (30 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mBlockRewardSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mReward Calculation[0m[0m
[0m[[0minfo[0m] [0m[32m- should pay to the miner if no ommers included (26 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mReward[0m[0m
[0m[[0minfo[0m] [0m[32m- should be paid to the miner even if the account doesn't exist (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mReward Calculation[0m[0m
[0m[[0minfo[0m] [0m[32m- should be paid if ommers are included in block (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mReward[0m[0m
[0m[[0minfo[0m] [0m[32m- should be paid if ommers are included in block even if accounts don't exist (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mMerklePatriciaTrieSuite:[0m[0m
[0m[[0minfo[0m] [0m[32m- PatriciaTrie insert and get (236 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PatriciaTrie delete (119 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Trie insert should have the same root independently on the order its pairs are inserted (132 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Remove key from an empty tree (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- Remove a key that does not exist (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- Insert only one (key, value) pair to a trie and then deleted (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- Insert two (key, value) pairs with the first hex not in common (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- Insert two (key, value) pairs with one hex or more in common (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- Insert two (key, value) pairs with the same key (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Insert 3 (key, value) pairs with different first hex (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- Multiple insertions (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Multiple insertions and the removals (13 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Insert 3 (key-value) pairs with a common prefix (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Insert 2 (key-value) pairs with one hex in common and then delete one of them (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Insert 2 (key-value) pairs with more than one hex in common and then delete one of them (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- Insert 2 (key-value) pairs with more than one hex in common and then delete one of them, has the same result as only adding the pair left (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- Insert 2 (key-value) pairs with nothing in common and then delete one of them, has the same result as only adding the pair left (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- Remove of a trie with an extension whose next is not on source (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Get in an empty trie (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Insert with an empty key in a branch node (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Remove of a key (not in trie) whose value should be in a branch node (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- Remove of a key (not in trie) that should be in the child of a BranchNode that is not present (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- Invalid root hash should return an error accordingly (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- testDeleteCompletellyDiferentItems (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- storageHashCalc_1 (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- EthereumJ compatibility - Empty Trie (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- EthereumJ compatibility - LeafNode Hash (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- EtheruemJ compatibility - BranchNode hash (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- EthereumJ compatibility - ExtensionNode hash (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- EthereumJ compatibility - BranchNode with extension hash (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- Using empty root as hash allow to create a MPT (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- PatriciaTrie insert causes node duplicated and removal of one of them should not fail (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Creating temporal extension node already used in MPT doesn't cause missing node while pruning (14 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Creating temporal leaf node already used in MPT doesn't cause missing node while pruning (6 milliseconds)[0m[0m
15:22:00.752 [DiscoverySpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:00.925 [DiscoverySpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:01.491 [DiscoverySpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:01.543 [DiscoverySpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
[0m[[0minfo[0m] [0m[32mPeerDiscoveryManagerSpec:[0m[0m
[0m[[0minfo[0m] [0m[32m- should correctly respond to Ping Message (174 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should correctly respond to Pong Message (567 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should correctly respond to FindNode Message (50 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should correctly respond to neighbours Message (57 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mEncryptedKeySpec:[0m[0m
[0m[[0minfo[0m] [0m[32mEncryptedKey[0m[0m
[0m[[0minfo[0m] [0m[32m- should securely store private keys (3 seconds, 327 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should decrypt a key encrypted by Geth (1 second, 884 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should decrypt a key encrypted by Parity (42 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mNewBlockSpec:[0m[0m
[0m[[0minfo[0m] [0m[31m- NewBlock messages are encoded and decoded properly *** FAILED *** (36 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  AssertionError was thrown during property evaluation.[0m[0m
[0m[[0minfo[0m] [0m[31m    Message: assertion failed: Bad value for gasLimit 830026352033709570302946255925861933106850945999676803260670720969119555711[0m[0m
[0m[[0minfo[0m] [0m[31m    Occurred when passed generated values ([0m[0m
[0m[[0minfo[0m] [0m  [0m
[0m[[0minfo[0m] [0m[31m    )[0m[0m
[0m[[0minfo[0m] [0m[32m- NewBlock messages are properly encoded (2 milliseconds)[0m[0m
15:22:06.959 [PeerManagerActorSpec_System-akka.actor.default-dispatcher-5] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:07.115 [PeerManagerActorSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:07.244 [PeerManagerActorSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:07.335 [PeerManagerActorSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:07.472 [PeerManagerActorSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
[0m[[0minfo[0m] [0m[32mPeerManagerSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mPeerManager[0m[0m
[0m[[0minfo[0m] [0m[32m- should try to connect to bootstrap nodes on startup (155 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should retry connections to remaining bootstrap nodes (129 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should publish disconnect messages from peers (89 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should not handle the connection from a peer that's already connected (139 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should handle pending and handshaked incoming peers (148 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mSignedTransactionSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mSignedTransaction[0m[0m
[0m[[0minfo[0m] [0m[32m- should correctly set pointSign for chainId with chain specific signing schema (99 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mEtcHandshakerSpec:[0m[0m
[0m[[0minfo[0m] [0m[32m- should correctly connect during an apropiate handshake if no fork resolver is used (75 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should send status with total difficulty (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should correctly connect during an apropiate handshake if a fork resolver is used and the remote peer has the DAO block (13 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should correctly connect during an apropiate handshake if a fork resolver is used and the remote peer doesn't have the DAO block (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should fail if a timeout happened during hello exchange (10 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should fail if a timeout happened during status exchange (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should fail if a timeout happened during fork block exchange (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should fail if the remote peer doesn't support PV63 (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should fail if a fork resolver is used and the block from the remote peer isn't accepted (5 milliseconds)[0m[0m
15:22:08.321 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:08.414 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:08.472 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-5] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:08.528 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:08.587 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:08.636 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:08.696 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:08.758 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:08.818 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:08.874 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:08.930 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:08.989 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:09.034 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:09.089 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:09.146 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:09.203 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:09.262 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:09.319 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:09.378 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-5] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:09.437 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-5] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:09.496 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:09.552 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:09.609 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:09.659 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:09.678 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:09.725 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:09.782 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:09.840 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:09.899 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-5] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:09.955 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:10.009 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:10.069 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-5] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:10.127 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:10.193 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:10.257 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:10.310 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:10.371 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:10.434 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:10.496 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-5] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:10.553 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-5] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:10.610 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:10.669 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:10.725 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:10.784 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:10.846 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:10.898 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:10.958 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:11.014 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-5] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:11.070 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:11.125 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-5] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:11.174 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-5] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:11.232 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:11.294 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:11.354 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:11.376 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:11.456 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:11.514 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-5] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:11.549 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:11.608 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:11.666 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
[0m[[0minfo[0m] [0m[32mJsonRpcControllerSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mJsonRpcController[0m[0m
[0m[[0minfo[0m] [0m[31m- should handle valid sha3 request *** FAILED *** (105 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$1.<init>(JsonRpcControllerSpec.scala:46)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$1(JsonRpcControllerSpec.scala:46)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should fail when invalid request is received *** FAILED *** (57 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$2.<init>(JsonRpcControllerSpec.scala:57)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$2(JsonRpcControllerSpec.scala:57)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should handle clientVersion request *** FAILED *** (55 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$3.<init>(JsonRpcControllerSpec.scala:67)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$3(JsonRpcControllerSpec.scala:67)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should Handle net_peerCount request *** FAILED *** (57 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$4.<init>(JsonRpcControllerSpec.scala:78)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$4(JsonRpcControllerSpec.scala:78)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should Handle net_listening request *** FAILED *** (46 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$5.<init>(JsonRpcControllerSpec.scala:88)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$5(JsonRpcControllerSpec.scala:88)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should Handle net_version request *** FAILED *** (57 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$6.<init>(JsonRpcControllerSpec.scala:98)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$6(JsonRpcControllerSpec.scala:98)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_protocolVersion *** FAILED *** (64 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$7.<init>(JsonRpcControllerSpec.scala:110)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$7(JsonRpcControllerSpec.scala:110)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should handle eth_blockNumber request *** FAILED *** (59 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$8.<init>(JsonRpcControllerSpec.scala:121)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$8(JsonRpcControllerSpec.scala:121)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_syncing *** FAILED *** (56 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$9.<init>(JsonRpcControllerSpec.scala:135)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$9(JsonRpcControllerSpec.scala:135)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should only allow to call mehtods of enabled apis *** FAILED *** (55 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$10.<init>(JsonRpcControllerSpec.scala:150)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$10(JsonRpcControllerSpec.scala:150)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should handle eth_getBlockTransactionCountByHash request *** FAILED *** (57 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$11.<init>(JsonRpcControllerSpec.scala:169)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$11(JsonRpcControllerSpec.scala:169)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should handle eth_getBlockByHash request *** FAILED *** (45 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$12.<init>(JsonRpcControllerSpec.scala:190)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$12(JsonRpcControllerSpec.scala:190)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should handle eth_getBlockByNumber request *** FAILED *** (54 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$13.<init>(JsonRpcControllerSpec.scala:214)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$13(JsonRpcControllerSpec.scala:214)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should handle eth_getUncleByBlockHashAndIndex request *** FAILED *** (55 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$14.<init>(JsonRpcControllerSpec.scala:238)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$14(JsonRpcControllerSpec.scala:238)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should handle eth_getUncleByBlockNumberAndIndex request *** FAILED *** (56 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$15.<init>(JsonRpcControllerSpec.scala:267)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$15(JsonRpcControllerSpec.scala:267)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should handle eth_getTransactionByBlockHashAndIndex request *** FAILED *** (58 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$16.<init>(JsonRpcControllerSpec.scala:296)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$16(JsonRpcControllerSpec.scala:296)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should personal_importRawKey *** FAILED *** (56 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$17.<init>(JsonRpcControllerSpec.scala:323)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$17(JsonRpcControllerSpec.scala:323)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should personal_newAccount *** FAILED *** (58 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$18.<init>(JsonRpcControllerSpec.scala:342)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$18(JsonRpcControllerSpec.scala:342)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should personal_listAccounts *** FAILED *** (59 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$19.<init>(JsonRpcControllerSpec.scala:359)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$19(JsonRpcControllerSpec.scala:359)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should personal_unlockAccount *** FAILED *** (57 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$20.<init>(JsonRpcControllerSpec.scala:375)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$21(JsonRpcControllerSpec.scala:375)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should personal_unlockAccount for specified duration *** FAILED *** (56 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$21.<init>(JsonRpcControllerSpec.scala:392)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$22(JsonRpcControllerSpec.scala:392)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should personal_unlockAccount should handle possible duration errors *** FAILED *** (55 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$22.<init>(JsonRpcControllerSpec.scala:410)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$23(JsonRpcControllerSpec.scala:410)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should personal_lockAccount *** FAILED *** (48 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$23.<init>(JsonRpcControllerSpec.scala:428)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$24(JsonRpcControllerSpec.scala:428)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should personal_sendTransaction *** FAILED *** (15 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$24.<init>(JsonRpcControllerSpec.scala:444)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$25(JsonRpcControllerSpec.scala:444)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should daedalus_deleteWallet *** FAILED *** (49 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$25.<init>(JsonRpcControllerSpec.scala:467)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$26(JsonRpcControllerSpec.scala:467)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should daedalus_changePassphrase *** FAILED *** (55 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$26.<init>(JsonRpcControllerSpec.scala:483)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$27(JsonRpcControllerSpec.scala:483)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_sendTransaction *** FAILED *** (58 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$27.<init>(JsonRpcControllerSpec.scala:501)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$28(JsonRpcControllerSpec.scala:501)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_getWork *** FAILED *** (57 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$28.<init>(JsonRpcControllerSpec.scala:524)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$29(JsonRpcControllerSpec.scala:524)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_getWork when fail to get ommers and transactions *** FAILED *** (56 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$29.<init>(JsonRpcControllerSpec.scala:559)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$30(JsonRpcControllerSpec.scala:559)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_submitWork *** FAILED *** (54 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$30.<init>(JsonRpcControllerSpec.scala:592)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$31(JsonRpcControllerSpec.scala:592)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_submitHashrate *** FAILED *** (57 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$31.<init>(JsonRpcControllerSpec.scala:620)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$32(JsonRpcControllerSpec.scala:620)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_hashrate *** FAILED *** (59 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$32.<init>(JsonRpcControllerSpec.scala:638)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$33(JsonRpcControllerSpec.scala:638)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_gasPrice *** FAILED *** (52 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$33.<init>(JsonRpcControllerSpec.scala:653)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$34(JsonRpcControllerSpec.scala:653)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_call *** FAILED *** (68 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$34.<init>(JsonRpcControllerSpec.scala:671)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$35(JsonRpcControllerSpec.scala:671)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_estimateGas *** FAILED *** (55 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$35.<init>(JsonRpcControllerSpec.scala:697)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$36(JsonRpcControllerSpec.scala:697)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_getCode *** FAILED *** (61 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$36.<init>(JsonRpcControllerSpec.scala:732)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$38(JsonRpcControllerSpec.scala:732)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_getUncleCountByBlockNumber *** FAILED *** (61 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$37.<init>(JsonRpcControllerSpec.scala:755)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$39(JsonRpcControllerSpec.scala:755)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_getUncleCountByBlockHash *** FAILED *** (61 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$38.<init>(JsonRpcControllerSpec.scala:778)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$40(JsonRpcControllerSpec.scala:778)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_getBlockTransactionCountByNumber *** FAILED *** (60 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$39.<init>(JsonRpcControllerSpec.scala:801)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$41(JsonRpcControllerSpec.scala:801)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_coinbase *** FAILED *** (54 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$40.<init>(JsonRpcControllerSpec.scala:824)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$42(JsonRpcControllerSpec.scala:824)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_getTransactionByBlockNumberAndIndex by tag *** FAILED *** (60 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$41.<init>(JsonRpcControllerSpec.scala:839)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$43(JsonRpcControllerSpec.scala:839)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_getTransactionByBlockNumberAndIndex by hex number *** FAILED *** (55 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$42.<init>(JsonRpcControllerSpec.scala:867)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$44(JsonRpcControllerSpec.scala:867)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_getTransactionByBlockNumberAndIndex by number *** FAILED *** (56 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$43.<init>(JsonRpcControllerSpec.scala:894)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$45(JsonRpcControllerSpec.scala:894)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_getBalance *** FAILED *** (59 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$44.<init>(JsonRpcControllerSpec.scala:921)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$46(JsonRpcControllerSpec.scala:921)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_getStorageAt *** FAILED *** (52 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$45.<init>(JsonRpcControllerSpec.scala:945)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$47(JsonRpcControllerSpec.scala:945)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_getTransactionCount *** FAILED *** (60 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$46.<init>(JsonRpcControllerSpec.scala:970)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$48(JsonRpcControllerSpec.scala:970)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_getTransactionByHash *** FAILED *** (59 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$47.<init>(JsonRpcControllerSpec.scala:994)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$49(JsonRpcControllerSpec.scala:994)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_sign *** FAILED *** (56 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$48.<init>(JsonRpcControllerSpec.scala:1018)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$50(JsonRpcControllerSpec.scala:1018)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should personal_sign *** FAILED *** (53 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$49.<init>(JsonRpcControllerSpec.scala:1044)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$51(JsonRpcControllerSpec.scala:1044)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should personal_ecRecover *** FAILED *** (45 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$50.<init>(JsonRpcControllerSpec.scala:1071)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$52(JsonRpcControllerSpec.scala:1071)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_newFilter *** FAILED *** (57 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$51.<init>(JsonRpcControllerSpec.scala:1093)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$53(JsonRpcControllerSpec.scala:1093)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_newBlockFilter *** FAILED *** (61 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$52.<init>(JsonRpcControllerSpec.scala:1121)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$54(JsonRpcControllerSpec.scala:1121)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_newPendingTransactionFilter *** FAILED *** (59 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$53.<init>(JsonRpcControllerSpec.scala:1139)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$55(JsonRpcControllerSpec.scala:1139)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_uninstallFilter *** FAILED *** (20 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$54.<init>(JsonRpcControllerSpec.scala:1157)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$56(JsonRpcControllerSpec.scala:1157)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_getFilterChanges *** FAILED *** (57 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$55.<init>(JsonRpcControllerSpec.scala:1178)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$57(JsonRpcControllerSpec.scala:1178)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_getFilterLogs *** FAILED *** (81 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$56.<init>(JsonRpcControllerSpec.scala:1215)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$58(JsonRpcControllerSpec.scala:1215)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_getLogs *** FAILED *** (38 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$57.<init>(JsonRpcControllerSpec.scala:1242)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$59(JsonRpcControllerSpec.scala:1242)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should rpc_modules *** FAILED *** (54 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$58.<init>(JsonRpcControllerSpec.scala:1285)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$60(JsonRpcControllerSpec.scala:1285)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_getTransactionReceipt *** FAILED *** (58 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$59.<init>(JsonRpcControllerSpec.scala:1302)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$61(JsonRpcControllerSpec.scala:1302)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should daedalus_getAccountTransactions *** FAILED *** (59 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$60.<init>(JsonRpcControllerSpec.scala:1362)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$62(JsonRpcControllerSpec.scala:1362)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[32mECIESCoderSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mECIESCoder[0m[0m
[0m[[0minfo[0m] [0m[32m- should decrypt encrypted message (15 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mECIESCoder[0m[0m
[0m[[0minfo[0m] [0m[32m- should decryptSimple encryptSimple message (21 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mECIESCoder[0m[0m
[0m[[0minfo[0m] [0m[32m- should pass test for simple encoding from ethereumJ (18 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mECIESCoder[0m[0m
[0m[[0minfo[0m] [0m[32m- should past tests from ethereumJ - test1 (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mECIESCoder[0m[0m
[0m[[0minfo[0m] [0m[32m- should past tests from ethereumJ - test2 (8 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mBlockSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mBlock size[0m[0m
[0m[[0minfo[0m] [0m[32m- should be correct (5 milliseconds)[0m[0m
15:22:11.924 [pool-4-thread-1-ScalaTest-running-BootstrapDownloadSpec] INFO  io.iohk.ethereum.BootstrapDownload$  - Downloaded file downloadtestrunning.zip successfully deleted
15:22:11.928 [pool-4-thread-1-ScalaTest-running-BootstrapDownloadSpec] INFO  io.iohk.ethereum.BootstrapDownload$  - /var/folders/30/kyrlcg7s2msf3tbg893xqgnh0000gn/T/downloadtest/subfolder must end in a folder named leveldb
[0m[[0minfo[0m] [0m[32mBootstrapDownloadSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mBootstrapDownload[0m[0m
[0m[[0minfo[0m] [0m[32m- should download the file and generate correct hash (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should unzip the file correctly to the expected folder (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should delete the downloaded file (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- should refuse to clean out a folder not called 'leveldb' (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should clean out the leveldb folder (remove all files) (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mEphemDataSourceSuite:[0m[0m
[0m[[0minfo[0m] [0m[32m- EphemDataSource insert (23 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- EphemDataSource delete (19 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- EphemDataSource clear (12 milliseconds)[0m[0m
15:22:12.047 [test-system-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:15.102 [test-system-akka.actor.default-dispatcher-5] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:18.137 [test-system-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:21.187 [test-system-akka.actor.default-dispatcher-5] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:24.233 [test-system-akka.actor.default-dispatcher-6] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:27.255 [test-system-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:30.279 [test-system-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:30.297 [test-system-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:30.316 [test-system-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
[0m[[0minfo[0m] [0m[32mPeerEventBusActorSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mPeerEventBusActor[0m[0m
[0m[[0minfo[0m] [0m[32m- should relay messages received to subscribers (3 seconds, 60 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should only relay matching message codes (3 seconds, 34 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should relay peers disconnecting to its subscribers (3 seconds, 50 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should relay peers handshaked to its subscribers (3 seconds, 44 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should relay a single notification when subscribed twice to the same message code (3 seconds, 22 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should allow to handle subscriptions using AllPeers and WithId PeerSelector at the same time (3 seconds, 25 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should allow to subscribe to new messages (18 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should not change subscriptions when subscribing to empty set (18 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should allow to unsubscribe from messages (6 seconds, 26 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mReceiptsSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mReceipts[0m[0m
[0m[[0minfo[0m] [0m[32m- should encode receipts (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should decode receipts (11 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should decode encoded receipts (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mOpCodeGasSpecPostEip161:[0m[0m
[0m[[0minfo[0m] [0m[32m- SELFDESTRUCT (50 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mMessageSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mMessage[0m[0m
[0m[[0minfo[0m] [0m[32m- should decode message from given version of protocol (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should decode message redefined in newer version of protocol (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should decode message available only in older version of protocol (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should not decode message from older version of protocol as newer version (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- should not decode message not existing in given protocol (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should decode wire protocol message for all versions of protocol (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mAuthHandshakerSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mAuthHandshaker[0m[0m
[0m[[0minfo[0m] [0m[32m- should handle init response (53 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should handle both incoming packet and a response (33 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mKeyValueStorageSuite:[0m[0m
[0m[[0minfo[0m] [0m[32m- Get ints from KeyValueStorage (21 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Insert ints to KeyValueStorage (249 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Delete ints from KeyValueStorage (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Put ints into KeyValueStorage (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Remove ints from KeyValueStorage (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mIodbDataSourceTest:[0m[0m
[0m[[0minfo[0m] [0m[32m- should be able to insert and retrieve stored keys (89 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should allow to remove keys (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should remove all keys after clear (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should allow using multiple namespaces with the same key (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mBlockchainSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mBlockchain[0m[0m
[0m[[0minfo[0m] [0m[32m- should be able to store a block and return if if queried by hash (17 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should be able to store a block and retrieve it by number (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should be able to query a stored blockHeader by it's number (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- should not return a value if not stored (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return an account given an address and a block number (9 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mPeerActorSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mPeerActor[0m[0m
[0m[[0minfo[0m] [0m[31m- should create rlpx connection and send hello message *** FAILED *** (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 4000[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec$NodeStatusSetup.$init$(PeerActorSpec.scala:408)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec$$anon$1.<init>(PeerActorSpec.scala:49)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec.$anonfun$new$1(PeerActorSpec.scala:49)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should retry failed rlpx connection *** FAILED *** (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 4000[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec$NodeStatusSetup.$init$(PeerActorSpec.scala:408)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec$$anon$2.<init>(PeerActorSpec.scala:60)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec.$anonfun$new$2(PeerActorSpec.scala:60)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should try to reconnect on broken rlpx connection *** FAILED *** (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 4000[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec$NodeStatusSetup.$init$(PeerActorSpec.scala:408)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec$$anon$11.<init>(PeerActorSpec.scala:74)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec.$anonfun$new$4(PeerActorSpec.scala:74)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should successfully connect to ETC peer *** FAILED *** (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 4000[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec$NodeStatusSetup.$init$(PeerActorSpec.scala:408)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec$$anon$3.<init>(PeerActorSpec.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec.$anonfun$new$5(PeerActorSpec.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should successfully connect to and IPv6 peer *** FAILED *** (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 4000[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec$NodeStatusSetup.$init$(PeerActorSpec.scala:408)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec$$anon$4.<init>(PeerActorSpec.scala:141)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec.$anonfun$new$6(PeerActorSpec.scala:141)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should disconnect from non-ETC peer *** FAILED *** (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 4000[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec$NodeStatusSetup.$init$(PeerActorSpec.scala:408)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec$$anon$5.<init>(PeerActorSpec.scala:177)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec.$anonfun$new$7(PeerActorSpec.scala:177)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should disconnect from non-ETC peer (when node is before fork) *** FAILED *** (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 4000[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec$NodeStatusSetup.$init$(PeerActorSpec.scala:408)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec$$anon$6.<init>(PeerActorSpec.scala:212)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec.$anonfun$new$8(PeerActorSpec.scala:212)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should disconnect on Hello timeout *** FAILED *** (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 4000[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec$NodeStatusSetup.$init$(PeerActorSpec.scala:408)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec$$anon$7.<init>(PeerActorSpec.scala:238)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec.$anonfun$new$9(PeerActorSpec.scala:238)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should respond to fork block request during the handshake *** FAILED *** (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 4000[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec$NodeStatusSetup.$init$(PeerActorSpec.scala:408)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec$$anon$8.<init>(PeerActorSpec.scala:251)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec.$anonfun$new$10(PeerActorSpec.scala:251)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should stash disconnect message until handshaked *** FAILED *** (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 4000[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec$NodeStatusSetup.$init$(PeerActorSpec.scala:408)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec$$anon$9.<init>(PeerActorSpec.scala:282)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec.$anonfun$new$11(PeerActorSpec.scala:282)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should stay connected to pre fork peer *** FAILED *** (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 4000[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec$NodeStatusSetup.$init$(PeerActorSpec.scala:408)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec$$anon$10.<init>(PeerActorSpec.scala:309)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec.$anonfun$new$12(PeerActorSpec.scala:309)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[32mNodeParserSpec:[0m[0m
[0m[[0minfo[0m] [0m[32m- should correctly parse IPv4 nodes (418 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should correctly parse IPv6 nodes (2 milliseconds)[0m[0m
15:22:37.580 [RLPxHandlerSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:37.668 [RLPxHandlerSpec_System-akka.actor.default-dispatcher-5] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:43.722 [RLPxHandlerSpec_System-akka.actor.default-dispatcher-5] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:52.779 [RLPxHandlerSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:55.835 [RLPxHandlerSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:55.878 [RLPxHandlerSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:55.936 [RLPxHandlerSpec_System-akka.actor.default-dispatcher-5] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
[0m[[0minfo[0m] [0m[32mRLPxConnectionHandlerSpec:[0m[0m
[0m[[0minfo[0m] [0m[32m- should write messages send to TCP connection (94 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should write messages to TCP connection once all previous ACK were received (6 seconds, 54 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should accummulate messages and write them when receiving ACKs (9 seconds, 57 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should close the connection when Ack timeout happens (3 seconds, 55 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should ignore timeout of old messages (43 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should close the connection if the AuthHandshake init message's MAC is invalid (58 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should close the connection if the AuthHandshake response message's MAC is invalid (51 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mCreateOpcodeSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mCREATE[0m[0m
[0m[[0minfo[0m] [0m[32m  when initialization code executes normally[0m[0m
[0m[[0minfo[0m] [0m[32m  - should create a new contract (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should update sender (creator) account (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return the new contract's address (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should consume correct gas (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should step forward (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when initialization code fails[0m[0m
[0m[[0minfo[0m] [0m[32m  - should not modify world state except for the creator's nonce (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return 0 (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should consume correct gas (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should step forward (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when initialization code runs normally but there's not enough gas to deposit code[0m[0m
[0m[[0minfo[0m] [0m[32m  - should consume all gas passed to the init code (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should not modify world state except for the creator's nonce (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return 0 (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when call depth limit is reached[0m[0m
[0m[[0minfo[0m] [0m[32m  - should not modify world state (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return 0 (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should consume correct gas (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when endowment value is greater than balance[0m[0m
[0m[[0minfo[0m] [0m[32m  - should not modify world state (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return 0 (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should consume correct gas (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32minitialization includes SELFDESTRUCT opcode[0m[0m
[0m[[0minfo[0m] [0m[32m- should refund the correct amount of gas (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32minitialization includes a SSTORE opcode that clears the storage[0m[0m
[0m[[0minfo[0m] [0m[32m- should refund the correct amount of gas (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32mmaxCodeSize check is enabled[0m[0m
[0m[[0minfo[0m] [0m[32m- should result in an out of gas if the code is larger than the limit (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should not result in an out of gas if the code is smaller than the limit (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32maccount with non-empty code already exists[0m[0m
[0m[[0minfo[0m] [0m[32m- should fail to create contract (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32maccount with non-zero nonce already exists[0m[0m
[0m[[0minfo[0m] [0m[32m- should fail to create contract (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32maccount with non-zero balance, but empty code and zero nonce, already exists[0m[0m
[0m[[0minfo[0m] [0m[32m- should succeed in creating new contract (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mTransactionSpec:[0m[0m
[0m[[0minfo[0m] [0m[32m- should not recover sender public key for new sign encoding schema if there is no chain_id in signed data (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should recover sender address (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should recover sender for new sign encoding schema if there is chain_id in signed data (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- should recover false sender address for invalid transaction (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- should not recover a sender address for transaction with invalid point sign (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- should recover the correct sender for tx in block 46147 (6 milliseconds)[0m[0m
15:22:56.149 [OmmersPoolSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:56.182 [OmmersPoolSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:22:56.207 [OmmersPoolSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
[0m[[0minfo[0m] [0m[32mOmmersPoolSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mOmmersPool[0m[0m
[0m[[0minfo[0m] [0m[32m- should accept ommers (33 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mOmmersPool[0m[0m
[0m[[0minfo[0m] [0m[32m- should removes ommers ommers (24 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mOmmersPool[0m[0m
[0m[[0minfo[0m] [0m[32m- should returns ommers when out of pool siez (24 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mBlockValidatorSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mBlock[0m[0m
[0m[[0minfo[0m] [0m[32m- should created based on valid data (19 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mBlock[0m[0m
[0m[[0minfo[0m] [0m[32m- should return a failure if created based on invalid transactions header (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mBlock[0m[0m
[0m[[0minfo[0m] [0m[32m- should return a failure if created based on invalid ommers header (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mBlock[0m[0m
[0m[[0minfo[0m] [0m[32m- should return a failure if created based on invalid receipts header (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mBlock[0m[0m
[0m[[0minfo[0m] [0m[32m- should return a failure if created based on invalid log bloom header (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mBlock[0m[0m
[0m[[0minfo[0m] [0m[32m- should return a failure if a block body doesn't corresponds to a block header due to wrong tx hash (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mBlock[0m[0m
[0m[[0minfo[0m] [0m[32m- should return a failure if a block body doesn't corresponds to a block header due to wrong ommers hash (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32mBlock[0m[0m
[0m[[0minfo[0m] [0m[32m- should correctly handle the case where a block has no receipts (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mTotalDifficultyStorageSuite:[0m[0m
[0m[[0minfo[0m] [0m[32m- TotalDifficultyStorage insert (47 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- TotalDifficultyStorage delete (31 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mOpCodeFunSpec:[0m[0m
[0m[[0minfo[0m] [0m[32m- STOP (19 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- ISZERO (25 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- NOT (41 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- ADD (18 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- MUL (13 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SUB (15 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DIV (14 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SDIV (14 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- MOD (16 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SMOD (11 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- EXP (17 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SIGNEXTEND (13 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- LT (13 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- GT (16 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SLT (13 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SGT (12 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- EQ (13 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- AND (10 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- OR (9 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- XOR (13 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- BYTE (43 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- ADDMOD (13 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- MULMOD (11 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- ADDRESS (14 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- ORIGIN (9 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- CALLER (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- CALLVALUE (11 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- CALLDATASIZE (11 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- CODESIZE (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- GASPRICE (9 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- COINBASE (10 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- TIMESTAMP (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- NUMBER (9 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DIFFICULTY (8 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- GASLIMIT (11 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PC (9 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- GAS (10 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- MSIZE (13 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SHA3 (11 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- BALANCE (18 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- CALLDATALOAD (8 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- CALLDATACOPY (29 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- CODECOPY (12 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- EXTCODESIZE (13 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- EXTCODECOPY (21 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- BLOCKHASH (11 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- POP (9 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- MLOAD (13 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- MSTORE (12 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- MSTORE8 (15 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SLOAD (71 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SSTORE (82 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- JUMP (33 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- JUMPI (33 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- JUMPDEST (14 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH1 (12 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH2 (11 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH3 (11 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH4 (12 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH5 (13 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH6 (11 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH7 (9 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH8 (9 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH9 (9 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH10 (8 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH11 (9 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH12 (9 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH13 (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH14 (16 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH15 (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH16 (8 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH17 (8 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH18 (8 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH19 (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH20 (9 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH21 (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH22 (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH23 (8 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH24 (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH25 (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH26 (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH27 (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH28 (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH29 (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH30 (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH31 (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH32 (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP1 (15 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP2 (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP3 (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP4 (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP5 (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP6 (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP7 (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP8 (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP9 (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP10 (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP11 (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP12 (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP13 (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP14 (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP15 (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP16 (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP1 (8 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP2 (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP3 (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP4 (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP5 (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP6 (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP7 (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP8 (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP9 (14 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP10 (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP11 (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP12 (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP13 (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP14 (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP15 (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP16 (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- LOG0 (9 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- LOG1 (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- LOG2 (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- LOG3 (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- LOG4 (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- RETURN (9 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- INVALID (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SELFDESTRUCT (19 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- all opcodes have been registered (17 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- sliceBytes helper (15 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mCallOpcodesSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mCALL[0m[0m
[0m[[0minfo[0m] [0m[32m  when external contract terminates normally[0m[0m
[0m[[0minfo[0m] [0m[32m  - should update external account's storage (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should update external account's balance (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should pass correct addresses and value (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return 1 (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should should store contract's return data in memory (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should consume correct gas (refund unused gas) (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when call depth limit is reached[0m[0m
[0m[[0minfo[0m] [0m[32m  - should not modify world state (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return 0 (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should consume correct gas (refund call gas) (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when call value is greater than balance[0m[0m
[0m[[0minfo[0m] [0m[32m  - should not modify world state (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return 0 (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should consume correct gas (refund call gas) (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when call value is zero[0m[0m
[0m[[0minfo[0m] [0m[32m  - should adjust gas cost (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m  when external contract terminates abnormally[0m[0m
[0m[[0minfo[0m] [0m[32m  - should should not modify world state (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return 0 (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should consume all call gas (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should extend memory (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when calling a non-existent account[0m[0m
[0m[[0minfo[0m] [0m[32m  - should create new account and add to its balance (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return 1 (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should consume correct gas (refund call gas, add new account modifier) (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when calling a precompiled contract[0m[0m
[0m[[0minfo[0m] [0m[32m  - should compute a correct result (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return 1 (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should update precompiled contract's balance (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should consume correct gas (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when calling a program that executes a SELFDESTRUCT[0m[0m
[0m[[0minfo[0m] [0m[32m  - should refund the correct amount of gas (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should not refund gas if account was already self destructed (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should destruct ether if own address equals refund address (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m  when calling a program that executes a SSTORE that clears the storage[0m[0m
[0m[[0minfo[0m] [0m[32m  - should refund the correct amount of gas (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m  when more gas than available is provided[0m[0m
[0m[[0minfo[0m] [0m[32m  - should go OOG before EIP-150 (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should cap the provided gas after EIP-150 (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should go OOG before EIP-150 becaouse of extensive memory cost (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should cap memory cost post EIP-150 (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mCALLCODE[0m[0m
[0m[[0minfo[0m] [0m[32m  when external code terminates normally[0m[0m
[0m[[0minfo[0m] [0m[32m  - should update own account's storage (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should not update any account's balance (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should pass correct addresses and value (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return 1 (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should should store contract's return data in memory (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should consume correct gas (refund unused gas) (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when call depth limit is reached[0m[0m
[0m[[0minfo[0m] [0m[32m  - should not modify world state (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return 0 (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should consume correct gas (refund call gas) (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m  when call value is greater than balance[0m[0m
[0m[[0minfo[0m] [0m[32m  - should not modify world state (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return 0 (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should consume correct gas (refund call gas) (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when call value is zero[0m[0m
[0m[[0minfo[0m] [0m[32m  - should adjust gas cost (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when external code terminates abnormally[0m[0m
[0m[[0minfo[0m] [0m[32m  - should not modify world state (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return 0 (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should consume all call gas (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should extend memory (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m  when external account does not exist[0m[0m
[0m[[0minfo[0m] [0m[32m  - should not modify world state (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return 1 (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should consume correct gas (refund call gas) (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when calling a precompiled contract[0m[0m
[0m[[0minfo[0m] [0m[32m  - should compute a correct result (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return 1 (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should not update precompiled contract's balance (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should consume correct gas (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when calling a program that executes a SELFDESTRUCT[0m[0m
[0m[[0minfo[0m] [0m[32m  - should refund the correct amount of gas (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when calling a program that executes a SSTORE that clears the storage[0m[0m
[0m[[0minfo[0m] [0m[32m  - should refund the correct amount of gas (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when more gas than available is provided[0m[0m
[0m[[0minfo[0m] [0m[32m  - should go OOG before EIP-150 (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should cap the provided gas after EIP-150 (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mDELEGATECALL[0m[0m
[0m[[0minfo[0m] [0m[32m  when external code terminates normally[0m[0m
[0m[[0minfo[0m] [0m[32m  - should update own account's storage (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should not update any account's balance (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should pass correct addresses and value (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return 1 (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should should store contract's return data in memory (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should consume correct gas (refund unused gas) (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when call depth limit is reached[0m[0m
[0m[[0minfo[0m] [0m[32m  - should not modify world state (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return 0 (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should consume correct gas (refund call gas) (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when external code terminates abnormally[0m[0m
[0m[[0minfo[0m] [0m[32m  - should not modify world state (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return 0 (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should consume all call gas (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should extend memory (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when external account does not exist[0m[0m
[0m[[0minfo[0m] [0m[32m  - should not modify world state (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return 1 (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should consume correct gas (refund call gas) (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when calling a precompiled contract[0m[0m
[0m[[0minfo[0m] [0m[32m  - should compute a correct result (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return 1 (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should not update precompiled contract's balance (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should consume correct gas (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when calling a program that executes a SELFDESTRUCT[0m[0m
[0m[[0minfo[0m] [0m[32m  - should refund the correct amount of gas (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when calling a program that executes a SSTORE that clears the storage[0m[0m
[0m[[0minfo[0m] [0m[32m  - should refund the correct amount of gas (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when more gas than available is provided[0m[0m
[0m[[0minfo[0m] [0m[32m  - should go OOG before EIP-150 (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should cap the provided gas after EIP-150 (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mgas cost bigger than available gas DELEGATECALL[0m[0m
[0m[[0minfo[0m] [0m[32m- should return an OutOfGas error (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32mCallOpCodes[0m[0m
[0m[[0minfo[0m] [0m[32m  when CALL processes returned data[0m[0m
[0m[[0minfo[0m] [0m[32m  - should handle memory expansion properly (14 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when CALLCODE processes returned data[0m[0m
[0m[[0minfo[0m] [0m[32m  - should handle memory expansion properly (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when DELEGATECALL processes returned data[0m[0m
[0m[[0minfo[0m] [0m[32m  - should handle memory expansion properly (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mEthashSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mEthash[0m[0m
[0m[[0minfo[0m] [0m[32m- should generate correct hash (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should calculate cache size (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should compute proof of work using cache (1 minute, 21 seconds)[0m[0m
15:24:19.368 [test-system-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:24:22.535 [test-system-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:24:25.669 [test-system-akka.actor.default-dispatcher-5] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:24:25.830 [test-system-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:24:32.080 [test-system-akka.actor.default-dispatcher-5] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:24:38.173 [test-system-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:24:39.842 [test-system-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:24:39.943 [test-system-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
[0m[[0minfo[0m] [0m[32mPendingTransactionsManagerSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mPendingTransactionsManager[0m[0m
[0m[[0minfo[0m] [0m[32m- should store pending transactions received from peers (3 seconds, 177 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should ignore known transaction (3 seconds, 134 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should broadcast received pending transactions to other peers (160 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should notify other peers about received transactions and handle removal (6 seconds, 249 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should not add pending transaction again when it was removed while waiting for peers (6 seconds, 92 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should override transactions with the same sender and nonce (1 second, 669 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should broadcast pending transactions to newly connected peers (98 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should remove transaction on timeout (752 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mStackSpec:[0m[0m
[0m[[0minfo[0m] [0m[32m- pop single element (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- pop multiple elements (11 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- push single element (10 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- push multiple elements (10 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- duplicate element (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- swap elements (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mMinerSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mMiner[0m[0m
15:24:40.802 [PeersInfoHolderSpec_System-akka.actor.default-dispatcher-5] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:24:40.894 [PeersInfoHolderSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:24:40.974 [PeersInfoHolderSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:24:41.054 [PeersInfoHolderSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:24:41.130 [PeersInfoHolderSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:24:41.212 [PeersInfoHolderSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:24:41.291 [PeersInfoHolderSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:24:41.372 [PeersInfoHolderSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:24:41.438 [PeersInfoHolderSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:24:41.515 [PeersInfoHolderSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:24:41.593 [PeersInfoHolderSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
[0m[[0minfo[0m] [0m[32mEtcPeerManagerSpec:[0m[0m
[0m[[0minfo[0m] [0m[32m- should start with the peers initial info as provided (92 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should update max peer when receiving new block (80 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should update max peer when receiving block header (79 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should update max peer when receiving new block hashes (76 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should update max peer when sending new block (80 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should update max peer when sending block header (79 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should update max peer when sending new block hashes (81 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should update the peer total difficulty when receiving a NewBlock (66 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should update the fork accepted when receiving the fork block (77 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should disconnect from a peer with different fork block (78 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should remove peers information when a peers is disconnected (76 milliseconds)[0m[0m
15:24:41.715 [FilterManagerSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:24:41.799 [FilterManagerSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:24:41.831 [FilterManagerSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:24:41.857 [FilterManagerSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:24:41.940 [FilterManagerSpec_System-akka.actor.default-dispatcher-5] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
[0m[[0minfo[0m] [0m[32mFilterManagerSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mFilterManager[0m[0m
[0m[[0minfo[0m] [0m[32m- should handle log filter logs and changes (89 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should handle pending block filter (31 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should handle block filter (26 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should handle pending transactions filter (82 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should timeout unused filter (3 seconds, 86 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mNodeStorageSuite:[0m[0m
[0m[[0minfo[0m] [0m[32m- NodeStorage insert (93 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- NodeStorage delete (79 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mLevelDBDataSourceTest:[0m[0m
[0m[[0minfo[0m] [0m[32m- should be able to insert and retrieve stored keys (371 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should allow to remove keys (20 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should remove all keys after clear (22 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should allow using multiple namespaces with the same key (12 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mLedgerSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mLedger[0m[0m
[0m[[0minfo[0m] [0m[32m- should correctly calculate the total gas refund to be returned to the sender and paying for gas to the miner (117 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should correctly change the nonce when executing a tx that results in contract creation (20 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should correctly change the nonce when executing a tx that results in a message call (15 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should correctly run executeBlockTransactions for a block without txs (16 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should correctly run executeBlockTransactions for a block with one tx (that produces no errors) (104 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should correctly run executeBlockTransactions for a block with one tx (that produces OutOfGas) (21 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should correctly run executeBlock for a valid block without txs (25 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should fail to run executeBlock if a block is invalid before executing it (22 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should fail to run executeBlock if a block is invalid after executing it (22 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should correctly run a block with more than one tx (135 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should allow to create an account and not run out of gas before Homestead (22 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should run out of gas in contract creation after Homestead (13 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should clear logs only if vm execution results in an error (55 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should correctly send the transaction input data whether it's a contract creation or not (32 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should should handle pre-existing and new destination accounts when processing a contract init transaction (20 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should create sender account if it does not exists (20 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should remember executed transaction in case of many failures in the middle (43 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should produce empty block if all txs fail (25 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should drain DAO accounts and send the funds to refund address if Pro DAO Fork was configured (61 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should neither drain DAO accounts nor send the funds to refund address if Pro DAO Fork was not configured (9 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should correctly determine current block status (24 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should properly find minimal required gas limit to execute transaction (10 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mScryptSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mscrypt[0m[0m
[0m[[0minfo[0m] [0m[32m- should correctly evaluate for the test vectors (233 milliseconds)[0m[0m
15:24:46.804 [PeerActorSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:24:46.885 [PeerActorSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:24:46.936 [PeerActorSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:24:47.000 [PeerActorSpec_System-akka.actor.default-dispatcher-5] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:24:47.042 [PeerActorSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:24:47.084 [PeerActorSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
[0m[[0minfo[0m] [0m[32mPeerActorHandshakingSpec:[0m[0m
[0m[[0minfo[0m] [0m[32m- should succeed in establishing connection if the handshake is always successful (82 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should fail in establishing connection if the handshake always fails (51 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should succeed in establishing connection in simple Hello exchange (63 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should fail in establishing connection in simple Hello exchange if timeout happened (43 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should fail in establishing connection in simple Hello exchange if a Status message was received (41 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should ignore unhandled message while establishing connection (43 milliseconds)[0m[0m
15:24:47.151 [BlockchainHostActor_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:24:47.192 [BlockchainHostActor_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:24:47.229 [BlockchainHostActor_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:24:47.260 [BlockchainHostActor_System-akka.actor.default-dispatcher-5] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:24:47.281 [BlockchainHostActor_System-akka.actor.default-dispatcher-5] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:24:47.314 [BlockchainHostActor_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:24:47.345 [BlockchainHostActor_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:24:47.378 [BlockchainHostActor_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:24:47.410 [BlockchainHostActor_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:24:47.442 [BlockchainHostActor_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:24:47.473 [BlockchainHostActor_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:24:47.511 [BlockchainHostActor_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
[0m[[0minfo[0m] [0m[32mBlockchainHostActorSpec:[0m[0m
[0m[[0minfo[0m] [0m[32m- should return Receipts for block hashes (41 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return BlockBodies for block hashes (36 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return block headers by block number (31 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return block headers by block number when response is shorter then what was requested (21 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return block headers by block number in reverse order (32 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return block headers by block hash (31 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return block headers by block hash when skipping headers (31 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return block headers in reverse when there are skipped blocks (32 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return block headers in reverse when there are skipped blocks and we are asking for blocks before genesis (31 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return block headers in reverse when there are skipped blocks ending at genesis (31 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return evm code for hash (38 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return mptNode for hash (30 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mECDSASignatureSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mECDSASignature[0m[0m
[0m[[0minfo[0m] [0m[32m- should recover public key correctly for go ethereum transaction (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should fail on case from transaction 74c45d0cf2332cc021bebdfee6b1c1da0b58e8f4154537adb79b025f722920a4 (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should sign message and recover public key (130 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mDeleteTouchedAccountsSpec:[0m[0m
[0m[[0minfo[0m] [0m[32m- should delete no accounts when there are no touched accounts (8 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should delete no accounts when there are no empty touched accounts (10 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should delete touched empty account (11 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should delete touched empty account after transfer to self (13 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should not mark for deletion and delete any account pre EIP161 (8 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should delete multiple touched empty accounts (10 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should not delete touched new account resulting from contract creation (initialised) (9 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mDeleteAccountsSpec:[0m[0m
[0m[[0minfo[0m] [0m[32m- should delete no accounts when none of them should be deleted (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should delete the accounts listed for deletion (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should delete all the accounts if they are all listed for deletion (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should delete account that had storage updated before (22 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mAsymmetricCipherKeyPairLoaderSpec:[0m[0m
[0m[[0minfo[0m] [0m[32m- should correctly save the AsymmetricCipherKeyPairLoader (16 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mProgramSpec:[0m[0m
[0m[[0minfo[0m] [0m[32m- should detect all jump destinations if there are no push op (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should detect all jump destinations if there are push op (9 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should detect all jump destinations if there are invalid ops (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should detect all instructions as jump destinations if they are (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mInMemorySimpleMapProxySpec:[0m[0m
[0m[[0minfo[0m] [0m[32mInMemoryTrieProxy[0m[0m
[0m[[0minfo[0m] [0m[32m- should not write inserts until commit (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mInMemoryTrieProxy[0m[0m
[0m[[0minfo[0m] [0m[32m- should not perform removals until commit (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32mInMemoryTrieProxy[0m[0m
[0m[[0minfo[0m] [0m[32m- should not write updates until commit (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32mInMemoryTrieProxy[0m[0m
[0m[[0minfo[0m] [0m[32m- should handle sequential operations (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32mInMemoryTrieProxy[0m[0m
[0m[[0minfo[0m] [0m[32m- should handle batch operations (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32mInMemoryTrieProxy[0m[0m
[0m[[0minfo[0m] [0m[32m- should not fail when deleting an inexistent value (0 milliseconds)[0m[0m
15:24:47.944 [KnownNodesManagerSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:24:47.977 [KnownNodesManagerSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
[0m[[0minfo[0m] [0m[32mKnownNodesManagerSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mKnownNodesManager[0m[0m
[0m[[0minfo[0m] [0m[32m- should keep a list of nodes and persist changes (32 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should respect max nodes limit (20 milliseconds)[0m[0m
15:24:48.001 [RegularSync_system-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:24:48.168 [RegularSync_system-akka.actor.default-dispatcher-5] INFO  i.i.e.blockchain.sync.RegularSync akka://RegularSync_system/user/$$Y - Received 0 block headers in 0 ms (branch resolution: false)
15:24:48.249 [RegularSync_system-akka.actor.default-dispatcher-2] INFO  i.i.e.blockchain.sync.RegularSync akka://RegularSync_system/user/$$Z - Received 0 block headers in 0 ms (branch resolution: false)
15:24:48.315 [RegularSync_system-akka.actor.default-dispatcher-2] INFO  i.i.e.blockchain.sync.RegularSync akka://RegularSync_system/user/$$0 - Received 0 block headers in 0 ms (branch resolution: false)
15:24:52.390 [RegularSync_system-akka.actor.default-dispatcher-2] INFO  i.i.e.blockchain.sync.RegularSync akka://RegularSync_system/user/$$1 - Received 0 block headers in 0 ms (branch resolution: false)
15:24:55.482 [RegularSync_system-akka.actor.default-dispatcher-2] INFO  i.i.e.blockchain.sync.RegularSync akka://RegularSync_system/user/$$2 - Received 0 block headers in 0 ms (branch resolution: false)
15:24:59.551 [RegularSync_system-akka.actor.default-dispatcher-2] INFO  i.i.e.blockchain.sync.RegularSync akka://RegularSync_system/user/$$3 - Received 0 block headers in 0 ms (branch resolution: false)
15:24:59.615 [RegularSync_system-akka.actor.default-dispatcher-2] INFO  i.i.e.blockchain.sync.RegularSync akka://RegularSync_system/user/$$4 - Received 0 block headers in 0 ms (branch resolution: false)
15:24:59.676 [RegularSync_system-akka.actor.default-dispatcher-2] INFO  i.i.e.blockchain.sync.RegularSync akka://RegularSync_system/user/$$5 - Received 0 block headers in 0 ms (branch resolution: false)
15:24:59.745 [RegularSync_system-akka.actor.default-dispatcher-2] INFO  i.i.e.blockchain.sync.RegularSync akka://RegularSync_system/user/$$6 - Received 0 block headers in 0 ms (branch resolution: false)
15:24:59.974 [RegularSync_system-akka.actor.default-dispatcher-2] WARN  i.i.e.blockchain.sync.RegularSync akka://RegularSync_system/user/$$9 - Mined block is a duplicate, this should never happen
15:25:07.123 [RegularSync_system-akka.actor.default-dispatcher-2] WARN  i.i.e.blockchain.sync.RegularSync akka://RegularSync_system/user/$$~ - Failed to execute mined block because of error
15:25:11.221 [RegularSync_system-akka.actor.default-dispatcher-2] INFO  i.i.e.blockchain.sync.RegularSync akka://RegularSync_system/user/$$ab - Received 2 block headers in 0 ms (branch resolution: false)
15:25:11.312 [RegularSync_system-akka.actor.default-dispatcher-2] INFO  i.i.e.blockchain.sync.RegularSync akka://RegularSync_system/user/$$bb - Received 2 block headers in 0 ms (branch resolution: false)
15:25:11.435 [RegularSync_system-akka.actor.default-dispatcher-2] INFO  i.i.e.blockchain.sync.RegularSync akka://RegularSync_system/user/$$cb - Received 10 block headers in 0 ms (branch resolution: false)
15:25:12.598 [RegularSync_system-akka.actor.default-dispatcher-5] INFO  i.i.e.blockchain.sync.RegularSync akka://RegularSync_system/user/$$db - Received 10 block headers in 0 ms (branch resolution: false)
15:25:13.602 [RegularSync_system-akka.actor.default-dispatcher-5] INFO  i.i.e.blockchain.sync.RegularSync akka://RegularSync_system/user/$$db - Received 2 block headers in 0 ms (branch resolution: true)
15:25:14.753 [RegularSync_system-akka.actor.default-dispatcher-5] INFO  i.i.e.blockchain.sync.RegularSync akka://RegularSync_system/user/$$eb - Received 10 block headers in 0 ms (branch resolution: false)
15:25:15.757 [RegularSync_system-akka.actor.default-dispatcher-5] INFO  i.i.e.blockchain.sync.RegularSync akka://RegularSync_system/user/$$eb - Received 2 block headers in 0 ms (branch resolution: true)
15:25:16.921 [RegularSync_system-akka.actor.default-dispatcher-5] INFO  i.i.e.blockchain.sync.RegularSync akka://RegularSync_system/user/$$fb - Received 10 block headers in 0 ms (branch resolution: false)
15:25:18.003 [RegularSync_system-akka.actor.default-dispatcher-5] INFO  i.i.e.blockchain.sync.RegularSync akka://RegularSync_system/user/$$gb - Received 2 block headers in 0 ms (branch resolution: false)
15:25:19.080 [RegularSync_system-akka.actor.default-dispatcher-5] INFO  i.i.e.blockchain.sync.RegularSync akka://RegularSync_system/user/$$hb - Received 1 block headers in 0 ms (branch resolution: false)
15:25:19.081 [RegularSync_system-akka.actor.default-dispatcher-5] INFO  i.i.e.blockchain.sync.RegularSync akka://RegularSync_system/user/$$hb - Received 1 block bodies in 0 ms
15:25:19.103 [RegularSync_system-akka.actor.default-dispatcher-5] ERROR i.i.e.blockchain.sync.RegularSync akka://RegularSync_system/user/$$hb - Requesting missing state nodes
io.iohk.ethereum.mpt.MerklePatriciaTrie$MissingNodeException: Node not found ccb1f717aa77602faf03a594761a36956b1c4cf44c6b336d1db57da799b331b8, trie is inconsistent
	at io.iohk.ethereum.blockchain.sync.RegularSyncSpec$$anon$22.$anonfun$new$39(RegularSyncSpec.scala:367)
	at org.scalamock.MockFactoryBase.inContext(MockFactoryBase.scala:113)
	at org.scalamock.MockFactoryBase.inSequence(MockFactoryBase.scala:70)
	at org.scalamock.MockFactoryBase.inSequence$(MockFactoryBase.scala:69)
	at io.iohk.ethereum.blockchain.sync.RegularSyncSpec.inSequence(RegularSyncSpec.scala:33)
	at io.iohk.ethereum.blockchain.sync.RegularSyncSpec$$anon$22.<init>(RegularSyncSpec.scala:365)
	at io.iohk.ethereum.blockchain.sync.RegularSyncSpec.$anonfun$new$38(RegularSyncSpec.scala:360)
	at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.WordSpecLike$$anon$1.apply(WordSpecLike.scala:1078)
	at org.scalatest.TestSuite.withFixture(TestSuite.scala:196)
	at org.scalatest.TestSuite.withFixture$(TestSuite.scala:195)
	at io.iohk.ethereum.blockchain.sync.RegularSyncSpec.org$scalamock$scalatest$AbstractMockFactory$$super$withFixture(RegularSyncSpec.scala:33)
	at org.scalamock.scalatest.AbstractMockFactory.$anonfun$withFixture$1(AbstractMockFactory.scala:35)
	at org.scalamock.MockFactoryBase.withExpectations(MockFactoryBase.scala:53)
	at org.scalamock.MockFactoryBase.withExpectations$(MockFactoryBase.scala:45)
	at io.iohk.ethereum.blockchain.sync.RegularSyncSpec.withExpectations(RegularSyncSpec.scala:33)
	at org.scalamock.scalatest.AbstractMockFactory.withFixture(AbstractMockFactory.scala:34)
	at org.scalamock.scalatest.AbstractMockFactory.withFixture$(AbstractMockFactory.scala:31)
	at io.iohk.ethereum.blockchain.sync.RegularSyncSpec.withFixture(RegularSyncSpec.scala:33)
	at org.scalatest.WordSpecLike.invokeWithFixture$1(WordSpecLike.scala:1076)
	at org.scalatest.WordSpecLike.$anonfun$runTest$1(WordSpecLike.scala:1088)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.WordSpecLike.runTest(WordSpecLike.scala:1088)
	at org.scalatest.WordSpecLike.runTest$(WordSpecLike.scala:1070)
	at io.iohk.ethereum.blockchain.sync.RegularSyncSpec.runTest(RegularSyncSpec.scala:33)
	at org.scalatest.WordSpecLike.$anonfun$runTests$1(WordSpecLike.scala:1147)
	at org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:396)
	at scala.collection.immutable.List.foreach(List.scala:378)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:373)
	at org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:410)
	at scala.collection.immutable.List.foreach(List.scala:378)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:373)
	at org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:410)
	at scala.collection.immutable.List.foreach(List.scala:378)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.WordSpecLike.runTests(WordSpecLike.scala:1147)
	at org.scalatest.WordSpecLike.runTests$(WordSpecLike.scala:1146)
	at io.iohk.ethereum.blockchain.sync.RegularSyncSpec.runTests(RegularSyncSpec.scala:33)
	at org.scalatest.Suite.run(Suite.scala:1147)
	at org.scalatest.Suite.run$(Suite.scala:1129)
	at io.iohk.ethereum.blockchain.sync.RegularSyncSpec.org$scalatest$WordSpecLike$$super$run(RegularSyncSpec.scala:33)
	at org.scalatest.WordSpecLike.$anonfun$run$1(WordSpecLike.scala:1192)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.WordSpecLike.run(WordSpecLike.scala:1192)
	at org.scalatest.WordSpecLike.run$(WordSpecLike.scala:1190)
	at io.iohk.ethereum.blockchain.sync.RegularSyncSpec.org$scalatest$BeforeAndAfterAll$$super$run(RegularSyncSpec.scala:33)
	at org.scalatest.BeforeAndAfterAll.liftedTree1$1(BeforeAndAfterAll.scala:213)
	at org.scalatest.BeforeAndAfterAll.run(BeforeAndAfterAll.scala:210)
	at org.scalatest.BeforeAndAfterAll.run$(BeforeAndAfterAll.scala:208)
	at io.iohk.ethereum.blockchain.sync.RegularSyncSpec.run(RegularSyncSpec.scala:33)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:507)
	at sbt.TestRunner.runTest$1(TestFramework.scala:76)
	at sbt.TestRunner.run(TestFramework.scala:85)
	at sbt.TestFramework$$anon$2$$anonfun$$init$$1$$anonfun$apply$8.apply(TestFramework.scala:202)
	at sbt.TestFramework$$anon$2$$anonfun$$init$$1$$anonfun$apply$8.apply(TestFramework.scala:202)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:185)
	at sbt.TestFramework$$anon$2$$anonfun$$init$$1.apply(TestFramework.scala:202)
	at sbt.TestFramework$$anon$2$$anonfun$$init$$1.apply(TestFramework.scala:202)
	at sbt.TestFunction.apply(TestFramework.scala:207)
	at sbt.Tests$.sbt$Tests$$processRunnable$1(Tests.scala:239)
	at sbt.Tests$$anonfun$makeSerial$1.apply(Tests.scala:245)
	at sbt.Tests$$anonfun$makeSerial$1.apply(Tests.scala:245)
	at sbt.std.Transform$$anon$3$$anonfun$apply$2.apply(System.scala:44)
	at sbt.std.Transform$$anon$3$$anonfun$apply$2.apply(System.scala:44)
	at sbt.std.Transform$$anon$4.work(System.scala:63)
	at sbt.Execute$$anonfun$submit$1$$anonfun$apply$1.apply(Execute.scala:228)
	at sbt.Execute$$anonfun$submit$1$$anonfun$apply$1.apply(Execute.scala:228)
	at sbt.ErrorHandling$.wideConvert(ErrorHandling.scala:17)
	at sbt.Execute.work(Execute.scala:237)
	at sbt.Execute$$anonfun$submit$1.apply(Execute.scala:228)
	at sbt.Execute$$anonfun$submit$1.apply(Execute.scala:228)
	at sbt.ConcurrentRestrictions$$anon$4$$anonfun$1.apply(ConcurrentRestrictions.scala:159)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:28)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
15:25:20.106 [RegularSync_system-akka.actor.default-dispatcher-5] INFO  i.i.e.blockchain.sync.RegularSync akka://RegularSync_system/user/$$hb - Received 1 missing state nodes in 0 ms
15:25:20.107 [RegularSync_system-akka.actor.default-dispatcher-5] INFO  i.i.e.blockchain.sync.RegularSync akka://RegularSync_system/user/$$hb - Inserted missing state node: ccb1f717aa77602faf03a594761a36956b1c4cf44c6b336d1db57da799b331b8. Retrying execution starting with block 1
[0m[[0minfo[0m] [0m[32mRegularSyncSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mRegularSync[0m[0m
[0m[[0minfo[0m] [0m[32m  when receiving NewBlock msg[0m[0m
[0m[[0minfo[0m] [0m[32m  - should handle import to the main chain (99 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should handle chain reorganisation (76 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should handle duplicate (4 seconds, 70 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should handle enqueuing (3 seconds, 73 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should handle block error (4 seconds, 96 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when receiving NewBlockHashes msg[0m[0m
[0m[[0minfo[0m] [0m[32m  - should handle newBlockHash message (63 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should filter out hashes that are already in chain or queue (61 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should blacklist peer sending ancient blockhashes (61 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should handle at most 64 new hashes in one request (72 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when receiving MinedBlock msg[0m[0m
[0m[[0minfo[0m] [0m[32m  - should handle import to the main chain (75 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should handle chain reorganisation (74 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should handle duplicate (4 seconds, 82 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should handle enqueuing (3 seconds, 74 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should handle block error (4 seconds, 74 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when receiving BlockHeaders msg[0m[0m
[0m[[0minfo[0m] [0m[32m  - should handle a new better branch (104 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should handle no branch change (77 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should handle unknown branch about to be resolved (1 second, 126 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should handle unknown branch that can't be resolved (2 seconds, 168 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return to normal syncing mode after successful branch resolution (2 seconds, 152 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return to normal syncing mode after branch resolution request failed (1 second, 166 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should handle invalid branch (1 second, 81 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when receiving BlockBodies msg[0m[0m
[0m[[0minfo[0m] [0m[32m  - should handle missing state nodes (2 seconds, 104 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mOpCodeGasSpec:[0m[0m
[0m[[0minfo[0m] [0m[32m- wordsForBytes helper (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- calcMemCost helper (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP1 (8 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP2 (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP3 (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP4 (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP5 (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP6 (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP7 (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP8 (8 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP9 (9 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP10 (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP11 (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP12 (9 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP13 (8 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP14 (9 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP15 (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP16 (12 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH1 (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH2 (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH3 (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH4 (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH5 (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH6 (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH7 (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH8 (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH9 (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH10 (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH11 (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH12 (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH13 (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH14 (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH15 (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH16 (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH17 (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH18 (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH19 (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH20 (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH21 (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH22 (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH23 (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH24 (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH25 (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH26 (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH27 (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH28 (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH29 (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH30 (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH31 (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH32 (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP1 (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP2 (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP3 (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP4 (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP5 (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP6 (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP7 (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP8 (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP9 (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP10 (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP11 (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP12 (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP13 (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP14 (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP15 (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP16 (8 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- STOP (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- ADD (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- MUL (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SUB (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DIV (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SDIV (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- MOD (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SMOD (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- ADDMOD (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- MULMOD (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SIGNEXTEND (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- LT (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- GT (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SLT (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SGT (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- EQ (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- ISZERO (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- AND (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- OR (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- XOR (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- NOT (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- BYTE (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- ADDRESS (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- BALANCE (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- ORIGIN (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- CALLER (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- CALLVALUE (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- CALLDATALOAD (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- CALLDATASIZE (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- CODESIZE (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- GASPRICE (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- EXTCODESIZE (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- BLOCKHASH (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- COINBASE (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- TIMESTAMP (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- NUMBER (22 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DIFFICULTY (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- GASLIMIT (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- POP (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SLOAD (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- JUMP (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- JUMPI (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PC (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- MSIZE (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- GAS (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- JUMPDEST (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- EXP (15 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SHA3 (27 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- CALLDATACOPY (19 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- CODECOPY (26 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- EXTCODECOPY (22 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- MLOAD (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- MSTORE (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- MSTORE8 (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SSTORE (13 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- LOG0 (9 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- LOG1 (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- LOG2 (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- LOG3 (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- LOG4 (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- RETURN (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SELFDESTRUCT (16 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- all opcodes have been registered (8 milliseconds)[0m[0m
15:25:22.338 [EthServiceSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:25:22.403 [EthServiceSpec_System-akka.actor.default-dispatcher-5] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:25:22.466 [EthServiceSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:25:22.493 [EthServiceSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:25:22.556 [EthServiceSpec_System-akka.actor.default-dispatcher-5] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:25:22.620 [EthServiceSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:25:22.687 [EthServiceSpec_System-akka.actor.default-dispatcher-5] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:25:22.750 [EthServiceSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:25:22.817 [EthServiceSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:25:22.938 [EthServiceSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:25:23.051 [EthServiceSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:25:23.110 [EthServiceSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:25:23.172 [EthServiceSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:25:23.236 [EthServiceSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:25:23.297 [EthServiceSpec_System-akka.actor.default-dispatcher-5] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:25:23.357 [EthServiceSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:25:23.420 [EthServiceSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:25:23.480 [EthServiceSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:25:23.544 [EthServiceSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:25:23.607 [EthServiceSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:25:23.655 [EthServiceSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:25:23.714 [EthServiceSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:25:23.774 [EthServiceSpec_System-akka.actor.default-dispatcher-5] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:25:23.834 [EthServiceSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:25:23.899 [EthServiceSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:25:23.960 [EthServiceSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:25:24.047 [EthServiceSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:25:24.110 [EthServiceSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:25:24.179 [EthServiceSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:25:24.297 [EthServiceSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:25:24.414 [EthServiceSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:25:24.536 [EthServiceSpec_System-akka.actor.default-dispatcher-5] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:25:24.654 [EthServiceSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:25:24.766 [EthServiceSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:25:24.884 [EthServiceSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:25:24.996 [EthServiceSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:25:25.110 [EthServiceSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:25:25.222 [EthServiceSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:25:25.334 [EthServiceSpec_System-akka.actor.default-dispatcher-5] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:25:25.445 [EthServiceSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:25:25.561 [EthServiceSpec_System-akka.actor.default-dispatcher-5] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:25:25.628 [EthServiceSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:25:26.193 [EthServiceSpec_System-akka.actor.default-dispatcher-5] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:25:26.261 [EthServiceSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:25:26.321 [EthServiceSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:25:26.378 [EthServiceSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:25:26.945 [EthServiceSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:25:27.005 [EthServiceSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:25:27.122 [EthServiceSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:25:27.236 [EthServiceSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:25:27.306 [EthServiceSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:25:27.371 [EthServiceSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:25:27.426 [EthServiceSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:25:27.546 [EthServiceSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:25:27.672 [EthServiceSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:25:27.791 [EthServiceSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:25:27.909 [EthServiceSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:25:28.024 [EthServiceSpec_System-akka.actor.default-dispatcher-5] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:25:28.136 [EthServiceSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:25:28.255 [EthServiceSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:25:28.378 [EthServiceSpec_System-akka.actor.default-dispatcher-5] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
[0m[[0minfo[0m] [0m[32mEthServiceSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mEthService[0m[0m
[0m[[0minfo[0m] [0m[32m- should answer eth_blockNumber with the latest block number (77 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return ethereum protocol version (61 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should answer eth_getBlockTransactionCountByHash with None when the requested block isn't in the blockchain (23 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should answer eth_getBlockTransactionCountByHash with the block has no tx when the requested block is in the blockchain and has no tx (67 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should answer eth_getBlockTransactionCountByHash correctly when the requested block is in the blockchain and has some tx (62 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should answer eth_getTransactionByBlockHashAndIndex with None when there is no block with the requested hash (68 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should answer eth_getTransactionByBlockHashAndIndex with None when there is no tx in requested index (63 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should answer eth_getTransactionByBlockHashAndIndex with the transaction response correctly when the requested index has one (66 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should answer eth_getBlockByNumber with the correct block when the pending block is requested (121 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should answer eth_getBlockByNumber with the latest block pending block is requested and there are no pending ones (113 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should answer eth_getBlockByNumber with None when the requested block isn't in the blockchain (58 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should answer eth_getBlockByNumber with the block response correctly when it's totalDifficulty is in blockchain (63 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should answer eth_getBlockByNumber with the block response correctly when it's totalDifficulty is not in blockchain (63 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should answer eth_getBlockByNumber with the block response correctly when the txs should be hashed (61 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should answer eth_getBlockByHash with None when the requested block isn't in the blockchain (59 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should answer eth_getBlockByHash with the block response correctly when it's totalDifficulty is in blockchain (62 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should answer eth_getBlockByHash with the block response correctly when it's totalDifficulty is not in blockchain (60 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should answer eth_getBlockByHash with the block response correctly when the txs should be hashed (63 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should answer eth_getUncleByBlockHashAndIndex with None when the requested block isn't in the blockchain (63 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should answer eth_getUncleByBlockHashAndIndex with None when there's no uncle (48 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should answer eth_getUncleByBlockHashAndIndex with None when there's no uncle in the requested index (58 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should answer eth_getUncleByBlockHashAndIndex correctly when the requested index has one but there's no total difficulty for it (59 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should anwer eth_getUncleByBlockHashAndIndex correctly when the requested index has one and there's total difficulty for it (60 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should answer eth_getUncleByBlockNumberAndIndex with None when the requested block isn't in the blockchain (62 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should answer eth_getUncleByBlockNumberAndIndex with None when there's no uncle (62 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should answer eth_getUncleByBlockNumberAndIndex with None when there's no uncle in the requested index (85 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should answer eth_getUncleByBlockNumberAndIndex correctly when the requested index has one but there's no total difficulty for it (62 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should anwer eth_getUncleByBlockNumberAndIndex correctly when the requested index has one and there's total difficulty for it (62 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return syncing info if the peer is syncing (126 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return no syncing info if the peer is not syncing (116 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return requested work (122 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should accept submitted correct PoW (117 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should reject submitted correct PoW when header is no longer in cache (113 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should execute call and return a value (116 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should execute estimateGas and return a value (114 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should get uncle count by block number (114 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should get uncle count by block hash (112 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should get transaction count by block number (112 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should get transaction count by latest block number (112 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should handle getCode request (114 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should accept and report hashrate (67 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should combine hashrates from many miners and remove timed out rates (565 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return if node is mining base on getWork (67 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return if node is mining base on submitWork (60 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return if node is mining base on submitHashRate (55 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return if node is mining after time out (567 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return correct coinbase (60 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return 0 gas price if there are no transactions (116 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return average gas price (115 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should getTransactionByBlockNumberAndIndexRequest return transaction by index (69 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should getTransactionByBlockNumberAndIndexRequest return empty response if transaction does not exists when getting by index (62 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should getTransactionByBlockNumberAndIndexRequest return empty response if block does not exists when getting by index (55 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should handle getBalance request (120 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should handle getStorageAt request (123 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should handle get transaction count request (121 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should handle get transaction by hash if the tx is not on the blockchain and not in the tx pool (118 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should handle get transaction by hash if the tx is still pending (114 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should handle get transaction by hash if the tx was already executed (112 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should calculate correct contract address for contract creating by transaction (118 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return account recent transactions in newest -> oldest order (124 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should not return account recent transactions from older blocks and return pending txs (124 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mInMemoryWorldStateProxySpec:[0m[0m
[0m[[0minfo[0m] [0m[32mInMemoryWorldStateProxy[0m[0m
[0m[[0minfo[0m] [0m[32m- should allow to create and retrieve an account (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- should allow to save and retrieve code (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- should allow to save and get storage (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should allow to transfer value to other address (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- should not store within contract store if value is zero (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should storing a zero on a contract store position should remove it from the underlying tree (35 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should be able to persist changes and continue working after that (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should be able to do transfers with the same origin and destination (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- should not allow transfer to create empty accounts post EIP161 (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- should correctly mark touched accounts post EIP161 (14 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should update touched accounts using combineTouchedAccounts method (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should correctly determine if account is dead (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- should remove all ether from existing account (1 millisecond)[0m[0m
15:25:29.274 [scala-execution-context-global-837] ERROR io.iohk.ethereum.jsonrpc.EthService  - failed to get transactions, mining block with empty transactions list
akka.pattern.AskTimeoutException: Ask timed out on [Actor[akka://EthServiceSpec_System/system/testProbe-813#-983484393]] after [3000 ms]. Sender[null] sent message of type "io.iohk.ethereum.transactions.PendingTransactionsManager$GetPendingTransactions$".
	at akka.pattern.PromiseActorRef$.$anonfun$apply$1(AskSupport.scala:604)
	at akka.actor.Scheduler$$anon$4.run(Scheduler.scala:126)
	at scala.concurrent.Future$InternalCallbackExecutor$.unbatchedExecute(Future.scala:864)
	at scala.concurrent.BatchingExecutor.execute(BatchingExecutor.scala:109)
	at scala.concurrent.BatchingExecutor.execute$(BatchingExecutor.scala:103)
	at scala.concurrent.Future$InternalCallbackExecutor$.execute(Future.scala:862)
	at akka.actor.LightArrayRevolverScheduler$TaskHolder.executeTask(LightArrayRevolverScheduler.scala:329)
	at akka.actor.LightArrayRevolverScheduler$$anon$4.executeBucket$1(LightArrayRevolverScheduler.scala:280)
	at akka.actor.LightArrayRevolverScheduler$$anon$4.nextTick(LightArrayRevolverScheduler.scala:284)
	at akka.actor.LightArrayRevolverScheduler$$anon$4.run(LightArrayRevolverScheduler.scala:236)
	at java.lang.Thread.run(Thread.java:745)
15:25:29.274 [scala-execution-context-global-836] ERROR io.iohk.ethereum.jsonrpc.EthService  - failed to get ommer, mining block with empty ommers list
akka.pattern.AskTimeoutException: Ask timed out on [Actor[akka://EthServiceSpec_System/system/testProbe-814#-222056858]] after [3000 ms]. Sender[null] sent message of type "io.iohk.ethereum.ommers.OmmersPool$GetOmmers".
	at akka.pattern.PromiseActorRef$.$anonfun$apply$1(AskSupport.scala:604)
	at akka.actor.Scheduler$$anon$4.run(Scheduler.scala:126)
	at scala.concurrent.Future$InternalCallbackExecutor$.unbatchedExecute(Future.scala:864)
	at scala.concurrent.BatchingExecutor.execute(BatchingExecutor.scala:109)
	at scala.concurrent.BatchingExecutor.execute$(BatchingExecutor.scala:103)
	at scala.concurrent.Future$InternalCallbackExecutor$.execute(Future.scala:862)
	at akka.actor.LightArrayRevolverScheduler$TaskHolder.executeTask(LightArrayRevolverScheduler.scala:329)
	at akka.actor.LightArrayRevolverScheduler$$anon$4.executeBucket$1(LightArrayRevolverScheduler.scala:280)
	at akka.actor.LightArrayRevolverScheduler$$anon$4.nextTick(LightArrayRevolverScheduler.scala:284)
	at akka.actor.LightArrayRevolverScheduler$$anon$4.run(LightArrayRevolverScheduler.scala:236)
	at java.lang.Thread.run(Thread.java:745)
[0m[[0minfo[0m] [0m[32mExpiringMapSpec:[0m[0m
[0m[[0minfo[0m] [0m[32m- should Put element in, for correct amount of time and not retain it afterwards (119 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should Put element in, for negative duration (element will be inaccessible and removed at first occasion) (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- should Put new element in with new holdTime, for correct amount of time and not retain it afterwards (234 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should Put two elements in, for different amount of time and not retain it afterwards (160 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should Put element in, for default amount of time and not retain it afterwards (116 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should Put element in, until some time and not retain it afterwards (122 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should not overflow and throw exception when adding duration with max seconds (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- should It should remove existing element (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should It should overwrite existing element (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mBlockQueueSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mBlockQueue[0m[0m
[0m[[0minfo[0m] [0m[32m- should ignore block if it's already in the queue (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should ignore blocks outside of range (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should remove the blocks that fall out of range (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should enqueue a block with parent on the main chain updating its total difficulty (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should enqueue a block with queued ancestors rooted to the main chain updating its total difficulty (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should enqueue an orphaned block (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should remove a branch from a leaf up to the first shared ancestor (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should remove a whole subtree down from an ancestor to all its leaves (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mHexPrefixSuite:[0m[0m
[0m[[0minfo[0m] [0m[32m- HexPrefix encoding (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- testCompactEncodeOddCompact (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- testCompactEncodeEvenCompact (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- testCompactEncodeEvenTerminated (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- testCompactEncodeOddTerminated (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- testCompactDecodeOddCompact (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- testCompactDecodeEvenCompact (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- testCompactDecodeEvenTerminated (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- testCompactDecodeOddTerminated (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- testCompactHexEncode_1 (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- testCompactHexEncode_2 (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- testCompactHexEncode_3 (0 milliseconds)[0m[0m
15:25:29.448 [scala-execution-context-global-837] ERROR io.iohk.ethereum.jsonrpc.EthService  - failed to get transactions, mining block with empty transactions list
akka.pattern.AskTimeoutException: Ask timed out on [Actor[akka://EthServiceSpec_System/system/testProbe-825#-1624691300]] after [3000 ms]. Sender[null] sent message of type "io.iohk.ethereum.transactions.PendingTransactionsManager$GetPendingTransactions$".
	at akka.pattern.PromiseActorRef$.$anonfun$apply$1(AskSupport.scala:604)
	at akka.actor.Scheduler$$anon$4.run(Scheduler.scala:126)
	at scala.concurrent.Future$InternalCallbackExecutor$.unbatchedExecute(Future.scala:864)
	at scala.concurrent.BatchingExecutor.execute(BatchingExecutor.scala:109)
	at scala.concurrent.BatchingExecutor.execute$(BatchingExecutor.scala:103)
	at scala.concurrent.Future$InternalCallbackExecutor$.execute(Future.scala:862)
	at akka.actor.LightArrayRevolverScheduler$TaskHolder.executeTask(LightArrayRevolverScheduler.scala:329)
	at akka.actor.LightArrayRevolverScheduler$$anon$4.executeBucket$1(LightArrayRevolverScheduler.scala:280)
	at akka.actor.LightArrayRevolverScheduler$$anon$4.nextTick(LightArrayRevolverScheduler.scala:284)
	at akka.actor.LightArrayRevolverScheduler$$anon$4.run(LightArrayRevolverScheduler.scala:236)
	at java.lang.Thread.run(Thread.java:745)
15:25:29.448 [scala-execution-context-global-836] ERROR io.iohk.ethereum.jsonrpc.EthService  - failed to get ommer, mining block with empty ommers list
akka.pattern.AskTimeoutException: Ask timed out on [Actor[akka://EthServiceSpec_System/system/testProbe-826#-448819991]] after [3000 ms]. Sender[null] sent message of type "io.iohk.ethereum.ommers.OmmersPool$GetOmmers".
	at akka.pattern.PromiseActorRef$.$anonfun$apply$1(AskSupport.scala:604)
	at akka.actor.Scheduler$$anon$4.run(Scheduler.scala:126)
	at scala.concurrent.Future$InternalCallbackExecutor$.unbatchedExecute(Future.scala:864)
	at scala.concurrent.BatchingExecutor.execute(BatchingExecutor.scala:109)
	at scala.concurrent.BatchingExecutor.execute$(BatchingExecutor.scala:103)
	at scala.concurrent.Future$InternalCallbackExecutor$.execute(Future.scala:862)
	at akka.actor.LightArrayRevolverScheduler$TaskHolder.executeTask(LightArrayRevolverScheduler.scala:329)
	at akka.actor.LightArrayRevolverScheduler$$anon$4.executeBucket$1(LightArrayRevolverScheduler.scala:280)
	at akka.actor.LightArrayRevolverScheduler$$anon$4.nextTick(LightArrayRevolverScheduler.scala:284)
	at akka.actor.LightArrayRevolverScheduler$$anon$4.run(LightArrayRevolverScheduler.scala:236)
	at java.lang.Thread.run(Thread.java:745)
[0m[[0minfo[0m] [0m[32mKeyStoreImplSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mKeyStoreImpl[0m[0m
[0m[[0minfo[0m] [0m[32m- should import and list accounts (7 seconds, 799 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should fail to import a key twice (4 seconds, 208 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should create new accounts (4 seconds, 153 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return an error when the keystore dir cannot be initialized (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return an error when the keystore dir cannot be read or written (4 seconds, 718 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should unlock an account provided a correct passphrase (4 seconds, 635 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return an error when unlocking an account with a wrong passphrase (4 seconds, 469 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return an error when trying to unlock an unknown account (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return an error deleting not existing wallet (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should delete existing wallet (2 seconds, 398 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should change passphrase of an existing wallet (9 seconds, 85 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return an error when changing passphrase of an non-existent wallet (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return an error when changing passphrase and provided with invalid old passphrase (4 seconds, 497 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mMessagesSerializationSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mWire Protocol[0m[0m
[0m[[0minfo[0m] [0m[32m  when encoding and decoding Hello[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return same result (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when encoding and decoding Disconnect[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return same result (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when encoding and decoding Ping[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return same result (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when encoding and decoding Pong[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return same result (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mCommon Messages[0m[0m
[0m[[0minfo[0m] [0m[32m  when encoding and decoding Status[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return same result (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when encoding and decoding SignedTransactions[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return same result (18 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when encoding and decoding NewBlock[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return same result (20 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mPV61[0m[0m
[0m[[0minfo[0m] [0m[32m  when encoding and decoding NewBlockHashes[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return same result (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when encoding and decoding BlockHashesFromNumber[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return same result (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mPV62[0m[0m
[0m[[0minfo[0m] [0m[32m  when encoding and decoding NewBlockHashes[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return same result (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when encoding and decoding BlockBodies[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return same result (43 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when encoding and decoding GetBlockBodies[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return same result (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when encoding and decoding BlockHeaders[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return same result (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when encoding and decoding GetBlockHeaders[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return same result (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mSignedTransactionValidatorSpec:[0m[0m
[0m[[0minfo[0m] [0m[32m- should report as valid a tx from before homestead (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should report as valid a tx from after homestead (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should report as syntactic invalid a tx with long nonce (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should report as syntactic invalid a tx with long gas limit (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- should report as syntactic invalid a tx with long gas price (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- should report as syntactic invalid a tx with long value (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should report as syntactic invalid a tx with long s (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- should report as syntactic invalid a tx with long r (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- should report a tx with invalid r as having invalid signature (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should report a tx with invalid s as having invalid signature (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- should report as invalid a tx with invalid nonce (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should report as invalid a tx with too low gas limit for intrinsic gas (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should report as invalid a tx with upfront cost higher than the sender's balance (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should report as invalid a tx with too high gas limit for block gas limit (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should report as invalid a chain specific tx before eip155 (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should report as valid a chain specific tx after eip155 (15 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mReferenceCountNodeStorageSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mReferenceCountNodeStorage[0m[0m
[0m[[0minfo[0m] [0m[32m- should not remove a key if no more references until pruning (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should not remove a key that was inserted after deletion when pruning (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should not remove a key that it's still referenced when pruning (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should not delete a key that's was referenced in later blocks when pruning (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should not throw an error when deleting a key that does not exist (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should allow to rollback operations (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should allow rollbacks after pruning (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mRipemd160Spec:[0m[0m
[0m[[0minfo[0m] [0m[32m- RIPEMD-160 (144 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mNodeDataSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mNodeData[0m[0m
[0m[[0minfo[0m] [0m[32m- should be encoded properly (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- should be decoded properly (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should be decoded previously encoded value (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- should decode branch node with values in leafs that looks like RLP list (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should obtain the same value when decoding and encoding an encoded node (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32mUInt256Spec:[0m[0m
[0m[[0minfo[0m] [0m[32m- & (9 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- | (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- ^ (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- ~ (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- negation (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- + (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- - (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- * (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- / (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- div (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- sdiv (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- mod (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- smod (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- addmod (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- mulmod (11 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- ** (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- signExtend (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- slt (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- sgt (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- getByte (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- intValue (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- comparison (18 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Passing too long ByteString should throw an exception (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- UInt256 converted to a byte array should always have length 32 bytes (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- 2-way bytes conversion (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- byteSize (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mPbkdf2HMacSha256Spec:[0m[0m
[0m[[0minfo[0m] [0m[32mpbkdf2HMacSha256[0m[0m
[0m[[0minfo[0m] [0m[32m- should correctly evaluate for the test vectors (37 milliseconds)[0m[0m
15:26:16.278 [FastSyncStateActorSpec_System-akka.actor.default-dispatcher-5] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
[0m[[0minfo[0m] [0m[32mFastSyncStateStorageActorSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mFastSyncStateActor[0m[0m
[0m[[0minfo[0m] [0m[31m- should eventually persist a newest state of a fast sync *** FAILED *** (34 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.blockchain.sync.FastSyncStateStorageActorSpec.$anonfun$new$1(FastSyncStateStorageActorSpec.scala:29)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.AsyncFlatSpecLike.transformToOutcomeParam$1(AsyncFlatSpecLike.scala:139)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.AsyncFlatSpecLike.$anonfun$registerTestToRun$2(AsyncFlatSpecLike.scala:145)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.AsyncTestSuite.$anonfun$transformToOutcome$1(AsyncTestSuite.scala:240)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.AsyncFlatSpecLike$$anon$1.apply(AsyncFlatSpecLike.scala:1698)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.AsyncTestSuite.withFixture(AsyncTestSuite.scala:313)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.AsyncTestSuite.withFixture$(AsyncTestSuite.scala:312)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.AsyncFlatSpec.withFixture(AsyncFlatSpec.scala:2219)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
15:26:16.342 [SyncControllerSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:26:16.380 [SyncControllerSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:26:16.448 [SyncControllerSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:26:16.512 [SyncControllerSpec_System-akka.actor.default-dispatcher-6] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:26:16.578 [SyncControllerSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:26:16.646 [SyncControllerSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:26:16.701 [SyncControllerSpec_System-akka.actor.default-dispatcher-5] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
[0m[[0minfo[0m] [0m[32mSyncControllerSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mSyncController[0m[0m
[0m[[0minfo[0m] [0m[31m- should download target block and request state nodes *** FAILED *** (20 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.blockchain.sync.SyncControllerSpec$TestSetup.<init>(SyncControllerSpec.scala:475)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.blockchain.sync.SyncControllerSpec$$anon$2.<init>(SyncControllerSpec.scala:43)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.blockchain.sync.SyncControllerSpec.$anonfun$new$3(SyncControllerSpec.scala:43)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should download target block, request state, blocks and finish when downloaded *** FAILED *** (49 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.blockchain.sync.SyncControllerSpec$TestSetup.<init>(SyncControllerSpec.scala:475)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.blockchain.sync.SyncControllerSpec$$anon$3.<init>(SyncControllerSpec.scala:103)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.blockchain.sync.SyncControllerSpec.$anonfun$new$4(SyncControllerSpec.scala:103)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should throttle requests to peer *** FAILED *** (49 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.blockchain.sync.SyncControllerSpec$TestSetup.<init>(SyncControllerSpec.scala:475)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.blockchain.sync.SyncControllerSpec$$anon$4.<init>(SyncControllerSpec.scala:175)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.blockchain.sync.SyncControllerSpec.$anonfun$new$5(SyncControllerSpec.scala:175)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should not use (blacklist) a peer that fails to respond within time limit *** FAILED *** (51 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.blockchain.sync.SyncControllerSpec$TestSetup.<init>(SyncControllerSpec.scala:475)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.blockchain.sync.SyncControllerSpec$$anon$5.<init>(SyncControllerSpec.scala:228)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.blockchain.sync.SyncControllerSpec.$anonfun$new$6(SyncControllerSpec.scala:228)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should only use ETC peer to choose target block *** FAILED *** (51 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.blockchain.sync.SyncControllerSpec$TestSetup.<init>(SyncControllerSpec.scala:475)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.blockchain.sync.SyncControllerSpec$$anon$6.<init>(SyncControllerSpec.scala:267)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.blockchain.sync.SyncControllerSpec.$anonfun$new$7(SyncControllerSpec.scala:267)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should re-enqueue block bodies when empty response is received *** FAILED *** (37 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.blockchain.sync.SyncControllerSpec$TestSetup.<init>(SyncControllerSpec.scala:475)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.blockchain.sync.SyncControllerSpec$$anon$7.<init>(SyncControllerSpec.scala:320)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.blockchain.sync.SyncControllerSpec.$anonfun$new$8(SyncControllerSpec.scala:320)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should start fast sync after restart, if fast sync was partially ran and then regular sync started *** FAILED *** (50 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.blockchain.sync.SyncControllerSpec$TestSetup.<init>(SyncControllerSpec.scala:475)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.blockchain.sync.SyncControllerSpec$$anon$1.<init>(SyncControllerSpec.scala:358)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.blockchain.sync.SyncControllerSpec.$anonfun$new$9(SyncControllerSpec.scala:358)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[32mOmmersValidatorSpec:[0m[0m
[0m[[0minfo[0m] [0m[32m- should validate correctly a valid list of ommers (8 seconds, 946 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should report a failure if the list of ommers is too big (14 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should report a failure if there is an invalid header in the list of ommers (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should report a failure if there is an ommer that was previously used (35 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should report a failure if there is an ommer which is of the last ancestors (34 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should report a failure if there is an ommer too old (34 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should report a failure if there is a duplicated ommer in the ommer list (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mMemorySpec:[0m[0m
[0m[[0minfo[0m] [0m[32m- Store a Byte (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Store an UInt256 (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Store an Array[Byte] (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Store a ByteString (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Load an UInt256 (8 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Load a ByteString (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Correctly increase memory size when storing (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Correctly increase memory size when loading (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- Correctly increase memory size when expanding (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32mTransactionMappingStorageSuite:[0m[0m
[0m[[0minfo[0m] [0m[32m- TransactionMappingStorage insert (57 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- TransactionMappingStorage delete (26 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mAesCbcSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mAES_CBC[0m[0m
[0m[[0minfo[0m] [0m[32m- should correctly evaluate for the test vectors (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should decrypt encrypted random values (5 milliseconds)[0m[0m
15:26:26.037 [Testsystem-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:26:26.117 [Testsystem-akka.actor.default-dispatcher-5] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
15:26:26.152 [Testsystem-akka.actor.default-dispatcher-5] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
[0m[[0minfo[0m] [0m[32mNetServiceSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mNetService[0m[0m
[0m[[0minfo[0m] [0m[32m- should return handshaked peer count (80 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return listening response (35 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return version response (34 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mBlockHeaderValidatorSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mBlockHeaderValidator[0m[0m
[0m[[0minfo[0m] [0m[32m- should validate correctly formed BlockHeaders (14 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return a failure if created based on invalid extra data (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should validate DAO block (extra data) (1 minute, 8 seconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return a failure if created based on invalid timestamp (12 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return a failure if created based on invalid difficulty (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return a failure if created based on invalid gas used (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m- should return a failure if created based on invalid gas limit *** FAILED *** (32 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  AssertionError was thrown during property evaluation.[0m[0m
[0m[[0minfo[0m] [0m[31m    Message: assertion failed: Bad value for gasLimit 0[0m[0m
[0m[[0minfo[0m] [0m[31m    Occurred when passed generated values ([0m[0m
[0m[[0minfo[0m] [0m[31m      arg0 = 0 // 255 shrinks[0m[0m
[0m[[0minfo[0m] [0m[31m    )[0m[0m
[0m[[0minfo[0m] [0m[31m- should return a failure if created with gas limit above threshold and block number >= eip106 block number *** FAILED *** (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for gasLimit 9223372036854775808[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.copy(BlockHeader.scala:24)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.validators.BlockHeaderValidatorSpec.$anonfun$new$14(BlockHeaderValidatorSpec.scala:116)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.FlatSpecLike$$anon$1.apply(FlatSpecLike.scala:1682)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[32m- should return a failure if created based on invalid number (305 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return a failure if created based on invalid nonce/mixHash (40 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should validate correctly a block whose parent is in storage (15 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return a failure if the parent's header is not in storage (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should properly validate a block after difficulty bomb pause (18 seconds, 100 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should properly calculate the difficulty after difficulty bomb resume (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32mContractCreationSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mLedger[0m[0m
[0m[[0minfo[0m] [0m[32m- should return an error if new contract's code size is larger than the limit (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should not return an error if new contract's code size is smaller than the limit (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should fail to execute contract creation code in case of address conflict (non-empty code) (15 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should fail to execute contract creation code in case of address conflict (non-zero nonce) (15 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should succeed in creating a contract if the account already has some balance, but zero nonce and empty code (26 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should initialise a new contract account with zero nonce before EIP-161 (14 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should initialise a new contract account with incremented nonce after EIP-161 (12 milliseconds)[0m[0m
15:27:53.809 [pool-4-thread-1-ScalaTest-running-BlockGeneratorSpec] INFO  i.i.e.b.data.GenesisDataLoader  - Using custom genesis data from: test-genesis.json
15:27:53.838 [pool-4-thread-1-ScalaTest-running-BlockGeneratorSpec] INFO  i.i.e.b.data.GenesisDataLoader  - Genesis data successfully loaded
15:27:53.891 [pool-4-thread-1-ScalaTest-running-BlockGeneratorSpec] INFO  i.i.e.b.data.GenesisDataLoader  - Using custom genesis data from: test-genesis.json
15:27:53.894 [pool-4-thread-1-ScalaTest-running-BlockGeneratorSpec] INFO  i.i.e.b.data.GenesisDataLoader  - Genesis data successfully loaded
15:27:53.943 [pool-4-thread-1-ScalaTest-running-BlockGeneratorSpec] INFO  i.i.e.b.data.GenesisDataLoader  - Using custom genesis data from: test-genesis.json
15:27:53.945 [pool-4-thread-1-ScalaTest-running-BlockGeneratorSpec] INFO  i.i.e.b.data.GenesisDataLoader  - Genesis data successfully loaded
15:27:53.994 [pool-4-thread-1-ScalaTest-running-BlockGeneratorSpec] INFO  i.i.e.b.data.GenesisDataLoader  - Using custom genesis data from: test-genesis.json
15:27:53.996 [pool-4-thread-1-ScalaTest-running-BlockGeneratorSpec] INFO  i.i.e.b.data.GenesisDataLoader  - Genesis data successfully loaded
15:27:54.054 [pool-4-thread-1-ScalaTest-running-BlockGeneratorSpec] INFO  i.i.e.b.data.GenesisDataLoader  - Using custom genesis data from: test-genesis.json
15:27:54.056 [pool-4-thread-1-ScalaTest-running-BlockGeneratorSpec] INFO  i.i.e.b.data.GenesisDataLoader  - Genesis data successfully loaded
15:27:54.115 [pool-4-thread-1-ScalaTest-running-BlockGeneratorSpec] INFO  i.i.e.b.data.GenesisDataLoader  - Using custom genesis data from: test-genesis.json
15:27:54.118 [pool-4-thread-1-ScalaTest-running-BlockGeneratorSpec] INFO  i.i.e.b.data.GenesisDataLoader  - Genesis data successfully loaded
15:27:54.175 [pool-4-thread-1-ScalaTest-running-BlockGeneratorSpec] INFO  i.i.e.b.data.GenesisDataLoader  - Using custom genesis data from: test-genesis.json
15:27:54.177 [pool-4-thread-1-ScalaTest-running-BlockGeneratorSpec] INFO  i.i.e.b.data.GenesisDataLoader  - Genesis data successfully loaded
15:27:54.247 [pool-4-thread-1-ScalaTest-running-BlockGeneratorSpec] INFO  i.i.e.b.data.GenesisDataLoader  - Using custom genesis data from: test-genesis.json
15:27:54.248 [pool-4-thread-1-ScalaTest-running-BlockGeneratorSpec] INFO  i.i.e.b.data.GenesisDataLoader  - Genesis data successfully loaded
15:27:54.354 [pool-4-thread-1-ScalaTest-running-BlockGeneratorSpec] INFO  i.i.e.b.data.GenesisDataLoader  - Using custom genesis data from: test-genesis.json
15:27:54.356 [pool-4-thread-1-ScalaTest-running-BlockGeneratorSpec] INFO  i.i.e.b.data.GenesisDataLoader  - Genesis data successfully loaded
[0m[[0minfo[0m] [0m[32mBlockGeneratorSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mBlockGenerator[0m[0m
[0m[[0minfo[0m] [0m[32m- should generate correct block with empty transactions (98 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should generate correct block with transactions (51 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should filter out failing transactions (50 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should filter out transactions exceeding block gas limit and include correct transactions (58 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should generate block before eip155 and filter out chain specific tx (63 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should generate block after eip155 and allow both chain specific and general transactions (58 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should include consecutive transactions from single sender (72 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should filter out failing transaction from the middle of tx list (106 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should include transaction with higher gas price if nonce is the same (58 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mValidationsAfterExecutionSpec:[0m[0m
[0m[[0minfo[0m] [0m[32m- should report valid results from execution as correct (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- should report as invalid a block that doesn't have the correct gas used (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should report as invalid a block that doesn't have the correct state root hash (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should report as invalid a block that doesn't have the correct receipts information (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32mBloomFilterSpec:[0m[0m
[0m[[0minfo[0m] [0m[32m- should properly create the bloom filter for without logs (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should properly create the bloom filter for with one log entry with one topic (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- should properly create the bloom filter for with many logs (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mBlockRewardCalculatorSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mBlockRewardCalculator[0m[0m
[0m[[0minfo[0m] [0m[32m- should correctly calculate block and ommer rewards (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should be compliant with ECIP1039 for block reward including zero, one or two, uncles until 50 era (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should be compliant with ECIP1039 for block reward including two uncles until 200 era (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0mScalaTest[0m
[0m[[0minfo[0m] [0m[36mRun completed in 6 minutes, 32 seconds.[0m[0m
[0m[[0minfo[0m] [0m[36mTotal number of tests run: 1066[0m[0m
[0m[[0minfo[0m] [0m[36mSuites: completed 93, aborted 0[0m[0m
[0m[[0minfo[0m] [0m[36mTests: succeeded 984, failed 82, canceled 0, ignored 0, pending 0[0m[0m
[0m[[0minfo[0m] [0m[31m*** 82 TESTS FAILED ***[0m[0m
[0m[[31merror[0m] [0mFailed: Total 1066, Failed 82, Errors 0, Passed 984[0m
[0m[[31merror[0m] [0mFailed tests:[0m
[0m[[31merror[0m] [0m	io.iohk.ethereum.blockchain.sync.SyncControllerSpec[0m
[0m[[31merror[0m] [0m	io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec[0m
[0m[[31merror[0m] [0m	io.iohk.ethereum.network.p2p.messages.NewBlockSpec[0m
[0m[[31merror[0m] [0m	io.iohk.ethereum.blockchain.sync.FastSyncStateStorageActorSpec[0m
[0m[[31merror[0m] [0m	io.iohk.ethereum.validators.BlockHeaderValidatorSpec[0m
[0m[[31merror[0m] [0m	io.iohk.ethereum.network.p2p.PeerActorSpec[0m
[0m[[31merror[0m] [0m(test:[31mtest[0m) sbt.TestsFailedException: Tests unsuccessful[0m
[0m[[31merror[0m] [0mTotal time: 397 s, completed Feb 21, 2018 3:27:55 PM[0m
