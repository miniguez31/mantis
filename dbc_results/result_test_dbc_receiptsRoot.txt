[0m[[0minfo[0m] [0mLoading project definition from /Users/miniguez/Documents/MIS/Reporte_Tecnico/mantis/project[0m
[0m[[0minfo[0m] [0mSet current project to mantis (in build file:/Users/miniguez/Documents/MIS/Reporte_Tecnico/mantis/)[0m
[0m[[0minfo[0m] [0mCompiling 1 Scala source to /Users/miniguez/Documents/MIS/Reporte_Tecnico/mantis/target/scala-2.12/classes...[0m
[0m[[0minfo[0m] [0m[32mBlockImportSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mImporting blocks[0m[0m
[0m[[0minfo[0m] [0m[31m- should ignore existing block *** FAILED *** (318 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockImportSpec$TestSetup.$init$(BlockImportSpec.scala:328)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockImportSpec$$anon$7.<init>(BlockImportSpec.scala:28)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockImportSpec.$anonfun$new$1(BlockImportSpec.scala:28)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should import a block to top of the main chain *** FAILED *** (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockImportSpec$TestSetup.$init$(BlockImportSpec.scala:328)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockImportSpec$$anon$9.<init>(BlockImportSpec.scala:39)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockImportSpec.$anonfun$new$2(BlockImportSpec.scala:39)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should handle exec error when importing to top *** FAILED *** (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockImportSpec$TestSetup.$init$(BlockImportSpec.scala:328)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockImportSpec$$anon$10.<init>(BlockImportSpec.scala:57)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockImportSpec.$anonfun$new$3(BlockImportSpec.scala:57)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should reorganise chain when a newly enqueued block forms a better branch *** FAILED *** (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockImportSpec$TestSetup.$init$(BlockImportSpec.scala:328)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockImportSpec$$anon$3.<init>(BlockImportSpec.scala:73)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockImportSpec.$anonfun$new$4(BlockImportSpec.scala:73)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should handle error when trying to reorganise chain *** FAILED *** (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockImportSpec$TestSetup.$init$(BlockImportSpec.scala:328)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockImportSpec$$anon$4.<init>(BlockImportSpec.scala:107)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockImportSpec.$anonfun$new$5(BlockImportSpec.scala:107)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should report an orphaned block *** FAILED *** (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockImportSpec$TestSetup.$init$(BlockImportSpec.scala:328)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockImportSpec$$anon$11.<init>(BlockImportSpec.scala:140)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockImportSpec.$anonfun$new$6(BlockImportSpec.scala:140)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should validate blocks prior to import *** FAILED *** (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockImportSpec$TestSetup.$init$(BlockImportSpec.scala:328)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockImportSpec$$anon$13.<init>(BlockImportSpec.scala:154)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockImportSpec.$anonfun$new$7(BlockImportSpec.scala:154)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[32mBranch resolution[0m[0m
[0m[[0minfo[0m] [0m[31m- should report an invalid branch when headers do not form a chain *** FAILED *** (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockImportSpec$TestSetup.$init$(BlockImportSpec.scala:328)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockImportSpec$$anon$15.<init>(BlockImportSpec.scala:169)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockImportSpec.$anonfun$new$8(BlockImportSpec.scala:169)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should report an invalid branch when headers do not reach the current best block number *** FAILED *** (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockImportSpec$TestSetup.$init$(BlockImportSpec.scala:328)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockImportSpec$$anon$16.<init>(BlockImportSpec.scala:174)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockImportSpec.$anonfun$new$9(BlockImportSpec.scala:174)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should report an unknown branch in the parent of the first header is unknown *** FAILED *** (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockImportSpec$TestSetup.$init$(BlockImportSpec.scala:328)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockImportSpec$$anon$17.<init>(BlockImportSpec.scala:181)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockImportSpec.$anonfun$new$10(BlockImportSpec.scala:181)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should report new better branch found when headers form a branch of higher difficulty than corresponding know headers *** FAILED *** (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockImportSpec$TestSetup.$init$(BlockImportSpec.scala:328)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockImportSpec$$anon$18.<init>(BlockImportSpec.scala:190)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockImportSpec.$anonfun$new$11(BlockImportSpec.scala:190)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should report no need for a chain switch the headers do not have difficulty greater than currently known branch *** FAILED *** (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockImportSpec$TestSetup.$init$(BlockImportSpec.scala:328)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockImportSpec$$anon$19.<init>(BlockImportSpec.scala:202)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockImportSpec.$anonfun$new$13(BlockImportSpec.scala:202)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should correctly handle a branch that goes up to the genesis block *** FAILED *** (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockImportSpec$TestSetup.$init$(BlockImportSpec.scala:328)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockImportSpec$$anon$20.<init>(BlockImportSpec.scala:214)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockImportSpec.$anonfun$new$15(BlockImportSpec.scala:214)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should report an unknown branch if the included genesis header is different than ours *** FAILED *** (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockImportSpec$TestSetup.$init$(BlockImportSpec.scala:328)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockImportSpec$$anon$21.<init>(BlockImportSpec.scala:227)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockImportSpec.$anonfun$new$17(BlockImportSpec.scala:227)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should not include common prefix as result when finding a new better branch *** FAILED *** (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockImportSpec$TestSetup.$init$(BlockImportSpec.scala:328)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockImportSpec$$anon$22.<init>(BlockImportSpec.scala:238)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockImportSpec.$anonfun$new$18(BlockImportSpec.scala:238)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should correctly import block with ommers and ancestor in block queue *** FAILED *** (286 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockImportSpec$TestSetup.$init$(BlockImportSpec.scala:328)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockImportSpec$$anon$1.<init>(BlockImportSpec.scala:254)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockImportSpec.$anonfun$new$21(BlockImportSpec.scala:254)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[32mAuthInitiateMessageSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mAuthInitiateMessage[0m[0m
[0m[[0minfo[0m] [0m[32m- should encode and decode itself (183 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should decode predefined message (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32mFrameCodecSpec:[0m[0m
[0m[[0minfo[0m] [0m[32m- should send message and receive a response (268 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mRLPSuite:[0m[0m
[0m[[0minfo[0m] [0m[32m- nextElementIndex of empty data (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Decoding of empty data (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- Decoding failure: Passing RLPValue when RLPList is expected (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Decoding failure: Passing RLPList when RLPValue is expected (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Decoding failure: Passing an RLPValue larger than expected (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Byte Encoding (103 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Short Encoding (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- String encoding (385 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Int Encoding (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Long Encoding (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- BigInt Encoding (32 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Byte Array Encoding (10 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Encode ByteString (8 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Encode Seq (21 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Encode Empty List (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Encode Short  List (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Encode Long  List (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- Encode multilist (28 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Encode Empty List Of List (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Encode Rep Of Two List Of List (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- https://github.com/ethereum/tests/blob/master/rlptest.txt (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SimpleBlock encoding (14 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Partial Data Parse Test (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Multiple partial decode (1 millisecond)[0m[0m
19:01:32.503 [io-iohk-ethereum-jsonrpc-server-JsonRpcServerSpec-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
[0m[[0minfo[0m] [0m[32mJsonRpcServerSpec:[0m[0m
[0m[[0minfo[0m] [0m[32m- should pass valid json request to controller (1 second, 553 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should pass valid batch json request to controller (58 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return BadRequest when malformed request is received (43 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return a CORS Error (30 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should accept CORS Requests (35 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mBlockHeaderSpec:[0m[0m
[0m[[0minfo[0m] [0m[32m- Encoding of block header without nonce (9 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mAesCtrSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mAES_CTR[0m[0m
[0m[[0minfo[0m] [0m[32m- should correctly evaluate for the test vectors (95 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should decrypt encrypted random values (30 milliseconds)[0m[0m
19:01:34.752 [personal-service-test-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:01:34.962 [personal-service-test-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:01:35.100 [personal-service-test-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:01:35.215 [personal-service-test-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:01:35.382 [personal-service-test-akka.actor.default-dispatcher-5] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:01:35.490 [personal-service-test-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:01:35.600 [personal-service-test-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:01:35.746 [personal-service-test-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:01:35.874 [personal-service-test-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:01:38.979 [personal-service-test-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:01:39.155 [personal-service-test-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:01:42.205 [personal-service-test-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:01:42.313 [personal-service-test-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:01:42.413 [personal-service-test-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:01:42.567 [personal-service-test-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:01:42.661 [personal-service-test-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:01:42.765 [personal-service-test-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:01:42.811 [personal-service-test-akka.actor.default-dispatcher-6] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:01:42.903 [personal-service-test-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:01:43.046 [personal-service-test-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:01:43.145 [personal-service-test-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:01:43.270 [personal-service-test-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:01:43.367 [personal-service-test-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:01:45.610 [personal-service-test-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:01:45.733 [personal-service-test-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:01:45.778 [personal-service-test-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
[0m[[0minfo[0m] [0m[32mPersonalServiceSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mPersonalService[0m[0m
[0m[[0minfo[0m] [0m[32m- should import private keys (247 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should create new accounts (122 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should list accounts (134 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should translate KeyStore errors to JsonRpc errors (172 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return an error when trying to import an invalid key (98 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should unlock an account given a correct passphrase (116 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should send a transaction (given sender address and a passphrase) (145 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should send a transaction when having pending txs from the same sender (125 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should fail to send a transaction given a wrong passphrase (3 seconds, 112 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should send a transaction (given sender address and using an unlocked account) (168 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should fail to send a transaction when account is locked (3 seconds, 56 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should lock an unlocked account (111 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should sign a message when correct passphrase is sent (97 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should sign a message using an unlocked account (152 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return an error if signing a message using a locked account (100 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return an error when signing a message if passphrase is wrong (90 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return an error when signing if unexistent address is sent (40 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should recover address form signed message (106 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should allow to sign and recover the same message (141 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should produce not chain specific transaction before eip155 (101 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should produce chain specific transaction after eip155 (114 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return an error when importing a duplicated key (105 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should unlock an account given a correct passphrase for specified duration (2 seconds, 243 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should delete existing wallet (108 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return error when deleting not existing wallet (56 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should handle changing passwords (214 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mReceiptStorageSuite:[0m[0m
[0m[[0minfo[0m] [0m[32m- ReceiptStorage insert (3 seconds, 523 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- ReceiptStorage delete (2 seconds, 284 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mPrecompiledContractsSpec:[0m[0m
[0m[[0minfo[0m] [0m[32m- ECDSARECOVER (374 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- ECDSARECOVER_Malformed_Recovery_ID_V (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SHA256 (8 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- RIPEMD160 (14 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- IDENTITY (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mCallOpcodesSpecPostEip161:[0m[0m
[0m[[0minfo[0m] [0m[32mCALL[0m[0m
[0m[[0minfo[0m] [0m[32m  when call depth limit is reached[0m[0m
[0m[[0minfo[0m] [0m[32m  - should not modify world state (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m  when call value is greater than balance[0m[0m
[0m[[0minfo[0m] [0m[32m  - should not modify world state (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when external contract terminates abnormally[0m[0m
[0m[[0minfo[0m] [0m[32m  - should modify only touched accounts in world state (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when calling an empty[0m[0m
[0m[[0minfo[0m] [0m[32m  - should consume correct gas (refund call gas, add new account modifier) when transferring value to Empty Account (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should consume correct gas when transferring no value to Empty Account (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mCodeStorageSuite:[0m[0m
[0m[[0minfo[0m] [0m[32m- CodeStorage insert (44 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- CodeStorage delete (34 milliseconds)[0m[0m
19:01:52.408 [BlockBroadcastSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:01:55.465 [BlockBroadcastSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:01:58.504 [BlockBroadcastSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:01.543 [BlockBroadcastSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:04.580 [BlockBroadcastSpec_System-akka.actor.default-dispatcher-6] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
[0m[[0minfo[0m] [0m[32mBlockBroadcastSpec:[0m[0m
[0m[[0minfo[0m] [0m[32m- should send a new block when it is not known by the peer (known by comparing total difficulties) (3 seconds, 54 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should not send a new block when it is known by the peer (known by comparing total difficulties) (3 seconds, 39 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should send a new block when it is not known by the peer (known by comparing max block number) (3 seconds, 42 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should not send a new block only when it is known by the peer (known by comparing max block number) (3 seconds, 36 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should send block hashes to all peers while the blocks only to sqrt of them (3 seconds, 81 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mSyncStateSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mSyncState[0m[0m
[0m[[0minfo[0m] [0m[32m- should prepend mpt nodes when enqueueing them (8 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mReadOnlyNodeStorageSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mReadOnlyNodeStorage[0m[0m
[0m[[0minfo[0m] [0m[32m- should not update dataSource (12 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should be able to read from underlying storage but not change it (25 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mBlockRewardSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mReward Calculation[0m[0m
[0m[[0minfo[0m] [0m[32m- should pay to the miner if no ommers included (38 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mReward[0m[0m
[0m[[0minfo[0m] [0m[32m- should be paid to the miner even if the account doesn't exist (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mReward Calculation[0m[0m
[0m[[0minfo[0m] [0m[32m- should be paid if ommers are included in block (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mReward[0m[0m
[0m[[0minfo[0m] [0m[32m- should be paid if ommers are included in block even if accounts don't exist (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mMerklePatriciaTrieSuite:[0m[0m
[0m[[0minfo[0m] [0m[32m- PatriciaTrie insert and get (166 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PatriciaTrie delete (212 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Trie insert should have the same root independently on the order its pairs are inserted (116 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Remove key from an empty tree (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Remove a key that does not exist (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Insert only one (key, value) pair to a trie and then deleted (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Insert two (key, value) pairs with the first hex not in common (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- Insert two (key, value) pairs with one hex or more in common (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- Insert two (key, value) pairs with the same key (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Insert 3 (key, value) pairs with different first hex (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- Multiple insertions (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Multiple insertions and the removals (16 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Insert 3 (key-value) pairs with a common prefix (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Insert 2 (key-value) pairs with one hex in common and then delete one of them (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- Insert 2 (key-value) pairs with more than one hex in common and then delete one of them (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Insert 2 (key-value) pairs with more than one hex in common and then delete one of them, has the same result as only adding the pair left (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Insert 2 (key-value) pairs with nothing in common and then delete one of them, has the same result as only adding the pair left (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- Remove of a trie with an extension whose next is not on source (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Get in an empty trie (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- Insert with an empty key in a branch node (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Remove of a key (not in trie) whose value should be in a branch node (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- Remove of a key (not in trie) that should be in the child of a BranchNode that is not present (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- Invalid root hash should return an error accordingly (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- testDeleteCompletellyDiferentItems (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- storageHashCalc_1 (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- EthereumJ compatibility - Empty Trie (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- EthereumJ compatibility - LeafNode Hash (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- EtheruemJ compatibility - BranchNode hash (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- EthereumJ compatibility - ExtensionNode hash (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- EthereumJ compatibility - BranchNode with extension hash (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- Using empty root as hash allow to create a MPT (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- PatriciaTrie insert causes node duplicated and removal of one of them should not fail (8 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Creating temporal extension node already used in MPT doesn't cause missing node while pruning (25 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Creating temporal leaf node already used in MPT doesn't cause missing node while pruning (29 milliseconds)[0m[0m
19:02:08.520 [DiscoverySpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:08.698 [DiscoverySpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:09.257 [DiscoverySpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:09.310 [DiscoverySpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
[0m[[0minfo[0m] [0m[32mPeerDiscoveryManagerSpec:[0m[0m
[0m[[0minfo[0m] [0m[32m- should correctly respond to Ping Message (176 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should correctly respond to Pong Message (562 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should correctly respond to FindNode Message (51 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should correctly respond to neighbours Message (53 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mEncryptedKeySpec:[0m[0m
[0m[[0minfo[0m] [0m[32mEncryptedKey[0m[0m
[0m[[0minfo[0m] [0m[32m- should securely store private keys (3 seconds, 406 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should decrypt a key encrypted by Geth (1 second, 831 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should decrypt a key encrypted by Parity (53 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mNewBlockSpec:[0m[0m
[0m[[0minfo[0m] [0m[32m- NewBlock messages are encoded and decoded properly (1 second, 442 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- NewBlock messages are properly encoded (1 millisecond)[0m[0m
19:02:16.158 [PeerManagerActorSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:16.321 [PeerManagerActorSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:16.394 [PeerManagerActorSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:16.495 [PeerManagerActorSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:16.620 [PeerManagerActorSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
[0m[[0minfo[0m] [0m[32mPeerManagerSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mPeerManager[0m[0m
[0m[[0minfo[0m] [0m[32m- should try to connect to bootstrap nodes on startup (159 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should retry connections to remaining bootstrap nodes (74 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should publish disconnect messages from peers (103 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should not handle the connection from a peer that's already connected (124 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should handle pending and handshaked incoming peers (153 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mSignedTransactionSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mSignedTransaction[0m[0m
[0m[[0minfo[0m] [0m[32m- should correctly set pointSign for chainId with chain specific signing schema (91 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mEtcHandshakerSpec:[0m[0m
[0m[[0minfo[0m] [0m[32m- should correctly connect during an apropiate handshake if no fork resolver is used (78 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should send status with total difficulty (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should correctly connect during an apropiate handshake if a fork resolver is used and the remote peer has the DAO block (14 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should correctly connect during an apropiate handshake if a fork resolver is used and the remote peer doesn't have the DAO block (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should fail if a timeout happened during hello exchange (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should fail if a timeout happened during status exchange (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should fail if a timeout happened during fork block exchange (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should fail if the remote peer doesn't support PV63 (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should fail if a fork resolver is used and the block from the remote peer isn't accepted (5 milliseconds)[0m[0m
19:02:17.475 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-5] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:17.557 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:17.613 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:17.673 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:17.697 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:17.755 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-5] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:17.813 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:17.869 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:17.929 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:17.979 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:18.017 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:18.073 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:18.133 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:18.181 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:18.251 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:18.299 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:18.353 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:18.409 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:18.467 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-5] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:18.524 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:18.578 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:18.633 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:18.690 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:18.748 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:18.804 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:18.820 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:18.881 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:18.918 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:18.976 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:19.032 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-5] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:19.092 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:19.152 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:19.209 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:19.270 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:19.330 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:19.392 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:19.420 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:19.478 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:19.544 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:19.575 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:19.604 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:19.668 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:19.726 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:19.750 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:19.803 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:19.859 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:19.908 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:19.963 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-5] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:20.017 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:20.075 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-5] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:20.134 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:20.190 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:20.249 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:20.311 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:20.371 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:20.431 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-6] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:20.491 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-6] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:20.538 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-5] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:20.598 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:20.657 [JsonRpcControllerSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
[0m[[0minfo[0m] [0m[32mJsonRpcControllerSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mJsonRpcController[0m[0m
[0m[[0minfo[0m] [0m[31m- should handle valid sha3 request *** FAILED *** (96 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 756e75736564 12[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$1.<init>(JsonRpcControllerSpec.scala:46)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$1(JsonRpcControllerSpec.scala:46)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should fail when invalid request is received *** FAILED *** (57 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 756e75736564 12[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$2.<init>(JsonRpcControllerSpec.scala:57)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$2(JsonRpcControllerSpec.scala:57)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should handle clientVersion request *** FAILED *** (57 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 756e75736564 12[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$3.<init>(JsonRpcControllerSpec.scala:67)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$3(JsonRpcControllerSpec.scala:67)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should Handle net_peerCount request *** FAILED *** (22 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 756e75736564 12[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$4.<init>(JsonRpcControllerSpec.scala:78)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$4(JsonRpcControllerSpec.scala:78)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should Handle net_listening request *** FAILED *** (58 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 756e75736564 12[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$5.<init>(JsonRpcControllerSpec.scala:88)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$5(JsonRpcControllerSpec.scala:88)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should Handle net_version request *** FAILED *** (57 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 756e75736564 12[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$6.<init>(JsonRpcControllerSpec.scala:98)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$6(JsonRpcControllerSpec.scala:98)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_protocolVersion *** FAILED *** (55 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 756e75736564 12[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$7.<init>(JsonRpcControllerSpec.scala:110)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$7(JsonRpcControllerSpec.scala:110)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should handle eth_blockNumber request *** FAILED *** (59 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 756e75736564 12[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$8.<init>(JsonRpcControllerSpec.scala:121)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$8(JsonRpcControllerSpec.scala:121)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_syncing *** FAILED *** (47 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 756e75736564 12[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$9.<init>(JsonRpcControllerSpec.scala:135)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$9(JsonRpcControllerSpec.scala:135)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should only allow to call mehtods of enabled apis *** FAILED *** (38 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 756e75736564 12[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$10.<init>(JsonRpcControllerSpec.scala:150)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$10(JsonRpcControllerSpec.scala:150)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should handle eth_getBlockTransactionCountByHash request *** FAILED *** (57 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 756e75736564 12[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$11.<init>(JsonRpcControllerSpec.scala:169)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$11(JsonRpcControllerSpec.scala:169)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should handle eth_getBlockByHash request *** FAILED *** (59 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 756e75736564 12[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$12.<init>(JsonRpcControllerSpec.scala:190)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$12(JsonRpcControllerSpec.scala:190)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should handle eth_getBlockByNumber request *** FAILED *** (46 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 756e75736564 12[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$13.<init>(JsonRpcControllerSpec.scala:214)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$13(JsonRpcControllerSpec.scala:214)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should handle eth_getUncleByBlockHashAndIndex request *** FAILED *** (57 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 756e75736564 12[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$14.<init>(JsonRpcControllerSpec.scala:238)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$14(JsonRpcControllerSpec.scala:238)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should handle eth_getUncleByBlockNumberAndIndex request *** FAILED *** (56 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 756e75736564 12[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$15.<init>(JsonRpcControllerSpec.scala:267)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$15(JsonRpcControllerSpec.scala:267)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should handle eth_getTransactionByBlockHashAndIndex request *** FAILED *** (57 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 756e75736564 12[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$16.<init>(JsonRpcControllerSpec.scala:296)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$16(JsonRpcControllerSpec.scala:296)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should personal_importRawKey *** FAILED *** (55 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 756e75736564 12[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$17.<init>(JsonRpcControllerSpec.scala:323)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$17(JsonRpcControllerSpec.scala:323)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should personal_newAccount *** FAILED *** (56 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 756e75736564 12[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$18.<init>(JsonRpcControllerSpec.scala:342)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$18(JsonRpcControllerSpec.scala:342)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should personal_listAccounts *** FAILED *** (56 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 756e75736564 12[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$19.<init>(JsonRpcControllerSpec.scala:359)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$19(JsonRpcControllerSpec.scala:359)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should personal_unlockAccount *** FAILED *** (53 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 756e75736564 12[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$20.<init>(JsonRpcControllerSpec.scala:375)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$21(JsonRpcControllerSpec.scala:375)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should personal_unlockAccount for specified duration *** FAILED *** (54 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 756e75736564 12[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$21.<init>(JsonRpcControllerSpec.scala:392)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$22(JsonRpcControllerSpec.scala:392)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should personal_unlockAccount should handle possible duration errors *** FAILED *** (55 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 756e75736564 12[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$22.<init>(JsonRpcControllerSpec.scala:410)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$23(JsonRpcControllerSpec.scala:410)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should personal_lockAccount *** FAILED *** (56 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 756e75736564 12[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$23.<init>(JsonRpcControllerSpec.scala:428)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$24(JsonRpcControllerSpec.scala:428)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should personal_sendTransaction *** FAILED *** (55 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 756e75736564 12[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$24.<init>(JsonRpcControllerSpec.scala:444)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$25(JsonRpcControllerSpec.scala:444)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should daedalus_deleteWallet *** FAILED *** (15 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 756e75736564 12[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$25.<init>(JsonRpcControllerSpec.scala:467)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$26(JsonRpcControllerSpec.scala:467)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should daedalus_changePassphrase *** FAILED *** (56 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 756e75736564 12[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$26.<init>(JsonRpcControllerSpec.scala:483)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$27(JsonRpcControllerSpec.scala:483)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_sendTransaction *** FAILED *** (39 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 756e75736564 12[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$27.<init>(JsonRpcControllerSpec.scala:501)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$28(JsonRpcControllerSpec.scala:501)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_getWork *** FAILED *** (56 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 756e75736564 12[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$28.<init>(JsonRpcControllerSpec.scala:524)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$29(JsonRpcControllerSpec.scala:524)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_getWork when fail to get ommers and transactions *** FAILED *** (57 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 756e75736564 12[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$29.<init>(JsonRpcControllerSpec.scala:559)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$30(JsonRpcControllerSpec.scala:559)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_submitWork *** FAILED *** (59 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 756e75736564 12[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$30.<init>(JsonRpcControllerSpec.scala:592)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$31(JsonRpcControllerSpec.scala:592)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_submitHashrate *** FAILED *** (59 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 756e75736564 12[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$31.<init>(JsonRpcControllerSpec.scala:620)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$32(JsonRpcControllerSpec.scala:620)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_hashrate *** FAILED *** (57 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 756e75736564 12[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$32.<init>(JsonRpcControllerSpec.scala:638)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$33(JsonRpcControllerSpec.scala:638)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_gasPrice *** FAILED *** (56 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 756e75736564 12[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$33.<init>(JsonRpcControllerSpec.scala:653)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$34(JsonRpcControllerSpec.scala:653)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_call *** FAILED *** (61 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 756e75736564 12[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$34.<init>(JsonRpcControllerSpec.scala:671)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$35(JsonRpcControllerSpec.scala:671)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_estimateGas *** FAILED *** (61 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 756e75736564 12[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$35.<init>(JsonRpcControllerSpec.scala:697)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$36(JsonRpcControllerSpec.scala:697)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_getCode *** FAILED *** (27 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 756e75736564 12[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$36.<init>(JsonRpcControllerSpec.scala:732)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$38(JsonRpcControllerSpec.scala:732)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_getUncleCountByBlockNumber *** FAILED *** (51 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 756e75736564 12[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$37.<init>(JsonRpcControllerSpec.scala:755)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$39(JsonRpcControllerSpec.scala:755)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_getUncleCountByBlockHash *** FAILED *** (66 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 756e75736564 12[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$38.<init>(JsonRpcControllerSpec.scala:778)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$40(JsonRpcControllerSpec.scala:778)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_getBlockTransactionCountByNumber *** FAILED *** (32 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 756e75736564 12[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$39.<init>(JsonRpcControllerSpec.scala:801)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$41(JsonRpcControllerSpec.scala:801)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_coinbase *** FAILED *** (27 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 756e75736564 12[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$40.<init>(JsonRpcControllerSpec.scala:824)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$42(JsonRpcControllerSpec.scala:824)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_getTransactionByBlockNumberAndIndex by tag *** FAILED *** (64 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 756e75736564 12[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$41.<init>(JsonRpcControllerSpec.scala:839)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$43(JsonRpcControllerSpec.scala:839)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_getTransactionByBlockNumberAndIndex by hex number *** FAILED *** (58 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 756e75736564 12[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$42.<init>(JsonRpcControllerSpec.scala:867)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$44(JsonRpcControllerSpec.scala:867)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_getTransactionByBlockNumberAndIndex by number *** FAILED *** (12 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 756e75736564 12[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$43.<init>(JsonRpcControllerSpec.scala:894)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$45(JsonRpcControllerSpec.scala:894)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_getBalance *** FAILED *** (56 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 756e75736564 12[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$44.<init>(JsonRpcControllerSpec.scala:921)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$46(JsonRpcControllerSpec.scala:921)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_getStorageAt *** FAILED *** (52 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 756e75736564 12[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$45.<init>(JsonRpcControllerSpec.scala:945)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$47(JsonRpcControllerSpec.scala:945)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_getTransactionCount *** FAILED *** (55 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 756e75736564 12[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$46.<init>(JsonRpcControllerSpec.scala:970)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$48(JsonRpcControllerSpec.scala:970)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_getTransactionByHash *** FAILED *** (58 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 756e75736564 12[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$47.<init>(JsonRpcControllerSpec.scala:994)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$49(JsonRpcControllerSpec.scala:994)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_sign *** FAILED *** (53 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 756e75736564 12[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$48.<init>(JsonRpcControllerSpec.scala:1018)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$50(JsonRpcControllerSpec.scala:1018)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should personal_sign *** FAILED *** (57 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 756e75736564 12[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$49.<init>(JsonRpcControllerSpec.scala:1044)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$51(JsonRpcControllerSpec.scala:1044)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should personal_ecRecover *** FAILED *** (54 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 756e75736564 12[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$50.<init>(JsonRpcControllerSpec.scala:1071)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$52(JsonRpcControllerSpec.scala:1071)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_newFilter *** FAILED *** (54 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 756e75736564 12[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$51.<init>(JsonRpcControllerSpec.scala:1093)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$53(JsonRpcControllerSpec.scala:1093)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_newBlockFilter *** FAILED *** (60 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 756e75736564 12[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$52.<init>(JsonRpcControllerSpec.scala:1121)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$54(JsonRpcControllerSpec.scala:1121)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_newPendingTransactionFilter *** FAILED *** (59 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 756e75736564 12[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$53.<init>(JsonRpcControllerSpec.scala:1139)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$55(JsonRpcControllerSpec.scala:1139)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_uninstallFilter *** FAILED *** (59 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 756e75736564 12[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$54.<init>(JsonRpcControllerSpec.scala:1157)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$56(JsonRpcControllerSpec.scala:1157)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_getFilterChanges *** FAILED *** (60 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 756e75736564 12[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$55.<init>(JsonRpcControllerSpec.scala:1178)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$57(JsonRpcControllerSpec.scala:1178)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_getFilterLogs *** FAILED *** (60 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 756e75736564 12[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$56.<init>(JsonRpcControllerSpec.scala:1215)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$58(JsonRpcControllerSpec.scala:1215)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_getLogs *** FAILED *** (51 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 756e75736564 12[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$57.<init>(JsonRpcControllerSpec.scala:1242)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$59(JsonRpcControllerSpec.scala:1242)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should rpc_modules *** FAILED *** (57 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 756e75736564 12[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$58.<init>(JsonRpcControllerSpec.scala:1285)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$60(JsonRpcControllerSpec.scala:1285)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should eth_getTransactionReceipt *** FAILED *** (58 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 756e75736564 12[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$59.<init>(JsonRpcControllerSpec.scala:1302)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$61(JsonRpcControllerSpec.scala:1302)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should daedalus_getAccountTransactions *** FAILED *** (59 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 756e75736564 12[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$TestSetup.$init$(JsonRpcControllerSpec.scala:1459)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec$$anon$60.<init>(JsonRpcControllerSpec.scala:1362)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec.$anonfun$new$62(JsonRpcControllerSpec.scala:1362)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[32mECIESCoderSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mECIESCoder[0m[0m
[0m[[0minfo[0m] [0m[32m- should decrypt encrypted message (14 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mECIESCoder[0m[0m
[0m[[0minfo[0m] [0m[32m- should decryptSimple encryptSimple message (17 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mECIESCoder[0m[0m
[0m[[0minfo[0m] [0m[32m- should pass test for simple encoding from ethereumJ (9 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mECIESCoder[0m[0m
[0m[[0minfo[0m] [0m[32m- should past tests from ethereumJ - test1 (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32mECIESCoder[0m[0m
[0m[[0minfo[0m] [0m[32m- should past tests from ethereumJ - test2 (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mBlockSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mBlock size[0m[0m
[0m[[0minfo[0m] [0m[32m- should be correct (4 milliseconds)[0m[0m
19:02:20.877 [pool-4-thread-5-ScalaTest-running-BootstrapDownloadSpec] INFO  io.iohk.ethereum.BootstrapDownload$  - Downloaded file downloadtestrunning.zip successfully deleted
19:02:20.881 [pool-4-thread-5-ScalaTest-running-BootstrapDownloadSpec] INFO  io.iohk.ethereum.BootstrapDownload$  - /var/folders/30/kyrlcg7s2msf3tbg893xqgnh0000gn/T/downloadtest/subfolder must end in a folder named leveldb
[0m[[0minfo[0m] [0m[32mBootstrapDownloadSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mBootstrapDownload[0m[0m
[0m[[0minfo[0m] [0m[32m- should download the file and generate correct hash (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should unzip the file correctly to the expected folder (8 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should delete the downloaded file (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- should refuse to clean out a folder not called 'leveldb' (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should clean out the leveldb folder (remove all files) (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mEphemDataSourceSuite:[0m[0m
[0m[[0minfo[0m] [0m[32m- EphemDataSource insert (19 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- EphemDataSource delete (21 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- EphemDataSource clear (14 milliseconds)[0m[0m
19:02:20.992 [test-system-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:24.052 [test-system-akka.actor.default-dispatcher-6] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:27.079 [test-system-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:30.115 [test-system-akka.actor.default-dispatcher-5] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:33.171 [test-system-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:36.186 [test-system-akka.actor.default-dispatcher-5] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:39.219 [test-system-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:39.235 [test-system-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:39.254 [test-system-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
[0m[[0minfo[0m] [0m[32mPeerEventBusActorSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mPeerEventBusActor[0m[0m
[0m[[0minfo[0m] [0m[32m- should relay messages received to subscribers (3 seconds, 63 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should only relay matching message codes (3 seconds, 24 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should relay peers disconnecting to its subscribers (3 seconds, 38 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should relay peers handshaked to its subscribers (3 seconds, 56 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should relay a single notification when subscribed twice to the same message code (3 seconds, 13 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should allow to handle subscriptions using AllPeers and WithId PeerSelector at the same time (3 seconds, 33 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should allow to subscribe to new messages (16 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should not change subscriptions when subscribing to empty set (18 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should allow to unsubscribe from messages (6 seconds, 26 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mReceiptsSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mReceipts[0m[0m
[0m[[0minfo[0m] [0m[32m- should encode receipts (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should decode receipts (11 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should decode encoded receipts (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mOpCodeGasSpecPostEip161:[0m[0m
[0m[[0minfo[0m] [0m[32m- SELFDESTRUCT (29 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mMessageSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mMessage[0m[0m
[0m[[0minfo[0m] [0m[32m- should decode message from given version of protocol (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should decode message redefined in newer version of protocol (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should decode message available only in older version of protocol (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should not decode message from older version of protocol as newer version (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- should not decode message not existing in given protocol (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should decode wire protocol message for all versions of protocol (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mAuthHandshakerSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mAuthHandshaker[0m[0m
[0m[[0minfo[0m] [0m[32m- should handle init response (26 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should handle both incoming packet and a response (58 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mKeyValueStorageSuite:[0m[0m
[0m[[0minfo[0m] [0m[32m- Get ints from KeyValueStorage (18 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Insert ints to KeyValueStorage (281 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Delete ints from KeyValueStorage (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Put ints into KeyValueStorage (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Remove ints from KeyValueStorage (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mIodbDataSourceTest:[0m[0m
[0m[[0minfo[0m] [0m[32m- should be able to insert and retrieve stored keys (85 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should allow to remove keys (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should remove all keys after clear (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should allow using multiple namespaces with the same key (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mBlockchainSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mBlockchain[0m[0m
[0m[[0minfo[0m] [0m[32m- should be able to store a block and return if if queried by hash (19 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should be able to store a block and retrieve it by number (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should be able to query a stored blockHeader by it's number (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- should not return a value if not stored (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return an account given an address and a block number (14 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mPeerActorSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mPeerActor[0m[0m
[0m[[0minfo[0m] [0m[31m- should create rlpx connection and send hello message *** FAILED *** (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 30 2[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec$NodeStatusSetup.$init$(PeerActorSpec.scala:408)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec$$anon$1.<init>(PeerActorSpec.scala:49)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec.$anonfun$new$1(PeerActorSpec.scala:49)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should retry failed rlpx connection *** FAILED *** (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 30 2[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec$NodeStatusSetup.$init$(PeerActorSpec.scala:408)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec$$anon$2.<init>(PeerActorSpec.scala:60)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec.$anonfun$new$2(PeerActorSpec.scala:60)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should try to reconnect on broken rlpx connection *** FAILED *** (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 30 2[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec$NodeStatusSetup.$init$(PeerActorSpec.scala:408)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec$$anon$11.<init>(PeerActorSpec.scala:74)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec.$anonfun$new$4(PeerActorSpec.scala:74)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should successfully connect to ETC peer *** FAILED *** (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 30 2[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec$NodeStatusSetup.$init$(PeerActorSpec.scala:408)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec$$anon$3.<init>(PeerActorSpec.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec.$anonfun$new$5(PeerActorSpec.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should successfully connect to and IPv6 peer *** FAILED *** (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 30 2[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec$NodeStatusSetup.$init$(PeerActorSpec.scala:408)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec$$anon$4.<init>(PeerActorSpec.scala:141)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec.$anonfun$new$6(PeerActorSpec.scala:141)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should disconnect from non-ETC peer *** FAILED *** (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 30 2[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec$NodeStatusSetup.$init$(PeerActorSpec.scala:408)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec$$anon$5.<init>(PeerActorSpec.scala:177)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec.$anonfun$new$7(PeerActorSpec.scala:177)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should disconnect from non-ETC peer (when node is before fork) *** FAILED *** (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 30 2[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec$NodeStatusSetup.$init$(PeerActorSpec.scala:408)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec$$anon$6.<init>(PeerActorSpec.scala:212)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec.$anonfun$new$8(PeerActorSpec.scala:212)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should disconnect on Hello timeout *** FAILED *** (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 30 2[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec$NodeStatusSetup.$init$(PeerActorSpec.scala:408)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec$$anon$7.<init>(PeerActorSpec.scala:238)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec.$anonfun$new$9(PeerActorSpec.scala:238)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should respond to fork block request during the handshake *** FAILED *** (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 30 2[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec$NodeStatusSetup.$init$(PeerActorSpec.scala:408)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec$$anon$8.<init>(PeerActorSpec.scala:251)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec.$anonfun$new$10(PeerActorSpec.scala:251)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should stash disconnect message until handshaked *** FAILED *** (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 30 2[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec$NodeStatusSetup.$init$(PeerActorSpec.scala:408)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec$$anon$9.<init>(PeerActorSpec.scala:282)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec.$anonfun$new$11(PeerActorSpec.scala:282)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should stay connected to pre fork peer *** FAILED *** (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot 30 2[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec$NodeStatusSetup.$init$(PeerActorSpec.scala:408)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec$$anon$10.<init>(PeerActorSpec.scala:309)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.network.p2p.PeerActorSpec.$anonfun$new$12(PeerActorSpec.scala:309)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[32mNodeParserSpec:[0m[0m
[0m[[0minfo[0m] [0m[32m- should correctly parse IPv4 nodes (25 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should correctly parse IPv6 nodes (2 milliseconds)[0m[0m
19:02:46.141 [RLPxHandlerSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:46.229 [RLPxHandlerSpec_System-akka.actor.default-dispatcher-5] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:02:52.276 [RLPxHandlerSpec_System-akka.actor.default-dispatcher-5] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:03:01.336 [RLPxHandlerSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:03:04.393 [RLPxHandlerSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:03:04.437 [RLPxHandlerSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:03:04.497 [RLPxHandlerSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
[0m[[0minfo[0m] [0m[32mRLPxConnectionHandlerSpec:[0m[0m
[0m[[0minfo[0m] [0m[32m- should write messages send to TCP connection (94 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should write messages to TCP connection once all previous ACK were received (6 seconds, 47 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should accummulate messages and write them when receiving ACKs (9 seconds, 58 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should close the connection when Ack timeout happens (3 seconds, 57 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should ignore timeout of old messages (43 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should close the connection if the AuthHandshake init message's MAC is invalid (60 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should close the connection if the AuthHandshake response message's MAC is invalid (52 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mCreateOpcodeSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mCREATE[0m[0m
[0m[[0minfo[0m] [0m[32m  when initialization code executes normally[0m[0m
[0m[[0minfo[0m] [0m[32m  - should create a new contract (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should update sender (creator) account (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return the new contract's address (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should consume correct gas (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should step forward (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m  when initialization code fails[0m[0m
[0m[[0minfo[0m] [0m[32m  - should not modify world state except for the creator's nonce (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return 0 (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should consume correct gas (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should step forward (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when initialization code runs normally but there's not enough gas to deposit code[0m[0m
[0m[[0minfo[0m] [0m[32m  - should consume all gas passed to the init code (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should not modify world state except for the creator's nonce (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return 0 (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when call depth limit is reached[0m[0m
[0m[[0minfo[0m] [0m[32m  - should not modify world state (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return 0 (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should consume correct gas (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when endowment value is greater than balance[0m[0m
[0m[[0minfo[0m] [0m[32m  - should not modify world state (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return 0 (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should consume correct gas (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32minitialization includes SELFDESTRUCT opcode[0m[0m
[0m[[0minfo[0m] [0m[32m- should refund the correct amount of gas (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32minitialization includes a SSTORE opcode that clears the storage[0m[0m
[0m[[0minfo[0m] [0m[32m- should refund the correct amount of gas (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32mmaxCodeSize check is enabled[0m[0m
[0m[[0minfo[0m] [0m[32m- should result in an out of gas if the code is larger than the limit (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should not result in an out of gas if the code is smaller than the limit (8 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32maccount with non-empty code already exists[0m[0m
[0m[[0minfo[0m] [0m[32m- should fail to create contract (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32maccount with non-zero nonce already exists[0m[0m
[0m[[0minfo[0m] [0m[32m- should fail to create contract (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32maccount with non-zero balance, but empty code and zero nonce, already exists[0m[0m
[0m[[0minfo[0m] [0m[32m- should succeed in creating new contract (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mTransactionSpec:[0m[0m
[0m[[0minfo[0m] [0m[32m- should not recover sender public key for new sign encoding schema if there is no chain_id in signed data (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- should recover sender address (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- should recover sender for new sign encoding schema if there is chain_id in signed data (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should recover false sender address for invalid transaction (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- should not recover a sender address for transaction with invalid point sign (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should recover the correct sender for tx in block 46147 (4 milliseconds)[0m[0m
19:03:04.704 [OmmersPoolSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:03:04.736 [OmmersPoolSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:03:04.760 [OmmersPoolSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
[0m[[0minfo[0m] [0m[32mOmmersPoolSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mOmmersPool[0m[0m
[0m[[0minfo[0m] [0m[32m- should accept ommers (34 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mOmmersPool[0m[0m
[0m[[0minfo[0m] [0m[32m- should removes ommers ommers (23 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mOmmersPool[0m[0m
[0m[[0minfo[0m] [0m[32m- should returns ommers when out of pool siez (20 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mBlockValidatorSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mBlock[0m[0m
[0m[[0minfo[0m] [0m[32m- should created based on valid data (28 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mBlock[0m[0m
[0m[[0minfo[0m] [0m[32m- should return a failure if created based on invalid transactions header (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mBlock[0m[0m
[0m[[0minfo[0m] [0m[32m- should return a failure if created based on invalid ommers header (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mBlock[0m[0m
[0m[[0minfo[0m] [0m[32m- should return a failure if created based on invalid receipts header (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mBlock[0m[0m
[0m[[0minfo[0m] [0m[32m- should return a failure if created based on invalid log bloom header (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mBlock[0m[0m
[0m[[0minfo[0m] [0m[32m- should return a failure if a block body doesn't corresponds to a block header due to wrong tx hash (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mBlock[0m[0m
[0m[[0minfo[0m] [0m[32m- should return a failure if a block body doesn't corresponds to a block header due to wrong ommers hash (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mBlock[0m[0m
[0m[[0minfo[0m] [0m[32m- should correctly handle the case where a block has no receipts (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32mTotalDifficultyStorageSuite:[0m[0m
[0m[[0minfo[0m] [0m[32m- TotalDifficultyStorage insert (25 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- TotalDifficultyStorage delete (23 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mOpCodeFunSpec:[0m[0m
[0m[[0minfo[0m] [0m[32m- STOP (19 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- ISZERO (15 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- NOT (16 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- ADD (17 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- MUL (10 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SUB (13 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DIV (9 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SDIV (11 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- MOD (10 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SMOD (10 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- EXP (19 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SIGNEXTEND (18 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- LT (14 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- GT (12 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SLT (16 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SGT (25 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- EQ (14 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- AND (29 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- OR (11 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- XOR (9 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- BYTE (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- ADDMOD (14 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- MULMOD (11 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- ADDRESS (8 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- ORIGIN (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- CALLER (10 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- CALLVALUE (9 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- CALLDATASIZE (12 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- CODESIZE (10 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- GASPRICE (10 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- COINBASE (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- TIMESTAMP (11 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- NUMBER (11 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DIFFICULTY (10 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- GASLIMIT (10 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PC (13 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- GAS (9 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- MSIZE (14 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SHA3 (14 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- BALANCE (14 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- CALLDATALOAD (8 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- CALLDATACOPY (12 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- CODECOPY (13 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- EXTCODESIZE (13 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- EXTCODECOPY (22 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- BLOCKHASH (8 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- POP (11 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- MLOAD (9 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- MSTORE (12 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- MSTORE8 (11 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SLOAD (53 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SSTORE (59 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- JUMP (35 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- JUMPI (31 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- JUMPDEST (12 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH1 (10 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH2 (9 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH3 (8 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH4 (8 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH5 (8 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH6 (13 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH7 (11 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH8 (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH9 (8 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH10 (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH11 (8 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH12 (11 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH13 (11 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH14 (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH15 (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH16 (8 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH17 (9 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH18 (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH19 (8 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH20 (8 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH21 (10 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH22 (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH23 (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH24 (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH25 (8 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH26 (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH27 (23 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH28 (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH29 (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH30 (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH31 (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH32 (8 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP1 (8 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP2 (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP3 (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP4 (9 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP5 (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP6 (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP7 (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP8 (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP9 (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP10 (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP11 (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP12 (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP13 (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP14 (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP15 (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP16 (11 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP1 (9 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP2 (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP3 (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP4 (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP5 (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP6 (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP7 (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP8 (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP9 (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP10 (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP11 (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP12 (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP13 (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP14 (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP15 (29 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP16 (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- LOG0 (9 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- LOG1 (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- LOG2 (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- LOG3 (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- LOG4 (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- RETURN (9 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- INVALID (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SELFDESTRUCT (17 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- all opcodes have been registered (8 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- sliceBytes helper (16 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mCallOpcodesSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mCALL[0m[0m
[0m[[0minfo[0m] [0m[32m  when external contract terminates normally[0m[0m
[0m[[0minfo[0m] [0m[32m  - should update external account's storage (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should update external account's balance (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should pass correct addresses and value (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return 1 (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should should store contract's return data in memory (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should consume correct gas (refund unused gas) (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when call depth limit is reached[0m[0m
[0m[[0minfo[0m] [0m[32m  - should not modify world state (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return 0 (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should consume correct gas (refund call gas) (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when call value is greater than balance[0m[0m
[0m[[0minfo[0m] [0m[32m  - should not modify world state (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return 0 (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should consume correct gas (refund call gas) (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m  when call value is zero[0m[0m
[0m[[0minfo[0m] [0m[32m  - should adjust gas cost (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when external contract terminates abnormally[0m[0m
[0m[[0minfo[0m] [0m[32m  - should should not modify world state (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return 0 (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should consume all call gas (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should extend memory (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when calling a non-existent account[0m[0m
[0m[[0minfo[0m] [0m[32m  - should create new account and add to its balance (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return 1 (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should consume correct gas (refund call gas, add new account modifier) (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when calling a precompiled contract[0m[0m
[0m[[0minfo[0m] [0m[32m  - should compute a correct result (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return 1 (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should update precompiled contract's balance (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should consume correct gas (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when calling a program that executes a SELFDESTRUCT[0m[0m
[0m[[0minfo[0m] [0m[32m  - should refund the correct amount of gas (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should not refund gas if account was already self destructed (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should destruct ether if own address equals refund address (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m  when calling a program that executes a SSTORE that clears the storage[0m[0m
[0m[[0minfo[0m] [0m[32m  - should refund the correct amount of gas (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when more gas than available is provided[0m[0m
[0m[[0minfo[0m] [0m[32m  - should go OOG before EIP-150 (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should cap the provided gas after EIP-150 (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should go OOG before EIP-150 becaouse of extensive memory cost (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should cap memory cost post EIP-150 (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mCALLCODE[0m[0m
[0m[[0minfo[0m] [0m[32m  when external code terminates normally[0m[0m
[0m[[0minfo[0m] [0m[32m  - should update own account's storage (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should not update any account's balance (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should pass correct addresses and value (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return 1 (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should should store contract's return data in memory (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should consume correct gas (refund unused gas) (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when call depth limit is reached[0m[0m
[0m[[0minfo[0m] [0m[32m  - should not modify world state (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return 0 (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should consume correct gas (refund call gas) (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when call value is greater than balance[0m[0m
[0m[[0minfo[0m] [0m[32m  - should not modify world state (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return 0 (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should consume correct gas (refund call gas) (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m  when call value is zero[0m[0m
[0m[[0minfo[0m] [0m[32m  - should adjust gas cost (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when external code terminates abnormally[0m[0m
[0m[[0minfo[0m] [0m[32m  - should not modify world state (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return 0 (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should consume all call gas (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should extend memory (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when external account does not exist[0m[0m
[0m[[0minfo[0m] [0m[32m  - should not modify world state (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return 1 (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should consume correct gas (refund call gas) (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when calling a precompiled contract[0m[0m
[0m[[0minfo[0m] [0m[32m  - should compute a correct result (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return 1 (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should not update precompiled contract's balance (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should consume correct gas (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when calling a program that executes a SELFDESTRUCT[0m[0m
[0m[[0minfo[0m] [0m[32m  - should refund the correct amount of gas (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when calling a program that executes a SSTORE that clears the storage[0m[0m
[0m[[0minfo[0m] [0m[32m  - should refund the correct amount of gas (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m  when more gas than available is provided[0m[0m
[0m[[0minfo[0m] [0m[32m  - should go OOG before EIP-150 (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should cap the provided gas after EIP-150 (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mDELEGATECALL[0m[0m
[0m[[0minfo[0m] [0m[32m  when external code terminates normally[0m[0m
[0m[[0minfo[0m] [0m[32m  - should update own account's storage (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should not update any account's balance (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should pass correct addresses and value (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return 1 (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should should store contract's return data in memory (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should consume correct gas (refund unused gas) (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m  when call depth limit is reached[0m[0m
[0m[[0minfo[0m] [0m[32m  - should not modify world state (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return 0 (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should consume correct gas (refund call gas) (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when external code terminates abnormally[0m[0m
[0m[[0minfo[0m] [0m[32m  - should not modify world state (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return 0 (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should consume all call gas (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should extend memory (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when external account does not exist[0m[0m
[0m[[0minfo[0m] [0m[32m  - should not modify world state (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return 1 (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should consume correct gas (refund call gas) (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m  when calling a precompiled contract[0m[0m
[0m[[0minfo[0m] [0m[32m  - should compute a correct result (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return 1 (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should not update precompiled contract's balance (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should consume correct gas (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when calling a program that executes a SELFDESTRUCT[0m[0m
[0m[[0minfo[0m] [0m[32m  - should refund the correct amount of gas (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when calling a program that executes a SSTORE that clears the storage[0m[0m
[0m[[0minfo[0m] [0m[32m  - should refund the correct amount of gas (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when more gas than available is provided[0m[0m
[0m[[0minfo[0m] [0m[32m  - should go OOG before EIP-150 (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m  - should cap the provided gas after EIP-150 (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mgas cost bigger than available gas DELEGATECALL[0m[0m
[0m[[0minfo[0m] [0m[32m- should return an OutOfGas error (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mCallOpCodes[0m[0m
[0m[[0minfo[0m] [0m[32m  when CALL processes returned data[0m[0m
[0m[[0minfo[0m] [0m[32m  - should handle memory expansion properly (19 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when CALLCODE processes returned data[0m[0m
[0m[[0minfo[0m] [0m[32m  - should handle memory expansion properly (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when DELEGATECALL processes returned data[0m[0m
[0m[[0minfo[0m] [0m[32m  - should handle memory expansion properly (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mEthashSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mEthash[0m[0m
[0m[[0minfo[0m] [0m[32m- should generate correct hash (8 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should calculate cache size (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should compute proof of work using cache (1 minute, 35 seconds)[0m[0m
19:04:42.302 [test-system-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:04:45.548 [test-system-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:04:48.696 [test-system-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:04:48.865 [test-system-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:04:55.121 [test-system-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:01.263 [test-system-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:02.882 [test-system-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:02.985 [test-system-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
[0m[[0minfo[0m] [0m[32mPendingTransactionsManagerSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mPendingTransactionsManager[0m[0m
[0m[[0minfo[0m] [0m[32m- should store pending transactions received from peers (3 seconds, 248 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should ignore known transaction (3 seconds, 147 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should broadcast received pending transactions to other peers (168 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should notify other peers about received transactions and handle removal (6 seconds, 256 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should not add pending transaction again when it was removed while waiting for peers (6 seconds, 142 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should override transactions with the same sender and nonce (1 second, 619 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should broadcast pending transactions to newly connected peers (98 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should remove transaction on timeout (745 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mStackSpec:[0m[0m
[0m[[0minfo[0m] [0m[32m- pop single element (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- pop multiple elements (12 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- push single element (9 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- push multiple elements (9 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- duplicate element (8 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- swap elements (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mMinerSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mMiner[0m[0m
19:05:03.834 [PeersInfoHolderSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:03.931 [PeersInfoHolderSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:04.011 [PeersInfoHolderSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:04.084 [PeersInfoHolderSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:04.163 [PeersInfoHolderSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:04.197 [PeersInfoHolderSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:04.278 [PeersInfoHolderSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:04.354 [PeersInfoHolderSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:04.435 [PeersInfoHolderSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:04.515 [PeersInfoHolderSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:04.595 [PeersInfoHolderSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
[0m[[0minfo[0m] [0m[32mEtcPeerManagerSpec:[0m[0m
[0m[[0minfo[0m] [0m[32m- should start with the peers initial info as provided (97 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should update max peer when receiving new block (81 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should update max peer when receiving block header (69 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should update max peer when receiving new block hashes (80 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should update max peer when sending new block (34 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should update max peer when sending block header (82 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should update max peer when sending new block hashes (75 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should update the peer total difficulty when receiving a NewBlock (81 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should update the fork accepted when receiving the fork block (79 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should disconnect from a peer with different fork block (79 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should remove peers information when a peers is disconnected (80 milliseconds)[0m[0m
19:05:04.732 [FilterManagerSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:04.857 [FilterManagerSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:04.889 [FilterManagerSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:04.915 [FilterManagerSpec_System-akka.actor.default-dispatcher-6] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:05.000 [FilterManagerSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
[0m[[0minfo[0m] [0m[32mFilterManagerSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mFilterManager[0m[0m
[0m[[0minfo[0m] [0m[32m- should handle log filter logs and changes (131 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should handle pending block filter (31 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should handle block filter (26 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should handle pending transactions filter (85 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should timeout unused filter (3 seconds, 78 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mNodeStorageSuite:[0m[0m
[0m[[0minfo[0m] [0m[32m- NodeStorage insert (115 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- NodeStorage delete (66 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mLevelDBDataSourceTest:[0m[0m
[0m[[0minfo[0m] [0m[32m- should be able to insert and retrieve stored keys (338 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should allow to remove keys (10 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should remove all keys after clear (17 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should allow using multiple namespaces with the same key (8 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mLedgerSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mLedger[0m[0m
[0m[[0minfo[0m] [0m[31m- should correctly calculate the total gas refund to be returned to the sender and paying for gas to the miner *** FAILED *** (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.LedgerSpec$TestSetup.$init$(LedgerSpec.scala:852)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.LedgerSpec$$anon$11.<init>(LedgerSpec.scala:78)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.LedgerSpec.$anonfun$new$1(LedgerSpec.scala:78)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should correctly change the nonce when executing a tx that results in contract creation *** FAILED *** (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.LedgerSpec$TestSetup.$init$(LedgerSpec.scala:852)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.LedgerSpec$$anon$12.<init>(LedgerSpec.scala:116)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.LedgerSpec.$anonfun$new$4(LedgerSpec.scala:116)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should correctly change the nonce when executing a tx that results in a message call *** FAILED *** (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.LedgerSpec$TestSetup.$init$(LedgerSpec.scala:852)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.LedgerSpec$$anon$13.<init>(LedgerSpec.scala:131)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.LedgerSpec.$anonfun$new$5(LedgerSpec.scala:131)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should correctly run executeBlockTransactions for a block without txs *** FAILED *** (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.LedgerSpec$TestSetup.$init$(LedgerSpec.scala:852)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.LedgerSpec$$anon$1.<init>(LedgerSpec.scala:149)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.LedgerSpec.$anonfun$new$6(LedgerSpec.scala:149)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should correctly run executeBlockTransactions for a block with one tx (that produces no errors) *** FAILED *** (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.LedgerSpec$TestSetup.$init$(LedgerSpec.scala:852)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.LedgerSpec$$anon$2.<init>(LedgerSpec.scala:170)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.LedgerSpec.$anonfun$new$7(LedgerSpec.scala:170)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should correctly run executeBlockTransactions for a block with one tx (that produces OutOfGas) *** FAILED *** (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.LedgerSpec$TestSetup.$init$(LedgerSpec.scala:852)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.LedgerSpec$$anon$3.<init>(LedgerSpec.scala:236)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.LedgerSpec.$anonfun$new$11(LedgerSpec.scala:236)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should correctly run executeBlock for a valid block without txs *** FAILED *** (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.LedgerSpec$TestSetup.$init$(LedgerSpec.scala:852)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.LedgerSpec$$anon$4.<init>(LedgerSpec.scala:279)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.LedgerSpec.$anonfun$new$12(LedgerSpec.scala:279)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should fail to run executeBlock if a block is invalid before executing it *** FAILED *** (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.LedgerSpec$TestSetup.$init$(LedgerSpec.scala:852)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.LedgerSpec$$anon$5.<init>(LedgerSpec.scala:328)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.LedgerSpec.$anonfun$new$18(LedgerSpec.scala:328)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should fail to run executeBlock if a block is invalid after executing it *** FAILED *** (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.LedgerSpec$TestSetup.$init$(LedgerSpec.scala:852)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.LedgerSpec$$anon$6.<init>(LedgerSpec.scala:376)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.LedgerSpec.$anonfun$new$21(LedgerSpec.scala:376)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should correctly run a block with more than one tx *** FAILED *** (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.LedgerSpec$TestSetup.$init$(LedgerSpec.scala:852)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.LedgerSpec$$anon$7.<init>(LedgerSpec.scala:425)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.LedgerSpec.$anonfun$new$23(LedgerSpec.scala:425)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should allow to create an account and not run out of gas before Homestead *** FAILED *** (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.LedgerSpec$TestSetup.$init$(LedgerSpec.scala:852)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.LedgerSpec$$anon$14.<init>(LedgerSpec.scala:517)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.LedgerSpec.$anonfun$new$26(LedgerSpec.scala:517)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should run out of gas in contract creation after Homestead *** FAILED *** (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.LedgerSpec$TestSetup.$init$(LedgerSpec.scala:852)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.LedgerSpec$$anon$15.<init>(LedgerSpec.scala:545)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.LedgerSpec.$anonfun$new$27(LedgerSpec.scala:545)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should clear logs only if vm execution results in an error *** FAILED *** (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.LedgerSpec$TestSetup.$init$(LedgerSpec.scala:852)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.LedgerSpec$$anon$16.<init>(LedgerSpec.scala:573)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.LedgerSpec.$anonfun$new$28(LedgerSpec.scala:573)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should correctly send the transaction input data whether it's a contract creation or not *** FAILED *** (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.LedgerSpec$TestSetup.$init$(LedgerSpec.scala:852)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.LedgerSpec$$anon$17.<init>(LedgerSpec.scala:606)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.LedgerSpec.$anonfun$new$31(LedgerSpec.scala:606)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should should handle pre-existing and new destination accounts when processing a contract init transaction *** FAILED *** (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.LedgerSpec$TestSetup.$init$(LedgerSpec.scala:852)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.LedgerSpec$$anon$18.<init>(LedgerSpec.scala:634)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.LedgerSpec.$anonfun$new$34(LedgerSpec.scala:634)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should create sender account if it does not exists *** FAILED *** (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.LedgerSpec$TestSetup.$init$(LedgerSpec.scala:852)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.LedgerSpec$$anon$19.<init>(LedgerSpec.scala:670)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.LedgerSpec.$anonfun$new$37(LedgerSpec.scala:670)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should remember executed transaction in case of many failures in the middle *** FAILED *** (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.LedgerSpec$TestSetup.$init$(LedgerSpec.scala:852)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.LedgerSpec$$anon$20.<init>(LedgerSpec.scala:695)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.LedgerSpec.$anonfun$new$39(LedgerSpec.scala:695)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should produce empty block if all txs fail *** FAILED *** (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.LedgerSpec$TestSetup.$init$(LedgerSpec.scala:852)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.LedgerSpec$$anon$21.<init>(LedgerSpec.scala:733)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.LedgerSpec.$anonfun$new$40(LedgerSpec.scala:733)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should drain DAO accounts and send the funds to refund address if Pro DAO Fork was configured *** FAILED *** (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.LedgerSpec$TestSetup.$init$(LedgerSpec.scala:852)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.LedgerSpec$$anon$8.<init>(LedgerSpec.scala:763)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.LedgerSpec.$anonfun$new$41(LedgerSpec.scala:763)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should neither drain DAO accounts nor send the funds to refund address if Pro DAO Fork was not configured *** FAILED *** (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.LedgerSpec$TestSetup.$init$(LedgerSpec.scala:852)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.LedgerSpec$$anon$9.<init>(LedgerSpec.scala:784)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.LedgerSpec.$anonfun$new$43(LedgerSpec.scala:784)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should correctly determine current block status *** FAILED *** (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.LedgerSpec$TestSetup.$init$(LedgerSpec.scala:852)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.LedgerSpec$$anon$10.<init>(LedgerSpec.scala:798)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.LedgerSpec.$anonfun$new$45(LedgerSpec.scala:798)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[32m- should properly find minimal required gas limit to execute transaction (11 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mScryptSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mscrypt[0m[0m
[0m[[0minfo[0m] [0m[32m- should correctly evaluate for the test vectors (206 milliseconds)[0m[0m
19:05:09.092 [PeerActorSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:09.176 [PeerActorSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:09.230 [PeerActorSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:09.293 [PeerActorSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:09.336 [PeerActorSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:09.377 [PeerActorSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
[0m[[0minfo[0m] [0m[32mPeerActorHandshakingSpec:[0m[0m
[0m[[0minfo[0m] [0m[32m- should succeed in establishing connection if the handshake is always successful (84 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should fail in establishing connection if the handshake always fails (55 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should succeed in establishing connection in simple Hello exchange (62 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should fail in establishing connection in simple Hello exchange if timeout happened (42 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should fail in establishing connection in simple Hello exchange if a Status message was received (41 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should ignore unhandled message while establishing connection (51 milliseconds)[0m[0m
19:05:09.463 [BlockchainHostActor_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:09.506 [BlockchainHostActor_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:09.541 [BlockchainHostActor_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:09.579 [BlockchainHostActor_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:09.611 [BlockchainHostActor_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:09.643 [BlockchainHostActor_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:09.676 [BlockchainHostActor_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:09.709 [BlockchainHostActor_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:09.743 [BlockchainHostActor_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:09.775 [BlockchainHostActor_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:09.808 [BlockchainHostActor_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:09.845 [BlockchainHostActor_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
[0m[[0minfo[0m] [0m[32mBlockchainHostActorSpec:[0m[0m
[0m[[0minfo[0m] [0m[32m- should return Receipts for block hashes (42 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return BlockBodies for block hashes (36 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return block headers by block number (37 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return block headers by block number when response is shorter then what was requested (30 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return block headers by block number in reverse order (32 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return block headers by block hash (33 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return block headers by block hash when skipping headers (33 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return block headers in reverse when there are skipped blocks (33 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return block headers in reverse when there are skipped blocks and we are asking for blocks before genesis (32 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return block headers in reverse when there are skipped blocks ending at genesis (32 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return evm code for hash (37 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return mptNode for hash (31 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mECDSASignatureSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mECDSASignature[0m[0m
[0m[[0minfo[0m] [0m[32m- should recover public key correctly for go ethereum transaction (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should fail on case from transaction 74c45d0cf2332cc021bebdfee6b1c1da0b58e8f4154537adb79b025f722920a4 (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should sign message and recover public key (119 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mDeleteTouchedAccountsSpec:[0m[0m
[0m[[0minfo[0m] [0m[32m- should delete no accounts when there are no touched accounts (11 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should delete no accounts when there are no empty touched accounts (8 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should delete touched empty account (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should delete touched empty account after transfer to self (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should not mark for deletion and delete any account pre EIP161 (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should delete multiple touched empty accounts (12 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should not delete touched new account resulting from contract creation (initialised) (8 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mDeleteAccountsSpec:[0m[0m
[0m[[0minfo[0m] [0m[32m- should delete no accounts when none of them should be deleted (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should delete the accounts listed for deletion (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should delete all the accounts if they are all listed for deletion (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should delete account that had storage updated before (22 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mAsymmetricCipherKeyPairLoaderSpec:[0m[0m
[0m[[0minfo[0m] [0m[32m- should correctly save the AsymmetricCipherKeyPairLoader (10 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mProgramSpec:[0m[0m
[0m[[0minfo[0m] [0m[32m- should detect all jump destinations if there are no push op (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should detect all jump destinations if there are push op (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should detect all jump destinations if there are invalid ops (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should detect all instructions as jump destinations if they are (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32mInMemorySimpleMapProxySpec:[0m[0m
[0m[[0minfo[0m] [0m[32mInMemoryTrieProxy[0m[0m
[0m[[0minfo[0m] [0m[32m- should not write inserts until commit (9 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mInMemoryTrieProxy[0m[0m
[0m[[0minfo[0m] [0m[32m- should not perform removals until commit (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32mInMemoryTrieProxy[0m[0m
[0m[[0minfo[0m] [0m[32m- should not write updates until commit (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mInMemoryTrieProxy[0m[0m
[0m[[0minfo[0m] [0m[32m- should handle sequential operations (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mInMemoryTrieProxy[0m[0m
[0m[[0minfo[0m] [0m[32m- should handle batch operations (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32mInMemoryTrieProxy[0m[0m
[0m[[0minfo[0m] [0m[32m- should not fail when deleting an inexistent value (0 milliseconds)[0m[0m
19:05:10.240 [KnownNodesManagerSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:10.272 [KnownNodesManagerSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
[0m[[0minfo[0m] [0m[32mKnownNodesManagerSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mKnownNodesManager[0m[0m
[0m[[0minfo[0m] [0m[32m- should keep a list of nodes and persist changes (34 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should respect max nodes limit (22 milliseconds)[0m[0m
19:05:10.297 [RegularSync_system-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
[0m[[0minfo[0m] [0m[32mRegularSyncSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mRegularSync[0m[0m
[0m[[0minfo[0m] [0m[32m  when receiving NewBlock msg[0m[0m
[0m[[0minfo[0m] [0m[31m  - should handle import to the main chain *** FAILED *** (72 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m    java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m    at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec$TestSetup.$init$(RegularSyncSpec.scala:435)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec$$anon$2.<init>(RegularSyncSpec.scala:45)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec.$anonfun$new$3(RegularSyncSpec.scala:45)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m    ...[0m[0m
[0m[[0minfo[0m] [0m[31m  - should handle chain reorganisation *** FAILED *** (63 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m    java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m    at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec$TestSetup.$init$(RegularSyncSpec.scala:435)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec$$anon$3.<init>(RegularSyncSpec.scala:60)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec.$anonfun$new$4(RegularSyncSpec.scala:60)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m    ...[0m[0m
[0m[[0minfo[0m] [0m[31m  - should handle duplicate *** FAILED *** (60 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m    java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m    at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec$TestSetup.$init$(RegularSyncSpec.scala:435)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec$$anon$4.<init>(RegularSyncSpec.scala:80)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec.$anonfun$new$5(RegularSyncSpec.scala:80)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m    ...[0m[0m
[0m[[0minfo[0m] [0m[31m  - should handle enqueuing *** FAILED *** (51 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m    java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m    at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec$TestSetup.$init$(RegularSyncSpec.scala:435)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec$$anon$5.<init>(RegularSyncSpec.scala:95)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec.$anonfun$new$6(RegularSyncSpec.scala:95)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m    ...[0m[0m
[0m[[0minfo[0m] [0m[31m  - should handle block error *** FAILED *** (63 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m    java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m    at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec$TestSetup.$init$(RegularSyncSpec.scala:435)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec$$anon$6.<init>(RegularSyncSpec.scala:110)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec.$anonfun$new$7(RegularSyncSpec.scala:110)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m    ...[0m[0m
[0m[[0minfo[0m] [0m[32m  when receiving NewBlockHashes msg[0m[0m
[0m[[0minfo[0m] [0m[31m  - should handle newBlockHash message *** FAILED *** (58 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m    java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m    at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec$TestSetup.$init$(RegularSyncSpec.scala:435)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec$$anon$7.<init>(RegularSyncSpec.scala:130)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec.$anonfun$new$9(RegularSyncSpec.scala:130)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m    ...[0m[0m
[0m[[0minfo[0m] [0m[31m  - should filter out hashes that are already in chain or queue *** FAILED *** (61 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m    java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m    at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec$TestSetup.$init$(RegularSyncSpec.scala:435)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec$$anon$8.<init>(RegularSyncSpec.scala:142)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec.$anonfun$new$10(RegularSyncSpec.scala:142)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m    ...[0m[0m
[0m[[0minfo[0m] [0m[31m  - should blacklist peer sending ancient blockhashes *** FAILED *** (49 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m    java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m    at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec$TestSetup.$init$(RegularSyncSpec.scala:435)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec$$anon$9.<init>(RegularSyncSpec.scala:164)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec.$anonfun$new$12(RegularSyncSpec.scala:164)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m    ...[0m[0m
[0m[[0minfo[0m] [0m[31m  - should handle at most 64 new hashes in one request *** FAILED *** (47 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m    java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m    at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec$TestSetup.$init$(RegularSyncSpec.scala:435)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec$$anon$10.<init>(RegularSyncSpec.scala:174)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec.$anonfun$new$13(RegularSyncSpec.scala:174)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m    ...[0m[0m
[0m[[0minfo[0m] [0m[32m  when receiving MinedBlock msg[0m[0m
[0m[[0minfo[0m] [0m[31m  - should handle import to the main chain *** FAILED *** (60 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m    java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m    at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec$TestSetup.$init$(RegularSyncSpec.scala:435)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec$$anon$11.<init>(RegularSyncSpec.scala:192)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec.$anonfun$new$16(RegularSyncSpec.scala:192)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m    ...[0m[0m
[0m[[0minfo[0m] [0m[31m  - should handle chain reorganisation *** FAILED *** (48 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m    java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m    at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec$TestSetup.$init$(RegularSyncSpec.scala:435)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec$$anon$12.<init>(RegularSyncSpec.scala:203)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec.$anonfun$new$17(RegularSyncSpec.scala:203)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m    ...[0m[0m
[0m[[0minfo[0m] [0m[31m  - should handle duplicate *** FAILED *** (50 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m    java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m    at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec$TestSetup.$init$(RegularSyncSpec.scala:435)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec$$anon$13.<init>(RegularSyncSpec.scala:220)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec.$anonfun$new$18(RegularSyncSpec.scala:220)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m    ...[0m[0m
[0m[[0minfo[0m] [0m[31m  - should handle enqueuing *** FAILED *** (61 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m    java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m    at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec$TestSetup.$init$(RegularSyncSpec.scala:435)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec$$anon$14.<init>(RegularSyncSpec.scala:232)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec.$anonfun$new$19(RegularSyncSpec.scala:232)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m    ...[0m[0m
[0m[[0minfo[0m] [0m[31m  - should handle block error *** FAILED *** (57 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m    java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m    at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec$TestSetup.$init$(RegularSyncSpec.scala:435)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec$$anon$15.<init>(RegularSyncSpec.scala:244)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec.$anonfun$new$20(RegularSyncSpec.scala:244)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m    ...[0m[0m
[0m[[0minfo[0m] [0m[32m  when receiving BlockHeaders msg[0m[0m
[0m[[0minfo[0m] [0m[31m  - should handle a new better branch *** FAILED *** (61 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m    java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m    at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec$TestSetup.$init$(RegularSyncSpec.scala:435)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec$$anon$16.<init>(RegularSyncSpec.scala:259)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec.$anonfun$new$22(RegularSyncSpec.scala:259)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m    ...[0m[0m
[0m[[0minfo[0m] [0m[31m  - should handle no branch change *** FAILED *** (61 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m    java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m    at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec$TestSetup.$init$(RegularSyncSpec.scala:435)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec$$anon$17.<init>(RegularSyncSpec.scala:273)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec.$anonfun$new$26(RegularSyncSpec.scala:273)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m    ...[0m[0m
[0m[[0minfo[0m] [0m[31m  - should handle unknown branch about to be resolved *** FAILED *** (60 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m    java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m    at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec$TestSetup.$init$(RegularSyncSpec.scala:435)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec$$anon$18.<init>(RegularSyncSpec.scala:284)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec.$anonfun$new$28(RegularSyncSpec.scala:284)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m    ...[0m[0m
[0m[[0minfo[0m] [0m[31m  - should handle unknown branch that can't be resolved *** FAILED *** (63 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m    java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m    at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec$TestSetup.$init$(RegularSyncSpec.scala:435)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec$$anon$19.<init>(RegularSyncSpec.scala:297)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec.$anonfun$new$30(RegularSyncSpec.scala:297)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m    ...[0m[0m
[0m[[0minfo[0m] [0m[31m  - should return to normal syncing mode after successful branch resolution *** FAILED *** (62 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m    java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m    at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec$TestSetup.$init$(RegularSyncSpec.scala:435)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec$$anon$20.<init>(RegularSyncSpec.scala:315)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec.$anonfun$new$32(RegularSyncSpec.scala:315)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m    ...[0m[0m
[0m[[0minfo[0m] [0m[31m  - should return to normal syncing mode after branch resolution request failed *** FAILED *** (61 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m    java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m    at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec$TestSetup.$init$(RegularSyncSpec.scala:435)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec$$anon$1.<init>(RegularSyncSpec.scala:333)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec.$anonfun$new$34(RegularSyncSpec.scala:333)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m    ...[0m[0m
[0m[[0minfo[0m] [0m[31m  - should handle invalid branch *** FAILED *** (58 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m    java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m    at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec$TestSetup.$init$(RegularSyncSpec.scala:435)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec$$anon$21.<init>(RegularSyncSpec.scala:345)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec.$anonfun$new$35(RegularSyncSpec.scala:345)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m    ...[0m[0m
[0m[[0minfo[0m] [0m[32m  when receiving BlockBodies msg[0m[0m
[0m[[0minfo[0m] [0m[31m  - should handle missing state nodes *** FAILED *** (63 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m    java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m    at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec$TestSetup.$init$(RegularSyncSpec.scala:435)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec$$anon$22.<init>(RegularSyncSpec.scala:360)[0m[0m
[0m[[0minfo[0m] [0m[31m    at io.iohk.ethereum.blockchain.sync.RegularSyncSpec.$anonfun$new$38(RegularSyncSpec.scala:360)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m    at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m    ...[0m[0m
[0m[[0minfo[0m] [0m[32mOpCodeGasSpec:[0m[0m
[0m[[0minfo[0m] [0m[32m- wordsForBytes helper (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- calcMemCost helper (8 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP1 (18 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP2 (9 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP3 (8 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP4 (8 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP5 (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP6 (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP7 (11 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP8 (10 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP9 (10 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP10 (9 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP11 (10 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP12 (11 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP13 (12 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP14 (15 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP15 (48 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SWAP16 (19 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH1 (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH2 (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH3 (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH4 (8 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH5 (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH6 (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH7 (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH8 (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH9 (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH10 (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH11 (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH12 (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH13 (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH14 (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH15 (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH16 (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH17 (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH18 (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH19 (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH20 (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH21 (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH22 (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH23 (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH24 (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH25 (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH26 (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH27 (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH28 (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH29 (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH30 (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH31 (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PUSH32 (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP1 (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP2 (9 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP3 (9 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP4 (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP5 (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP6 (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP7 (8 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP8 (8 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP9 (10 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP10 (10 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP11 (11 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP12 (10 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP13 (11 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP14 (10 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP15 (13 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DUP16 (12 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- STOP (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- ADD (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- MUL (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SUB (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DIV (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SDIV (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- MOD (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SMOD (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- ADDMOD (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- MULMOD (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SIGNEXTEND (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- LT (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- GT (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SLT (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SGT (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- EQ (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- ISZERO (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- AND (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- OR (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- XOR (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- NOT (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- BYTE (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- ADDRESS (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- BALANCE (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- ORIGIN (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- CALLER (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- CALLVALUE (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- CALLDATALOAD (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- CALLDATASIZE (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- CODESIZE (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- GASPRICE (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- EXTCODESIZE (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- BLOCKHASH (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- COINBASE (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- TIMESTAMP (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- NUMBER (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- DIFFICULTY (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- GASLIMIT (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- POP (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SLOAD (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- JUMP (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- JUMPI (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- PC (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- MSIZE (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- GAS (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- JUMPDEST (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- EXP (12 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SHA3 (21 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- CALLDATACOPY (24 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- CODECOPY (30 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- EXTCODECOPY (25 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- MLOAD (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- MSTORE (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- MSTORE8 (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SSTORE (10 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- LOG0 (10 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- LOG1 (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- LOG2 (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- LOG3 (10 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- LOG4 (8 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- RETURN (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- SELFDESTRUCT (19 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- all opcodes have been registered (9 milliseconds)[0m[0m
19:05:13.182 [EthServiceSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:13.241 [EthServiceSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:13.298 [EthServiceSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:13.358 [EthServiceSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:13.405 [EthServiceSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:13.453 [EthServiceSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:13.499 [EthServiceSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:13.544 [EthServiceSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:13.600 [EthServiceSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:13.655 [EthServiceSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:13.711 [EthServiceSpec_System-akka.actor.default-dispatcher-5] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:13.767 [EthServiceSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:13.822 [EthServiceSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:13.879 [EthServiceSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:13.933 [EthServiceSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:13.992 [EthServiceSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:14.039 [EthServiceSpec_System-akka.actor.default-dispatcher-5] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:14.094 [EthServiceSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:14.151 [EthServiceSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:14.235 [EthServiceSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:14.290 [EthServiceSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:14.345 [EthServiceSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:14.398 [EthServiceSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:14.408 [EthServiceSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:14.466 [EthServiceSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:14.521 [EthServiceSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:14.565 [EthServiceSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:14.621 [EthServiceSpec_System-akka.actor.default-dispatcher-5] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:14.636 [EthServiceSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:14.680 [EthServiceSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:14.738 [EthServiceSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:14.794 [EthServiceSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:14.849 [EthServiceSpec_System-akka.actor.default-dispatcher-5] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:14.902 [EthServiceSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:14.959 [EthServiceSpec_System-akka.actor.default-dispatcher-5] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:15.014 [EthServiceSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:15.073 [EthServiceSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:15.128 [EthServiceSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:15.182 [EthServiceSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:15.236 [EthServiceSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:15.290 [EthServiceSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:15.347 [EthServiceSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:15.403 [EthServiceSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:15.458 [EthServiceSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:15.513 [EthServiceSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:15.570 [EthServiceSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:15.626 [EthServiceSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:15.681 [EthServiceSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:15.736 [EthServiceSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:15.790 [EthServiceSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:15.846 [EthServiceSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:15.902 [EthServiceSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:15.958 [EthServiceSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:16.013 [EthServiceSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:16.068 [EthServiceSpec_System-akka.actor.default-dispatcher-6] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:16.125 [EthServiceSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:16.172 [EthServiceSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:16.232 [EthServiceSpec_System-akka.actor.default-dispatcher-5] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:16.277 [EthServiceSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:16.337 [EthServiceSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:05:16.405 [EthServiceSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
[0m[[0minfo[0m] [0m[32mEthServiceSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mEthService[0m[0m
[0m[[0minfo[0m] [0m[31m- should answer eth_blockNumber with the latest block number *** FAILED *** (72 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$TestSetup.$init$(EthServiceSpec.scala:887)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$$anon$1.<init>(EthServiceSpec.scala:39)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec.$anonfun$new$1(EthServiceSpec.scala:39)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should return ethereum protocol version *** FAILED *** (56 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$TestSetup.$init$(EthServiceSpec.scala:887)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$$anon$2.<init>(EthServiceSpec.scala:47)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec.$anonfun$new$2(EthServiceSpec.scala:47)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should answer eth_getBlockTransactionCountByHash with None when the requested block isn't in the blockchain *** FAILED *** (55 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$TestSetup.$init$(EthServiceSpec.scala:887)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$$anon$3.<init>(EthServiceSpec.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec.$anonfun$new$3(EthServiceSpec.scala:54)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should answer eth_getBlockTransactionCountByHash with the block has no tx when the requested block is in the blockchain and has no tx *** FAILED *** (46 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$TestSetup.$init$(EthServiceSpec.scala:887)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$$anon$4.<init>(EthServiceSpec.scala:60)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec.$anonfun$new$4(EthServiceSpec.scala:60)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should answer eth_getBlockTransactionCountByHash correctly when the requested block is in the blockchain and has some tx *** FAILED *** (49 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$TestSetup.$init$(EthServiceSpec.scala:887)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$$anon$5.<init>(EthServiceSpec.scala:67)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec.$anonfun$new$5(EthServiceSpec.scala:67)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should answer eth_getTransactionByBlockHashAndIndex with None when there is no block with the requested hash *** FAILED *** (46 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$TestSetup.$init$(EthServiceSpec.scala:887)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$$anon$6.<init>(EthServiceSpec.scala:74)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec.$anonfun$new$6(EthServiceSpec.scala:74)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should answer eth_getTransactionByBlockHashAndIndex with None when there is no tx in requested index *** FAILED *** (46 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$TestSetup.$init$(EthServiceSpec.scala:887)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$$anon$7.<init>(EthServiceSpec.scala:82)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec.$anonfun$new$7(EthServiceSpec.scala:82)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should answer eth_getTransactionByBlockHashAndIndex with the transaction response correctly when the requested index has one *** FAILED *** (54 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$TestSetup.$init$(EthServiceSpec.scala:887)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$$anon$8.<init>(EthServiceSpec.scala:95)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec.$anonfun$new$8(EthServiceSpec.scala:95)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should answer eth_getBlockByNumber with the correct block when the pending block is requested *** FAILED *** (54 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$TestSetup.$init$(EthServiceSpec.scala:887)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$$anon$9.<init>(EthServiceSpec.scala:107)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec.$anonfun$new$9(EthServiceSpec.scala:107)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should answer eth_getBlockByNumber with the latest block pending block is requested and there are no pending ones *** FAILED *** (55 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$TestSetup.$init$(EthServiceSpec.scala:887)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$$anon$10.<init>(EthServiceSpec.scala:123)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec.$anonfun$new$10(EthServiceSpec.scala:123)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should answer eth_getBlockByNumber with None when the requested block isn't in the blockchain *** FAILED *** (56 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$TestSetup.$init$(EthServiceSpec.scala:887)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$$anon$11.<init>(EthServiceSpec.scala:136)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec.$anonfun$new$11(EthServiceSpec.scala:136)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should answer eth_getBlockByNumber with the block response correctly when it's totalDifficulty is in blockchain *** FAILED *** (53 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$TestSetup.$init$(EthServiceSpec.scala:887)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$$anon$12.<init>(EthServiceSpec.scala:142)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec.$anonfun$new$12(EthServiceSpec.scala:142)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should answer eth_getBlockByNumber with the block response correctly when it's totalDifficulty is not in blockchain *** FAILED *** (57 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$TestSetup.$init$(EthServiceSpec.scala:887)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$$anon$13.<init>(EthServiceSpec.scala:158)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec.$anonfun$new$13(EthServiceSpec.scala:158)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should answer eth_getBlockByNumber with the block response correctly when the txs should be hashed *** FAILED *** (54 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$TestSetup.$init$(EthServiceSpec.scala:887)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$$anon$14.<init>(EthServiceSpec.scala:173)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec.$anonfun$new$14(EthServiceSpec.scala:173)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should answer eth_getBlockByHash with None when the requested block isn't in the blockchain *** FAILED *** (57 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$TestSetup.$init$(EthServiceSpec.scala:887)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$$anon$15.<init>(EthServiceSpec.scala:185)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec.$anonfun$new$16(EthServiceSpec.scala:185)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should answer eth_getBlockByHash with the block response correctly when it's totalDifficulty is in blockchain *** FAILED *** (46 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$TestSetup.$init$(EthServiceSpec.scala:887)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$$anon$16.<init>(EthServiceSpec.scala:191)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec.$anonfun$new$17(EthServiceSpec.scala:191)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should answer eth_getBlockByHash with the block response correctly when it's totalDifficulty is not in blockchain *** FAILED *** (55 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$TestSetup.$init$(EthServiceSpec.scala:887)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$$anon$17.<init>(EthServiceSpec.scala:207)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec.$anonfun$new$18(EthServiceSpec.scala:207)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should answer eth_getBlockByHash with the block response correctly when the txs should be hashed *** FAILED *** (57 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$TestSetup.$init$(EthServiceSpec.scala:887)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$$anon$18.<init>(EthServiceSpec.scala:222)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec.$anonfun$new$19(EthServiceSpec.scala:222)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should answer eth_getUncleByBlockHashAndIndex with None when the requested block isn't in the blockchain *** FAILED *** (54 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$TestSetup.$init$(EthServiceSpec.scala:887)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$$anon$19.<init>(EthServiceSpec.scala:234)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec.$anonfun$new$21(EthServiceSpec.scala:234)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should answer eth_getUncleByBlockHashAndIndex with None when there's no uncle *** FAILED *** (83 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$TestSetup.$init$(EthServiceSpec.scala:887)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$$anon$20.<init>(EthServiceSpec.scala:241)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec.$anonfun$new$22(EthServiceSpec.scala:241)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should answer eth_getUncleByBlockHashAndIndex with None when there's no uncle in the requested index *** FAILED *** (54 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$TestSetup.$init$(EthServiceSpec.scala:887)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$$anon$21.<init>(EthServiceSpec.scala:251)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec.$anonfun$new$23(EthServiceSpec.scala:251)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should answer eth_getUncleByBlockHashAndIndex correctly when the requested index has one but there's no total difficulty for it *** FAILED *** (53 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$TestSetup.$init$(EthServiceSpec.scala:887)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$$anon$22.<init>(EthServiceSpec.scala:263)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec.$anonfun$new$24(EthServiceSpec.scala:263)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should anwer eth_getUncleByBlockHashAndIndex correctly when the requested index has one and there's total difficulty for it *** FAILED *** (9 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$TestSetup.$init$(EthServiceSpec.scala:887)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$$anon$23.<init>(EthServiceSpec.scala:276)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec.$anonfun$new$25(EthServiceSpec.scala:276)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should answer eth_getUncleByBlockNumberAndIndex with None when the requested block isn't in the blockchain *** FAILED *** (57 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$TestSetup.$init$(EthServiceSpec.scala:887)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$$anon$24.<init>(EthServiceSpec.scala:290)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec.$anonfun$new$26(EthServiceSpec.scala:290)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should answer eth_getUncleByBlockNumberAndIndex with None when there's no uncle *** FAILED *** (55 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$TestSetup.$init$(EthServiceSpec.scala:887)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$$anon$25.<init>(EthServiceSpec.scala:297)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec.$anonfun$new$27(EthServiceSpec.scala:297)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should answer eth_getUncleByBlockNumberAndIndex with None when there's no uncle in the requested index *** FAILED *** (43 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$TestSetup.$init$(EthServiceSpec.scala:887)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$$anon$26.<init>(EthServiceSpec.scala:307)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec.$anonfun$new$28(EthServiceSpec.scala:307)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should answer eth_getUncleByBlockNumberAndIndex correctly when the requested index has one but there's no total difficulty for it *** FAILED *** (54 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$TestSetup.$init$(EthServiceSpec.scala:887)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$$anon$27.<init>(EthServiceSpec.scala:319)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec.$anonfun$new$29(EthServiceSpec.scala:319)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should anwer eth_getUncleByBlockNumberAndIndex correctly when the requested index has one and there's total difficulty for it *** FAILED *** (12 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$TestSetup.$init$(EthServiceSpec.scala:887)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$$anon$28.<init>(EthServiceSpec.scala:332)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec.$anonfun$new$30(EthServiceSpec.scala:332)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should return syncing info if the peer is syncing *** FAILED *** (47 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$TestSetup.$init$(EthServiceSpec.scala:887)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$$anon$29.<init>(EthServiceSpec.scala:346)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec.$anonfun$new$31(EthServiceSpec.scala:346)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should return no syncing info if the peer is not syncing *** FAILED *** (57 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$TestSetup.$init$(EthServiceSpec.scala:887)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$$anon$30.<init>(EthServiceSpec.scala:359)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec.$anonfun$new$32(EthServiceSpec.scala:359)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should return requested work *** FAILED *** (56 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$TestSetup.$init$(EthServiceSpec.scala:887)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$$anon$31.<init>(EthServiceSpec.scala:368)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec.$anonfun$new$33(EthServiceSpec.scala:368)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should accept submitted correct PoW *** FAILED *** (55 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$TestSetup.$init$(EthServiceSpec.scala:887)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$$anon$32.<init>(EthServiceSpec.scala:382)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec.$anonfun$new$34(EthServiceSpec.scala:382)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should reject submitted correct PoW when header is no longer in cache *** FAILED *** (52 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$TestSetup.$init$(EthServiceSpec.scala:887)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$$anon$33.<init>(EthServiceSpec.scala:394)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec.$anonfun$new$35(EthServiceSpec.scala:394)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should execute call and return a value *** FAILED *** (55 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$TestSetup.$init$(EthServiceSpec.scala:887)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$$anon$34.<init>(EthServiceSpec.scala:406)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec.$anonfun$new$36(EthServiceSpec.scala:406)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should execute estimateGas and return a value *** FAILED *** (55 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$TestSetup.$init$(EthServiceSpec.scala:887)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$$anon$35.<init>(EthServiceSpec.scala:422)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec.$anonfun$new$37(EthServiceSpec.scala:422)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should get uncle count by block number *** FAILED *** (56 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$TestSetup.$init$(EthServiceSpec.scala:887)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$$anon$36.<init>(EthServiceSpec.scala:438)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec.$anonfun$new$38(EthServiceSpec.scala:438)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should get uncle count by block hash *** FAILED *** (56 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$TestSetup.$init$(EthServiceSpec.scala:887)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$$anon$37.<init>(EthServiceSpec.scala:447)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec.$anonfun$new$39(EthServiceSpec.scala:447)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should get transaction count by block number *** FAILED *** (53 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$TestSetup.$init$(EthServiceSpec.scala:887)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$$anon$38.<init>(EthServiceSpec.scala:455)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec.$anonfun$new$40(EthServiceSpec.scala:455)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should get transaction count by latest block number *** FAILED *** (54 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$TestSetup.$init$(EthServiceSpec.scala:887)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$$anon$39.<init>(EthServiceSpec.scala:463)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec.$anonfun$new$41(EthServiceSpec.scala:463)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should handle getCode request *** FAILED *** (54 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$TestSetup.$init$(EthServiceSpec.scala:887)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$$anon$40.<init>(EthServiceSpec.scala:472)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec.$anonfun$new$42(EthServiceSpec.scala:472)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should accept and report hashrate *** FAILED *** (56 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$TestSetup.$init$(EthServiceSpec.scala:887)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$$anon$41.<init>(EthServiceSpec.scala:492)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec.$anonfun$new$43(EthServiceSpec.scala:492)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should combine hashrates from many miners and remove timed out rates *** FAILED *** (55 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$TestSetup.$init$(EthServiceSpec.scala:887)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$$anon$42.<init>(EthServiceSpec.scala:503)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec.$anonfun$new$44(EthServiceSpec.scala:503)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should return if node is mining base on getWork *** FAILED *** (54 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$TestSetup.$init$(EthServiceSpec.scala:887)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$$anon$43.<init>(EthServiceSpec.scala:520)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec.$anonfun$new$45(EthServiceSpec.scala:520)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should return if node is mining base on submitWork *** FAILED *** (55 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$TestSetup.$init$(EthServiceSpec.scala:887)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$$anon$44.<init>(EthServiceSpec.scala:532)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec.$anonfun$new$46(EthServiceSpec.scala:532)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should return if node is mining base on submitHashRate *** FAILED *** (56 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$TestSetup.$init$(EthServiceSpec.scala:887)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$$anon$45.<init>(EthServiceSpec.scala:544)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec.$anonfun$new$47(EthServiceSpec.scala:544)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should return if node is mining after time out *** FAILED *** (55 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$TestSetup.$init$(EthServiceSpec.scala:887)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$$anon$46.<init>(EthServiceSpec.scala:554)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec.$anonfun$new$48(EthServiceSpec.scala:554)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should return correct coinbase *** FAILED *** (54 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$TestSetup.$init$(EthServiceSpec.scala:887)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$$anon$47.<init>(EthServiceSpec.scala:566)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec.$anonfun$new$49(EthServiceSpec.scala:566)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should return 0 gas price if there are no transactions *** FAILED *** (54 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$TestSetup.$init$(EthServiceSpec.scala:887)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$$anon$48.<init>(EthServiceSpec.scala:571)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec.$anonfun$new$50(EthServiceSpec.scala:571)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should return average gas price *** FAILED *** (54 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$TestSetup.$init$(EthServiceSpec.scala:887)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$$anon$49.<init>(EthServiceSpec.scala:578)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec.$anonfun$new$51(EthServiceSpec.scala:578)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should getTransactionByBlockNumberAndIndexRequest return transaction by index *** FAILED *** (55 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$TestSetup.$init$(EthServiceSpec.scala:887)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$$anon$50.<init>(EthServiceSpec.scala:586)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec.$anonfun$new$52(EthServiceSpec.scala:586)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should getTransactionByBlockNumberAndIndexRequest return empty response if transaction does not exists when getting by index *** FAILED *** (56 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$TestSetup.$init$(EthServiceSpec.scala:887)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$$anon$51.<init>(EthServiceSpec.scala:598)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec.$anonfun$new$53(EthServiceSpec.scala:598)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should getTransactionByBlockNumberAndIndexRequest return empty response if block does not exists when getting by index *** FAILED *** (55 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$TestSetup.$init$(EthServiceSpec.scala:887)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$$anon$52.<init>(EthServiceSpec.scala:608)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec.$anonfun$new$54(EthServiceSpec.scala:608)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should handle getBalance request *** FAILED *** (52 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$TestSetup.$init$(EthServiceSpec.scala:887)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$$anon$53.<init>(EthServiceSpec.scala:618)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec.$anonfun$new$55(EthServiceSpec.scala:618)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should handle getStorageAt request *** FAILED *** (56 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$TestSetup.$init$(EthServiceSpec.scala:887)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$$anon$54.<init>(EthServiceSpec.scala:637)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec.$anonfun$new$56(EthServiceSpec.scala:637)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should handle get transaction count request *** FAILED *** (55 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$TestSetup.$init$(EthServiceSpec.scala:887)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$$anon$55.<init>(EthServiceSpec.scala:672)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec.$anonfun$new$57(EthServiceSpec.scala:672)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should handle get transaction by hash if the tx is not on the blockchain and not in the tx pool *** FAILED *** (48 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$TestSetup.$init$(EthServiceSpec.scala:887)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$$anon$56.<init>(EthServiceSpec.scala:691)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec.$anonfun$new$58(EthServiceSpec.scala:691)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should handle get transaction by hash if the tx is still pending *** FAILED *** (59 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$TestSetup.$init$(EthServiceSpec.scala:887)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$$anon$57.<init>(EthServiceSpec.scala:701)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec.$anonfun$new$59(EthServiceSpec.scala:701)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should handle get transaction by hash if the tx was already executed *** FAILED *** (43 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$TestSetup.$init$(EthServiceSpec.scala:887)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$$anon$58.<init>(EthServiceSpec.scala:711)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec.$anonfun$new$60(EthServiceSpec.scala:711)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should calculate correct contract address for contract creating by transaction *** FAILED *** (58 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$TestSetup.$init$(EthServiceSpec.scala:887)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$$anon$59.<init>(EthServiceSpec.scala:725)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec.$anonfun$new$61(EthServiceSpec.scala:725)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should return account recent transactions in newest -> oldest order *** FAILED *** (60 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$TestSetup.$init$(EthServiceSpec.scala:887)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$$anon$60.<init>(EthServiceSpec.scala:757)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec.$anonfun$new$62(EthServiceSpec.scala:757)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should not return account recent transactions from older blocks and return pending txs *** FAILED *** (19 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$TestSetup.$init$(EthServiceSpec.scala:887)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec$$anon$61.<init>(EthServiceSpec.scala:801)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.jsonrpc.EthServiceSpec.$anonfun$new$63(EthServiceSpec.scala:801)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[32mInMemoryWorldStateProxySpec:[0m[0m
[0m[[0minfo[0m] [0m[32mInMemoryWorldStateProxy[0m[0m
[0m[[0minfo[0m] [0m[32m- should allow to create and retrieve an account (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- should allow to save and retrieve code (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should allow to save and get storage (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should allow to transfer value to other address (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- should not store within contract store if value is zero (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should storing a zero on a contract store position should remove it from the underlying tree (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should be able to persist changes and continue working after that (9 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should be able to do transfers with the same origin and destination (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should not allow transfer to create empty accounts post EIP161 (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- should correctly mark touched accounts post EIP161 (20 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should update touched accounts using combineTouchedAccounts method (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- should correctly determine if account is dead (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- should remove all ether from existing account (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mExpiringMapSpec:[0m[0m
[0m[[0minfo[0m] [0m[32m- should Put element in, for correct amount of time and not retain it afterwards (118 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should Put element in, for negative duration (element will be inaccessible and removed at first occasion) (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- should Put new element in with new holdTime, for correct amount of time and not retain it afterwards (233 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should Put two elements in, for different amount of time and not retain it afterwards (166 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should Put element in, for default amount of time and not retain it afterwards (119 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should Put element in, until some time and not retain it afterwards (118 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should not overflow and throw exception when adding duration with max seconds (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should It should remove existing element (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- should It should overwrite existing element (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mBlockQueueSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mBlockQueue[0m[0m
[0m[[0minfo[0m] [0m[31m- should ignore block if it's already in the queue *** FAILED *** (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockQueueSpec$TestConfig.$init$(BlockQueueSpec.scala:185)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockQueueSpec$$anon$2.<init>(BlockQueueSpec.scala:17)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockQueueSpec.$anonfun$new$1(BlockQueueSpec.scala:17)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should ignore blocks outside of range *** FAILED *** (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockQueueSpec$TestConfig.$init$(BlockQueueSpec.scala:185)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockQueueSpec$$anon$3.<init>(BlockQueueSpec.scala:27)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockQueueSpec.$anonfun$new$2(BlockQueueSpec.scala:27)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should remove the blocks that fall out of range *** FAILED *** (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockQueueSpec$TestConfig.$init$(BlockQueueSpec.scala:185)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockQueueSpec$$anon$4.<init>(BlockQueueSpec.scala:39)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockQueueSpec.$anonfun$new$3(BlockQueueSpec.scala:39)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should enqueue a block with parent on the main chain updating its total difficulty *** FAILED *** (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockQueueSpec$TestConfig.$init$(BlockQueueSpec.scala:185)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockQueueSpec$$anon$5.<init>(BlockQueueSpec.scala:56)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockQueueSpec.$anonfun$new$4(BlockQueueSpec.scala:56)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should enqueue a block with queued ancestors rooted to the main chain updating its total difficulty *** FAILED *** (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockQueueSpec$TestConfig.$init$(BlockQueueSpec.scala:185)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockQueueSpec$$anon$6.<init>(BlockQueueSpec.scala:65)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockQueueSpec.$anonfun$new$5(BlockQueueSpec.scala:65)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should enqueue an orphaned block *** FAILED *** (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockQueueSpec$TestConfig.$init$(BlockQueueSpec.scala:185)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockQueueSpec$$anon$7.<init>(BlockQueueSpec.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockQueueSpec.$anonfun$new$6(BlockQueueSpec.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should remove a branch from a leaf up to the first shared ancestor *** FAILED *** (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockQueueSpec$TestConfig.$init$(BlockQueueSpec.scala:185)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockQueueSpec$$anon$8.<init>(BlockQueueSpec.scala:94)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockQueueSpec.$anonfun$new$7(BlockQueueSpec.scala:94)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should remove a whole subtree down from an ancestor to all its leaves *** FAILED *** (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockQueueSpec$TestConfig.$init$(BlockQueueSpec.scala:185)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockQueueSpec$$anon$9.<init>(BlockQueueSpec.scala:119)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.BlockQueueSpec.$anonfun$new$8(BlockQueueSpec.scala:119)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[32mHexPrefixSuite:[0m[0m
[0m[[0minfo[0m] [0m[32m- HexPrefix encoding (8 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- testCompactEncodeOddCompact (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- testCompactEncodeEvenCompact (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- testCompactEncodeEvenTerminated (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- testCompactEncodeOddTerminated (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- testCompactDecodeOddCompact (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- testCompactDecodeEvenCompact (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- testCompactDecodeEvenTerminated (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- testCompactDecodeOddTerminated (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- testCompactHexEncode_1 (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- testCompactHexEncode_2 (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- testCompactHexEncode_3 (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mKeyStoreImplSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mKeyStoreImpl[0m[0m
[0m[[0minfo[0m] [0m[32m- should import and list accounts (8 seconds, 921 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should fail to import a key twice (4 seconds, 640 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should create new accounts (4 seconds, 829 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return an error when the keystore dir cannot be initialized (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return an error when the keystore dir cannot be read or written (4 seconds, 652 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should unlock an account provided a correct passphrase (5 seconds, 58 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return an error when unlocking an account with a wrong passphrase (5 seconds, 342 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return an error when trying to unlock an unknown account (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return an error deleting not existing wallet (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- should delete existing wallet (2 seconds, 346 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should change passphrase of an existing wallet (10 seconds, 427 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return an error when changing passphrase of an non-existent wallet (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return an error when changing passphrase and provided with invalid old passphrase (5 seconds, 173 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mMessagesSerializationSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mWire Protocol[0m[0m
[0m[[0minfo[0m] [0m[32m  when encoding and decoding Hello[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return same result (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when encoding and decoding Disconnect[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return same result (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when encoding and decoding Ping[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return same result (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when encoding and decoding Pong[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return same result (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mCommon Messages[0m[0m
[0m[[0minfo[0m] [0m[32m  when encoding and decoding Status[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return same result (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when encoding and decoding SignedTransactions[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return same result (24 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when encoding and decoding NewBlock[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return same result (71 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mPV61[0m[0m
[0m[[0minfo[0m] [0m[32m  when encoding and decoding NewBlockHashes[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return same result (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when encoding and decoding BlockHashesFromNumber[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return same result (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mPV62[0m[0m
[0m[[0minfo[0m] [0m[32m  when encoding and decoding NewBlockHashes[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return same result (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when encoding and decoding BlockBodies[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return same result (61 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when encoding and decoding GetBlockBodies[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return same result (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when encoding and decoding BlockHeaders[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return same result (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m  when encoding and decoding GetBlockHeaders[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return same result (8 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mSignedTransactionValidatorSpec:[0m[0m
[0m[[0minfo[0m] [0m[32m- should report as valid a tx from before homestead (12 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should report as valid a tx from after homestead (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- should report as syntactic invalid a tx with long nonce (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should report as syntactic invalid a tx with long gas limit (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should report as syntactic invalid a tx with long gas price (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should report as syntactic invalid a tx with long value (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- should report as syntactic invalid a tx with long s (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- should report as syntactic invalid a tx with long r (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should report a tx with invalid r as having invalid signature (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should report a tx with invalid s as having invalid signature (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should report as invalid a tx with invalid nonce (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should report as invalid a tx with too low gas limit for intrinsic gas (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should report as invalid a tx with upfront cost higher than the sender's balance (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should report as invalid a tx with too high gas limit for block gas limit (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should report as invalid a chain specific tx before eip155 (9 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should report as valid a chain specific tx after eip155 (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mReferenceCountNodeStorageSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mReferenceCountNodeStorage[0m[0m
[0m[[0minfo[0m] [0m[32m- should not remove a key if no more references until pruning (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should not remove a key that was inserted after deletion when pruning (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should not remove a key that it's still referenced when pruning (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should not delete a key that's was referenced in later blocks when pruning (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should not throw an error when deleting a key that does not exist (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- should allow to rollback operations (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should allow rollbacks after pruning (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mRipemd160Spec:[0m[0m
[0m[[0minfo[0m] [0m[32m- RIPEMD-160 (170 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mNodeDataSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mNodeData[0m[0m
[0m[[0minfo[0m] [0m[32m- should be encoded properly (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should be decoded properly (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should be decoded previously encoded value (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should decode branch node with values in leafs that looks like RLP list (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should obtain the same value when decoding and encoding an encoded node (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32mUInt256Spec:[0m[0m
[0m[[0minfo[0m] [0m[32m- & (13 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- | (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- ^ (10 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- ~ (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- negation (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- + (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- - (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- * (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- / (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- div (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- sdiv (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- mod (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- smod (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- addmod (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- mulmod (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- ** (10 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- signExtend (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- slt (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- sgt (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- getByte (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- intValue (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- comparison (17 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Passing too long ByteString should throw an exception (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- UInt256 converted to a byte array should always have length 32 bytes (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- 2-way bytes conversion (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- byteSize (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mPbkdf2HMacSha256Spec:[0m[0m
[0m[[0minfo[0m] [0m[32mpbkdf2HMacSha256[0m[0m
[0m[[0minfo[0m] [0m[32m- should correctly evaluate for the test vectors (36 milliseconds)[0m[0m
19:06:09.977 [FastSyncStateActorSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
[0m[[0minfo[0m] [0m[32mFastSyncStateStorageActorSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mFastSyncStateActor[0m[0m
[0m[[0minfo[0m] [0m[31m- should eventually persist a newest state of a fast sync *** FAILED *** (26 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.blockchain.sync.FastSyncStateStorageActorSpec.$anonfun$new$1(FastSyncStateStorageActorSpec.scala:29)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.AsyncFlatSpecLike.transformToOutcomeParam$1(AsyncFlatSpecLike.scala:139)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.AsyncFlatSpecLike.$anonfun$registerTestToRun$2(AsyncFlatSpecLike.scala:145)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.AsyncTestSuite.$anonfun$transformToOutcome$1(AsyncTestSuite.scala:240)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.AsyncFlatSpecLike$$anon$1.apply(AsyncFlatSpecLike.scala:1698)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.AsyncTestSuite.withFixture(AsyncTestSuite.scala:313)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.AsyncTestSuite.withFixture$(AsyncTestSuite.scala:312)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.AsyncFlatSpec.withFixture(AsyncFlatSpec.scala:2219)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
19:06:10.032 [SyncControllerSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:06:10.163 [SyncControllerSpec_System-akka.actor.default-dispatcher-3] INFO  i.i.e.blockchain.sync.FastSync akka://SyncControllerSpec_System/user/$$jb/fast-sync - Trying to start block synchronization (fast mode)
19:06:10.184 [SyncControllerSpec_System-akka.actor.default-dispatcher-3] INFO  i.i.e.b.s.FastSyncTargetBlockSelector akka://SyncControllerSpec_System/user/$$jb/fast-sync/target-block-selector - Block synchronization (fast mode) not started. Need at least 2 peers, but there are only 0 available at the moment. Retrying in 500 milliseconds
19:06:10.721 [SyncControllerSpec_System-akka.actor.default-dispatcher-4] INFO  i.i.e.blockchain.sync.FastSync akka://SyncControllerSpec_System/user/$$jb/fast-sync - Starting block synchronization (fast mode), target block 399500
19:06:13.770 [SyncControllerSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:06:14.838 [SyncControllerSpec_System-akka.actor.default-dispatcher-3] INFO  i.i.e.blockchain.sync.FastSync akka://SyncControllerSpec_System/user/$$kb/fast-sync - Trying to start block synchronization (fast mode)
19:06:14.850 [SyncControllerSpec_System-akka.actor.default-dispatcher-3] INFO  i.i.e.blockchain.sync.FastSync akka://SyncControllerSpec_System/user/$$kb/fast-sync - Starting block synchronization (fast mode), target block 399500
19:06:15.869 [SyncControllerSpec_System-akka.actor.default-dispatcher-4] INFO  i.i.e.blockchain.sync.FastSync akka://SyncControllerSpec_System/user/$$kb/fast-sync - Received 1 state nodes in 1 ms
19:06:17.869 [SyncControllerSpec_System-akka.actor.default-dispatcher-4] INFO  i.i.e.blockchain.sync.FastSync akka://SyncControllerSpec_System/user/$$kb/fast-sync - Received 1 block headers in 1 ms
19:06:19.978 [SyncControllerSpec_System-akka.actor.default-dispatcher-5] INFO  i.i.e.blockchain.sync.FastSync akka://SyncControllerSpec_System/user/$$kb/fast-sync - Received 1 receipts in 107 ms
19:06:20.081 [SyncControllerSpec_System-akka.actor.default-dispatcher-4] INFO  i.i.e.blockchain.sync.FastSync akka://SyncControllerSpec_System/user/$$kb/fast-sync - Received 1 block bodies in 94 ms
19:06:20.090 [SyncControllerSpec_System-akka.actor.default-dispatcher-4] INFO  i.i.e.blockchain.sync.FastSync akka://SyncControllerSpec_System/user/$$kb/fast-sync - Block synchronization in fast mode finished, switching to regular mode
19:06:20.093 [SyncControllerSpec_System-akka.actor.default-dispatcher-5] INFO  i.i.e.blockchain.sync.RegularSync akka://SyncControllerSpec_System/user/$$kb/regular-sync - Starting block synchronization
19:06:21.139 [SyncControllerSpec_System-akka.actor.default-dispatcher-7] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:06:22.208 [SyncControllerSpec_System-akka.actor.default-dispatcher-6] INFO  i.i.e.blockchain.sync.FastSync akka://SyncControllerSpec_System/user/$$lb/fast-sync - Trying to start block synchronization (fast mode)
19:06:22.209 [SyncControllerSpec_System-akka.actor.default-dispatcher-6] INFO  i.i.e.blockchain.sync.FastSync akka://SyncControllerSpec_System/user/$$lb/fast-sync - Starting block synchronization (fast mode), target block 399500
19:06:23.226 [SyncControllerSpec_System-akka.actor.default-dispatcher-7] INFO  i.i.e.blockchain.sync.FastSync akka://SyncControllerSpec_System/user/$$lb/fast-sync - Received 1 state nodes in 0 ms
19:06:25.419 [SyncControllerSpec_System-akka.actor.default-dispatcher-7] INFO  i.i.e.blockchain.sync.FastSync akka://SyncControllerSpec_System/user/$$lb/fast-sync - Received 1 block headers in 195 ms
19:06:25.436 [SyncControllerSpec_System-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:06:26.503 [SyncControllerSpec_System-akka.actor.default-dispatcher-3] INFO  i.i.e.blockchain.sync.FastSync akka://SyncControllerSpec_System/user/$$mb/fast-sync - Trying to start block synchronization (fast mode)
19:06:26.503 [SyncControllerSpec_System-akka.actor.default-dispatcher-3] INFO  i.i.e.blockchain.sync.FastSync akka://SyncControllerSpec_System/user/$$mb/fast-sync - Starting block synchronization (fast mode), target block 399500
19:06:39.568 [SyncControllerSpec_System-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:06:40.671 [SyncControllerSpec_System-akka.actor.default-dispatcher-2] INFO  i.i.e.blockchain.sync.FastSync akka://SyncControllerSpec_System/user/$$nb/fast-sync - Trying to start block synchronization (fast mode)
19:06:40.672 [SyncControllerSpec_System-akka.actor.default-dispatcher-2] INFO  i.i.e.b.s.FastSyncTargetBlockSelector akka://SyncControllerSpec_System/user/$$nb/fast-sync/target-block-selector - Block synchronization (fast mode) not started. Need at least 2 peers, but there are only 0 available at the moment. Retrying in 500 milliseconds
19:06:41.202 [SyncControllerSpec_System-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:06:41.265 [SyncControllerSpec_System-akka.actor.default-dispatcher-3] INFO  i.i.e.blockchain.sync.FastSync akka://SyncControllerSpec_System/user/$$ob - Trying to start block synchronization (fast mode)
19:06:41.266 [SyncControllerSpec_System-akka.actor.default-dispatcher-3] INFO  i.i.e.blockchain.sync.FastSync akka://SyncControllerSpec_System/user/$$ob - Starting block synchronization (fast mode), target block 3125369
19:06:42.281 [SyncControllerSpec_System-akka.actor.default-dispatcher-5] INFO  i.i.e.blockchain.sync.FastSync akka://SyncControllerSpec_System/user/$$ob - Received 0 block bodies in 1 ms
19:06:43.307 [SyncControllerSpec_System-akka.actor.default-dispatcher-5] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:06:43.375 [SyncControllerSpec_System-akka.actor.default-dispatcher-2] WARN  i.i.e.blockchain.sync.SyncController akka://SyncControllerSpec_System/user/$$pb - do-fast-sync is set to false but regular sync cannot start because fast sync hasn't completed
19:06:43.375 [SyncControllerSpec_System-akka.actor.default-dispatcher-2] INFO  i.i.e.blockchain.sync.FastSync akka://SyncControllerSpec_System/user/$$pb/fast-sync - Trying to start block synchronization (fast mode)
19:06:43.375 [SyncControllerSpec_System-akka.actor.default-dispatcher-2] INFO  i.i.e.blockchain.sync.FastSync akka://SyncControllerSpec_System/user/$$pb/fast-sync - Starting block synchronization (fast mode), target block 3125369
[0m[[0minfo[0m] [0m[32mSyncControllerSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mSyncController[0m[0m
[0m[[0minfo[0m] [0m[32m- should download target block and request state nodes (3 seconds, 717 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should download target block, request state, blocks and finish when downloaded (7 seconds, 343 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should throttle requests to peer (4 seconds, 279 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should not use (blacklist) a peer that fails to respond within time limit (14 seconds, 120 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should only use ETC peer to choose target block (1 second, 620 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should re-enqueue block bodies when empty response is received (2 seconds, 87 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should start fast sync after restart, if fast sync was partially ran and then regular sync started (1 second, 89 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mOmmersValidatorSpec:[0m[0m
[0m[[0minfo[0m] [0m[32m- should validate correctly a valid list of ommers (9 seconds, 9 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should report a failure if the list of ommers is too big (18 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should report a failure if there is an invalid header in the list of ommers (7 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should report a failure if there is an ommer that was previously used (45 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should report a failure if there is an ommer which is of the last ancestors (32 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should report a failure if there is an ommer too old (30 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should report a failure if there is a duplicated ommer in the ommer list (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mMemorySpec:[0m[0m
[0m[[0minfo[0m] [0m[32m- Store a Byte (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Store an UInt256 (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Store an Array[Byte] (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Store a ByteString (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Load an UInt256 (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Load a ByteString (5 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- Correctly increase memory size when storing (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- Correctly increase memory size when loading (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- Correctly increase memory size when expanding (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32mTransactionMappingStorageSuite:[0m[0m
[0m[[0minfo[0m] [0m[32m- TransactionMappingStorage insert (57 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- TransactionMappingStorage delete (38 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mAesCbcSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mAES_CBC[0m[0m
[0m[[0minfo[0m] [0m[32m- should correctly evaluate for the test vectors (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should decrypt encrypted random values (5 milliseconds)[0m[0m
19:06:53.770 [Testsystem-akka.actor.default-dispatcher-5] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:06:53.864 [Testsystem-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
19:06:53.896 [Testsystem-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger  - Slf4jLogger started
[0m[[0minfo[0m] [0m[32mNetServiceSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mNetService[0m[0m
[0m[[0minfo[0m] [0m[32m- should return handshaked peer count (95 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return listening response (32 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return version response (33 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mBlockHeaderValidatorSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mBlockHeaderValidator[0m[0m
[0m[[0minfo[0m] [0m[32m- should validate correctly formed BlockHeaders (13 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return a failure if created based on invalid extra data (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should validate DAO block (extra data) (1 minute, 13 seconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return a failure if created based on invalid timestamp (15 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return a failure if created based on invalid difficulty (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return a failure if created based on invalid gas used (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return a failure if created based on invalid gas limit (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return a failure if created with gas limit above threshold and block number >= eip106 block number (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return a failure if created based on invalid number (2 seconds, 929 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return a failure if created based on invalid nonce/mixHash (52 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should validate correctly a block whose parent is in storage (17 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return a failure if the parent's header is not in storage (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should properly validate a block after difficulty bomb pause (23 seconds, 501 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should properly calculate the difficulty after difficulty bomb resume (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32mContractCreationSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mLedger[0m[0m
[0m[[0minfo[0m] [0m[32m- should return an error if new contract's code size is larger than the limit (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should not return an error if new contract's code size is smaller than the limit (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m- should fail to execute contract creation code in case of address conflict (non-empty code) *** FAILED *** (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.ContractCreationSpec$ContractCreatingTx.$init$(ContractCreationSpec.scala:181)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.ContractCreationSpec$$anon$1.<init>(ContractCreationSpec.scala:63)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.ContractCreationSpec.$anonfun$new$3(ContractCreationSpec.scala:63)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should fail to execute contract creation code in case of address conflict (non-zero nonce) *** FAILED *** (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.ContractCreationSpec$ContractCreatingTx.$init$(ContractCreationSpec.scala:181)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.ContractCreationSpec$$anon$2.<init>(ContractCreationSpec.scala:73)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.ContractCreationSpec.$anonfun$new$4(ContractCreationSpec.scala:73)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should succeed in creating a contract if the account already has some balance, but zero nonce and empty code *** FAILED *** (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.ContractCreationSpec$ContractCreatingTx.$init$(ContractCreationSpec.scala:181)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.ContractCreationSpec$$anon$3.<init>(ContractCreationSpec.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.ContractCreationSpec.$anonfun$new$5(ContractCreationSpec.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should initialise a new contract account with zero nonce before EIP-161 *** FAILED *** (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.ContractCreationSpec$ContractCreatingTx.$init$(ContractCreationSpec.scala:181)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.ContractCreationSpec$$anon$4.<init>(ContractCreationSpec.scala:99)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.ContractCreationSpec.$anonfun$new$6(ContractCreationSpec.scala:99)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should initialise a new contract account with incremented nonce after EIP-161 *** FAILED *** (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.ContractCreationSpec$ContractCreatingTx.$init$(ContractCreationSpec.scala:181)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.ContractCreationSpec$$anon$5.<init>(ContractCreationSpec.scala:112)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.ledger.ContractCreationSpec.$anonfun$new$7(ContractCreationSpec.scala:112)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
19:08:33.656 [pool-4-thread-5-ScalaTest-running-BlockGeneratorSpec] INFO  i.i.e.b.data.GenesisDataLoader  - Using custom genesis data from: test-genesis.json
19:08:33.684 [pool-4-thread-5-ScalaTest-running-BlockGeneratorSpec] INFO  i.i.e.b.data.GenesisDataLoader  - Genesis data successfully loaded
19:08:33.693 [pool-4-thread-5-ScalaTest-running-BlockGeneratorSpec] INFO  i.i.e.b.data.GenesisDataLoader  - Using custom genesis data from: test-genesis.json
19:08:33.696 [pool-4-thread-5-ScalaTest-running-BlockGeneratorSpec] INFO  i.i.e.b.data.GenesisDataLoader  - Genesis data successfully loaded
19:08:33.708 [pool-4-thread-5-ScalaTest-running-BlockGeneratorSpec] INFO  i.i.e.b.data.GenesisDataLoader  - Using custom genesis data from: test-genesis.json
19:08:33.711 [pool-4-thread-5-ScalaTest-running-BlockGeneratorSpec] INFO  i.i.e.b.data.GenesisDataLoader  - Genesis data successfully loaded
19:08:33.744 [pool-4-thread-5-ScalaTest-running-BlockGeneratorSpec] INFO  i.i.e.b.data.GenesisDataLoader  - Using custom genesis data from: test-genesis.json
19:08:33.748 [pool-4-thread-5-ScalaTest-running-BlockGeneratorSpec] INFO  i.i.e.b.data.GenesisDataLoader  - Genesis data successfully loaded
19:08:33.769 [pool-4-thread-5-ScalaTest-running-BlockGeneratorSpec] INFO  i.i.e.b.data.GenesisDataLoader  - Using custom genesis data from: test-genesis.json
19:08:33.771 [pool-4-thread-5-ScalaTest-running-BlockGeneratorSpec] INFO  i.i.e.b.data.GenesisDataLoader  - Genesis data successfully loaded
19:08:33.796 [pool-4-thread-5-ScalaTest-running-BlockGeneratorSpec] INFO  i.i.e.b.data.GenesisDataLoader  - Using custom genesis data from: test-genesis.json
19:08:33.798 [pool-4-thread-5-ScalaTest-running-BlockGeneratorSpec] INFO  i.i.e.b.data.GenesisDataLoader  - Genesis data successfully loaded
19:08:33.820 [pool-4-thread-5-ScalaTest-running-BlockGeneratorSpec] INFO  i.i.e.b.data.GenesisDataLoader  - Using custom genesis data from: test-genesis.json
19:08:33.822 [pool-4-thread-5-ScalaTest-running-BlockGeneratorSpec] INFO  i.i.e.b.data.GenesisDataLoader  - Genesis data successfully loaded
19:08:33.843 [pool-4-thread-5-ScalaTest-running-BlockGeneratorSpec] INFO  i.i.e.b.data.GenesisDataLoader  - Using custom genesis data from: test-genesis.json
19:08:33.844 [pool-4-thread-5-ScalaTest-running-BlockGeneratorSpec] INFO  i.i.e.b.data.GenesisDataLoader  - Genesis data successfully loaded
19:08:33.873 [pool-4-thread-5-ScalaTest-running-BlockGeneratorSpec] INFO  i.i.e.b.data.GenesisDataLoader  - Using custom genesis data from: test-genesis.json
19:08:33.876 [pool-4-thread-5-ScalaTest-running-BlockGeneratorSpec] INFO  i.i.e.b.data.GenesisDataLoader  - Genesis data successfully loaded
[0m[[0minfo[0m] [0m[32mBlockGeneratorSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mBlockGenerator[0m[0m
[0m[[0minfo[0m] [0m[31m- should generate correct block with empty transactions *** FAILED *** (46 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.mining.BlockGenerator.prepareHeader(BlockGenerator.scala:112)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.mining.BlockGenerator.$anonfun$generateBlockForMining$1(BlockGenerator.scala:39)[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.util.Either.flatMap(Either.scala:284)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.mining.BlockGenerator.generateBlockForMining(BlockGenerator.scala:37)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.mining.BlockGeneratorSpec$$anon$1.<init>(BlockGeneratorSpec.scala:28)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.mining.BlockGeneratorSpec.$anonfun$new$1(BlockGeneratorSpec.scala:27)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should generate correct block with transactions *** FAILED *** (14 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.mining.BlockGenerator.prepareHeader(BlockGenerator.scala:112)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.mining.BlockGenerator.$anonfun$generateBlockForMining$1(BlockGenerator.scala:39)[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.util.Either.flatMap(Either.scala:284)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.mining.BlockGenerator.generateBlockForMining(BlockGenerator.scala:37)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.mining.BlockGeneratorSpec$$anon$2.<init>(BlockGeneratorSpec.scala:44)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.mining.BlockGeneratorSpec.$anonfun$new$5(BlockGeneratorSpec.scala:43)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should filter out failing transactions *** FAILED *** (35 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.mining.BlockGenerator.prepareHeader(BlockGenerator.scala:112)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.mining.BlockGenerator.$anonfun$generateBlockForMining$1(BlockGenerator.scala:39)[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.util.Either.flatMap(Either.scala:284)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.mining.BlockGenerator.generateBlockForMining(BlockGenerator.scala:37)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.mining.BlockGeneratorSpec$$anon$3.<init>(BlockGeneratorSpec.scala:61)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.mining.BlockGeneratorSpec.$anonfun$new$9(BlockGeneratorSpec.scala:59)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should filter out transactions exceeding block gas limit and include correct transactions *** FAILED *** (23 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.mining.BlockGenerator.prepareHeader(BlockGenerator.scala:112)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.mining.BlockGenerator.$anonfun$generateBlockForMining$1(BlockGenerator.scala:39)[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.util.Either.flatMap(Either.scala:284)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.mining.BlockGenerator.generateBlockForMining(BlockGenerator.scala:37)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.mining.BlockGeneratorSpec$$anon$4.<init>(BlockGeneratorSpec.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.mining.BlockGeneratorSpec.$anonfun$new$14(BlockGeneratorSpec.scala:77)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should generate block before eip155 and filter out chain specific tx *** FAILED *** (27 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.mining.BlockGenerator.prepareHeader(BlockGenerator.scala:112)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.mining.BlockGenerator.$anonfun$generateBlockForMining$1(BlockGenerator.scala:39)[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.util.Either.flatMap(Either.scala:284)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.mining.BlockGenerator.generateBlockForMining(BlockGenerator.scala:37)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.mining.BlockGeneratorSpec$$anon$5.<init>(BlockGeneratorSpec.scala:127)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.mining.BlockGeneratorSpec.$anonfun$new$19(BlockGeneratorSpec.scala:101)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should generate block after eip155 and allow both chain specific and general transactions *** FAILED *** (23 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.mining.BlockGenerator.prepareHeader(BlockGenerator.scala:112)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.mining.BlockGenerator.$anonfun$generateBlockForMining$1(BlockGenerator.scala:39)[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.util.Either.flatMap(Either.scala:284)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.mining.BlockGenerator.generateBlockForMining(BlockGenerator.scala:37)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.mining.BlockGeneratorSpec$$anon$6.<init>(BlockGeneratorSpec.scala:147)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.mining.BlockGeneratorSpec.$anonfun$new$24(BlockGeneratorSpec.scala:143)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should include consecutive transactions from single sender *** FAILED *** (23 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.mining.BlockGenerator.prepareHeader(BlockGenerator.scala:112)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.mining.BlockGenerator.$anonfun$generateBlockForMining$1(BlockGenerator.scala:39)[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.util.Either.flatMap(Either.scala:284)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.mining.BlockGenerator.generateBlockForMining(BlockGenerator.scala:37)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.mining.BlockGeneratorSpec$$anon$7.<init>(BlockGeneratorSpec.scala:167)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.mining.BlockGeneratorSpec.$anonfun$new$29(BlockGeneratorSpec.scala:163)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should filter out failing transaction from the middle of tx list *** FAILED *** (29 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.mining.BlockGenerator.prepareHeader(BlockGenerator.scala:112)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.mining.BlockGenerator.$anonfun$generateBlockForMining$1(BlockGenerator.scala:39)[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.util.Either.flatMap(Either.scala:284)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.mining.BlockGenerator.generateBlockForMining(BlockGenerator.scala:37)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.mining.BlockGeneratorSpec$$anon$8.<init>(BlockGeneratorSpec.scala:200)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.mining.BlockGeneratorSpec.$anonfun$new$34(BlockGeneratorSpec.scala:183)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[31m- should include transaction with higher gas price if nonce is the same *** FAILED *** (17 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.AssertionError: assertion failed: Bad value for receiptsRoot  0[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.assert(Predef.scala:219)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.domain.BlockHeader.<init>(BlockHeader.scala:51)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.mining.BlockGenerator.prepareHeader(BlockGenerator.scala:112)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.mining.BlockGenerator.$anonfun$generateBlockForMining$1(BlockGenerator.scala:39)[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.util.Either.flatMap(Either.scala:284)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.mining.BlockGenerator.generateBlockForMining(BlockGenerator.scala:37)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.mining.BlockGeneratorSpec$$anon$9.<init>(BlockGeneratorSpec.scala:223)[0m[0m
[0m[[0minfo[0m] [0m[31m  at io.iohk.ethereum.mining.BlockGeneratorSpec.$anonfun$new$39(BlockGeneratorSpec.scala:216)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[32mValidationsAfterExecutionSpec:[0m[0m
[0m[[0minfo[0m] [0m[32m- should report valid results from execution as correct (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should report as invalid a block that doesn't have the correct gas used (2 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should report as invalid a block that doesn't have the correct state root hash (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should report as invalid a block that doesn't have the correct receipts information (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mBloomFilterSpec:[0m[0m
[0m[[0minfo[0m] [0m[32m- should properly create the bloom filter for without logs (0 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should properly create the bloom filter for with one log entry with one topic (1 millisecond)[0m[0m
[0m[[0minfo[0m] [0m[32m- should properly create the bloom filter for with many logs (4 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32mBlockRewardCalculatorSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mBlockRewardCalculator[0m[0m
[0m[[0minfo[0m] [0m[32m- should correctly calculate block and ommer rewards (3 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should be compliant with ECIP1039 for block reward including zero, one or two, uncles until 50 era (6 milliseconds)[0m[0m
[0m[[0minfo[0m] [0m[32m- should be compliant with ECIP1039 for block reward including two uncles until 200 era (11 milliseconds)[0m[0m
[0m[[0minfo[0m] [0mScalaTest[0m
[0m[[0minfo[0m] [0m[36mRun completed in 7 minutes, 5 seconds.[0m[0m
[0m[[0minfo[0m] [0m[36mTotal number of tests run: 1066[0m[0m
[0m[[0minfo[0m] [0m[36mSuites: completed 93, aborted 0[0m[0m
[0m[[0minfo[0m] [0m[36mTests: succeeded 852, failed 214, canceled 0, ignored 0, pending 0[0m[0m
[0m[[0minfo[0m] [0m[31m*** 214 TESTS FAILED ***[0m[0m
[0m[[31merror[0m] [0mFailed: Total 1066, Failed 214, Errors 0, Passed 852[0m
[0m[[31merror[0m] [0mFailed tests:[0m
[0m[[31merror[0m] [0m	io.iohk.ethereum.ledger.BlockImportSpec[0m
[0m[[31merror[0m] [0m	io.iohk.ethereum.ledger.LedgerSpec[0m
[0m[[31merror[0m] [0m	io.iohk.ethereum.mining.BlockGeneratorSpec[0m
[0m[[31merror[0m] [0m	io.iohk.ethereum.jsonrpc.JsonRpcControllerSpec[0m
[0m[[31merror[0m] [0m	io.iohk.ethereum.ledger.BlockQueueSpec[0m
[0m[[31merror[0m] [0m	io.iohk.ethereum.blockchain.sync.FastSyncStateStorageActorSpec[0m
[0m[[31merror[0m] [0m	io.iohk.ethereum.blockchain.sync.RegularSyncSpec[0m
[0m[[31merror[0m] [0m	io.iohk.ethereum.ledger.ContractCreationSpec[0m
[0m[[31merror[0m] [0m	io.iohk.ethereum.jsonrpc.EthServiceSpec[0m
[0m[[31merror[0m] [0m	io.iohk.ethereum.network.p2p.PeerActorSpec[0m
[0m[[31merror[0m] [0m(test:[31mtest[0m) sbt.TestsFailedException: Tests unsuccessful[0m
[0m[[31merror[0m] [0mTotal time: 440 s, completed Feb 20, 2018 7:08:35 PM[0m
